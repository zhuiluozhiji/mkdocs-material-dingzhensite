{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Home","text":"<p>Getting Started with MkDocs Material</p>"},{"location":"#changing-the-colors","title":"Changing the colors","text":"<p>As any proper Material Design implementation, Material for MkDocs supports Google's original color palette, which can be easily configured through <code>mkdocs.yml</code>. Furthermore, colors can be customized with a few lines of CSS to fit your brand's identity by using CSS variables.</p>"},{"location":"#configuration","title":"Configuration","text":""},{"location":"#color-palette","title":"Color palette","text":""},{"location":"#color-scheme","title":"Color scheme","text":"<p>Material for MkDocs supports two color schemes: a light mode, which is just called <code>default</code>, and a dark mode, which is called <code>slate</code>. The color scheme can be set via <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  palette:\n    scheme: default\n</code></pre> <p>Click on a tile to change the color scheme:</p> <code>default</code> <code>slate</code>"},{"location":"#primary-color","title":"Primary color","text":"<p>The primary color is used for the header, the sidebar, text links and several other components. In order to change the primary color, set the following value in <code>mkdocs.yml</code> to a valid color name:</p> <pre><code>theme:\n  palette:\n    primary: indigo\n</code></pre> <p>Click on a tile to change the primary color:</p> <code>red</code> <code>pink</code> <code>purple</code> <code>deep purple</code> <code>indigo</code> <code>blue</code> <code>light blue</code> <code>cyan</code> <code>teal</code> <code>green</code> <code>light green</code> <code>lime</code> <code>yellow</code> <code>amber</code> <code>orange</code> <code>deep orange</code> <code>brown</code> <code>grey</code> <code>blue grey</code> <code>black</code> <code>white</code> <p>See our guide below to learn how to set custom colors.</p>"},{"location":"#accent-color","title":"Accent color","text":"<p>The accent color is used to denote elements that can be interacted with, e.g. hovered links, buttons and scrollbars. It can be changed in <code>mkdocs.yml</code> by choosing a valid color name:</p> <pre><code>theme:\n  palette:\n    accent: indigo\n</code></pre> <p>Click on a tile to change the accent color:</p> <code>red</code> <code>pink</code> <code>purple</code> <code>deep purple</code> <code>indigo</code> <code>blue</code> <code>light blue</code> <code>cyan</code> <code>teal</code> <code>green</code> <code>light green</code> <code>lime</code> <code>yellow</code> <code>amber</code> <code>orange</code> <code>deep orange</code> <p>See our guide below to learn how to set custom colors.</p>"},{"location":"#color-palette-toggle","title":"Color palette toggle","text":"<p>Offering a light and dark color palette makes your documentation pleasant to read at different times of the day, so the user can choose accordingly. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  palette: # (1)!\n\n    # Palette toggle for light mode\n    - scheme: default\n      toggle:\n        icon: material/brightness-7 # (2)!\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - scheme: slate\n      toggle:\n        icon: material/brightness-4\n        name: Switch to light mode\n</code></pre> <ol> <li> <p>Note that the <code>theme.palette</code> setting is now defined as a list.</p> </li> <li> <p>Enter a few keywords to find the perfect icon using our icon search and     click on the shortcode to copy it to your clipboard:</p> <p> <ol></ol> </p> </li> </ol> <p>This configuration will render a color palette toggle next to the search bar. Note that you can also define separate settings for <code>primary</code> and <code>accent</code> per color palette.</p> <p>The following properties must be set for each toggle:</p> <p>  This property must point to a valid icon path referencing any icon bundled with the theme, or the build will not succeed. Some popular combinations:</p> <ul> <li> +  \u2013 <code>material/brightness-7</code> + <code>material/brightness-4</code></li> <li> +  \u2013 <code>material/toggle-switch</code> + <code>material/toggle-switch-off-outline</code></li> <li> +  \u2013 <code>material/weather-night</code> + <code>material/weather-sunny</code></li> <li> +  \u2013 <code>material/eye</code> + <code>material/eye-outline</code></li> <li> +  \u2013 <code>material/lightbulb</code> + <code>material/lightbulb-outline</code></li> </ul> <p>  This property is used as the toggle's <code>title</code> attribute and should be set to a discernable name to improve accessibility. It's rendered as a tooltip.</p>"},{"location":"#system-preference","title":"System preference","text":"<p>Each color palette can be linked to the user's system preference for light and dark appearance by using a media query. Simply add a <code>media</code> property next to the <code>scheme</code> definition in <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  palette:\n\n    # Palette toggle for light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      toggle:\n        icon: material/brightness-4\n        name: Switch to light mode\n</code></pre> <p>When the user first visits your site, the media queries are evaluated in the order of their definition. The first media query that matches selects the default color palette.</p>"},{"location":"#automatic-light-dark-mode","title":"Automatic light / dark mode","text":"<p>Newer operating systems allow to automatically switch between light and dark appearance during day and night times. Material for MkDocs adds support for automatic light / dark mode, delegating color palette selection to the user's operating system. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  palette:\n\n    # Palette toggle for automatic mode\n    - media: \"(prefers-color-scheme)\"\n      toggle:\n        icon: material/brightness-auto\n        name: Switch to light mode\n\n    # Palette toggle for light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default # (1)!\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      toggle:\n        icon: material/brightness-4\n        name: Switch to system preference\n</code></pre> <ol> <li>You can also define separate settings for <code>primary</code> and     <code>accent</code> per color palette, i.e. different colors for     light and dark mode.</li> </ol> <p>Material for MkDocs will now change the color palette each time the operating system switches between light and dark appearance, even when the user doesn't reload the site.</p>"},{"location":"#customization","title":"Customization","text":""},{"location":"#custom-colors","title":"Custom colors","text":"<p>Material for MkDocs implements colors using CSS variables (custom properties). If you want to customize the colors beyond the palette (e.g. to use your brand-specific colors), you can add an additional style sheet and tweak the values of the CSS variables.</p> <p>First, set the <code>primary</code> or <code>accent</code> values in <code>mkdocs.yml</code> to <code>custom</code>, to signal to the theme that you want to define custom colors, e.g., when you want to override the <code>primary</code> color:</p> <pre><code>theme:\n  palette:\n    primary: custom\n</code></pre> <p>Let's say you're  YouTube, and want to set the primary color to your brand's palette. Just add:</p> <code>docs/stylesheets/extra.css</code> <code>mkdocs.yml</code> <pre><code>:root  &gt; * {\n  --md-primary-fg-color:        #EE0F0F;\n  --md-primary-fg-color--light: #ECB7B7;\n  --md-primary-fg-color--dark:  #90030C;\n}\n</code></pre> <pre><code>extra_css:\n  - stylesheets/extra.css\n</code></pre> <p>See the file containing the color definitions for a list of all CSS variables.</p>"},{"location":"#custom-color-schemes","title":"Custom color schemes","text":"<p>Besides overriding specific colors, you can create your own, named color scheme by wrapping the definitions in a <code>[data-md-color-scheme=\"...\"]</code> attribute selector, which you can then set via <code>mkdocs.yml</code> as described in the color schemes section:</p> <code>docs/stylesheets/extra.css</code> <code>mkdocs.yml</code> <pre><code>[data-md-color-scheme=\"youtube\"] {\n  --md-primary-fg-color:        #EE0F0F;\n  --md-primary-fg-color--light: #ECB7B7;\n  --md-primary-fg-color--dark:  #90030C;\n}\n</code></pre> <pre><code>theme:\n  palette:\n    scheme: youtube\nextra_css:\n  - stylesheets/extra.css\n</code></pre> <p>Additionally, the <code>slate</code> color scheme defines all of it's colors via <code>hsla</code> color functions and deduces its colors from the <code>--md-hue</code> CSS variable. You can tune the <code>slate</code> theme with:</p> <pre><code>[data-md-color-scheme=\"slate\"] {\n  --md-hue: 210; /* (1)! */\n}\n</code></pre> <ol> <li>The <code>hue</code> value must be in the range of <code>[0, 360]</code></li> </ol>"},{"location":"liuyanban/","title":"\u7545\u6240\u6b32\u8a00","text":""},{"location":"tag/","title":"Tags","text":"<p>Tip</p> <p>\u4ee5\u4e0b\u662f\u76f8\u5173\u6807\u7b7e\u7684\u5217\u8868</p>"},{"location":"cpp/cpp_learning/","title":"\ud83d\udcbb cpp learning","text":""},{"location":"cpp/cpp_learning/#hash","title":"hash","text":"<p><code>unordered_set</code> \u548c <code>unordered_map</code> \u662f C++ \u6807\u51c6\u5e93\u4e2d\u7684\u5173\u8054\u5bb9\u5668\uff0c\u5b83\u4eec\u4e0e <code>set</code> \u548c <code>map</code> \u7c7b\u4f3c\uff0c\u4f46\u4e0e <code>set</code> \u548c <code>map</code> \u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4eec\u5e76\u4e0d\u4fdd\u6301\u5143\u7d20\u7684\u987a\u5e8f\uff0c\u800c\u662f\u57fa\u4e8e\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u76f8\u6bd4\u4e8e <code>set</code> \u548c <code>map</code>\uff08\u57fa\u4e8e\u7ea2\u9ed1\u6811\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(log n)\uff09\uff0c\u6027\u80fd\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u53ef\u80fd\u66f4\u597d\u3002</p>"},{"location":"cpp/cpp_learning/#1-unordered_set","title":"1. <code>unordered_set</code>:","text":"<p><code>unordered_set</code> \u662f\u4e00\u4e2a\u4e0d\u5141\u8bb8\u91cd\u590d\u5143\u7d20\u7684\u96c6\u5408\uff0c\u5b83\u901a\u8fc7\u54c8\u5e0c\u8868\u6765\u5b58\u50a8\u5143\u7d20\uff0c\u56e0\u6b64\u5143\u7d20\u7684\u987a\u5e8f\u662f\u4e0d\u53ef\u9884\u6d4b\u7684\u3002</p> <ul> <li>\u793a\u4f8b\u4ee3\u7801\uff1a</li> </ul> <pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_set&gt;\n\nusing namespace std;\n\nint main() {\n    unordered_set&lt;int&gt; uset;  // \u521b\u5efa\u4e00\u4e2aunordered_set\u5bb9\u5668\n\n    // \u63d2\u5165\u5143\u7d20\n    uset.insert(10);\n    uset.insert(20);\n    uset.insert(30);\n    uset.insert(20);  // 20\u4f1a\u88ab\u5ffd\u7565\uff0c\u56e0\u4e3aunordered_set\u4e0d\u5141\u8bb8\u91cd\u590d\u5143\u7d20\n\n    // \u67e5\u627e\u5143\u7d20\n    if (uset.find(10) != uset.end()) {\n        cout &lt;&lt; \"10 found in the unordered_set.\" &lt;&lt; endl;\n    }\n\n    // \u8f93\u51fa\u5bb9\u5668\u4e2d\u7684\u6240\u6709\u5143\u7d20\n    cout &lt;&lt; \"Elements in the unordered_set: \";\n    for (const int&amp; val : uset) {\n        cout &lt;&lt; val &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n    // \u5220\u9664\u5143\u7d20\n    uset.erase(20);\n\n    cout &lt;&lt; \"After erasing 20, elements in the unordered_set: \";\n    for (const int&amp; val : uset) {\n        cout &lt;&lt; val &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <ul> <li> <p>\u4e3b\u8981\u64cd\u4f5c\uff1a</p> </li> <li> <p><code>insert(value)</code>\uff1a\u63d2\u5165\u4e00\u4e2a\u5143\u7d20\uff0c\u82e5\u5143\u7d20\u5df2\u5b58\u5728\uff0c\u5219\u63d2\u5165\u5931\u8d25\u3002</p> </li> <li><code>find(value)</code>\uff1a\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\uff0c\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u6307\u5411\u8be5\u5143\u7d20\uff08\u5982\u679c\u627e\u5230\uff09\u6216 <code>end()</code>\u3002</li> <li><code>erase(value)</code>\uff1a\u5220\u9664\u6307\u5b9a\u7684\u5143\u7d20\u3002</li> <li><code>size()</code>\uff1a\u8fd4\u56de\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002</li> <li><code>empty()</code>\uff1a\u68c0\u67e5\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a\u3002</li> </ul>"},{"location":"cpp/cpp_learning/#2-unordered_map","title":"2. <code>unordered_map</code>:","text":"<p><code>unordered_map</code> \u662f\u4e00\u4e2a\u57fa\u4e8e\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\u5173\u8054\u5bb9\u5668\uff0c\u5b83\u5b58\u50a8\u952e\u503c\u5bf9\uff0c\u6bcf\u4e2a\u952e\u53ea\u80fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u503c\u3002\u4e0e <code>unordered_set</code> \u4e0d\u540c\u7684\u662f\uff0c<code>unordered_map</code> \u5141\u8bb8\u6839\u636e\u952e\u503c\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u3002</p> <ol> <li>\u7528\u6cd5\uff1a</li> </ol> <ul> <li>\u5b83\u63d0\u4f9b\u4e86\u901a\u8fc7\u952e\u8bbf\u95ee\u503c\u7684\u80fd\u529b\uff0c\u952e\u662f\u552f\u4e00\u7684\uff0c\u503c\u53ef\u4ee5\u91cd\u590d\u3002</li> <li>\u952e\u662f\u54c8\u5e0c\u8868\u4e2d\u7684\u54c8\u5e0c\u503c\uff0c\u7528\u4e8e\u5728 \u5e38\u6570\u65f6\u95f4 \u5185\u67e5\u627e\u5bf9\u5e94\u7684\u503c\u3002</li> </ul> <ol> <li>\u793a\u4f8b\u4ee3\u7801\uff1a</li> </ol> <pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_map&gt;\n\nusing namespace std;\n\nint main() {\n    unordered_map&lt;int, string&gt; umap;\n\n    // \u63d2\u5165\u952e\u503c\u5bf9\n    umap[1] = \"apple\";\n    umap[2] = \"banana\";\n    umap[3] = \"cherry\";\n\n    // \u67e5\u627e\u952e\u662f\u5426\u5b58\u5728\n    if (umap.find(2) != umap.end()) {\n        cout &lt;&lt; \"Key 2 found, value: \" &lt;&lt; umap[2] &lt;&lt; endl;\n    }\n\n    // \u8f93\u51faunordered_map\u4e2d\u7684\u6240\u6709\u5143\u7d20\n    cout &lt;&lt; \"Elements in the unordered_map:\" &lt;&lt; endl;\n    for (const auto&amp; pair : umap) {\n        cout &lt;&lt; \"Key: \" &lt;&lt; pair.first &lt;&lt; \", Value: \" &lt;&lt; pair.second &lt;&lt; endl;\n    }\n\n    // \u5220\u9664\u5143\u7d20\n    umap.erase(2);  // \u5220\u9664\u952e\u4e3a2\u7684\u5143\u7d20\n\n    cout &lt;&lt; \"After erasing key 2, elements in the unordered_map:\" &lt;&lt; endl;\n    for (const auto&amp; pair : umap) {\n        cout &lt;&lt; \"Key: \" &lt;&lt; pair.first &lt;&lt; \", Value: \" &lt;&lt; pair.second &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre> <ol> <li>\u4e3b\u8981\u64cd\u4f5c\uff1a</li> </ol> <ul> <li><code>insert({key, value})</code> \u6216 <code>operator[]</code>\uff1a\u63d2\u5165\u4e00\u4e2a\u952e\u503c\u5bf9\u3002\u5982\u679c\u952e\u5df2\u5b58\u5728\uff0c<code>operator[]</code> \u4f1a\u66f4\u65b0\u5176\u5bf9\u5e94\u7684\u503c\u3002</li> <li><code>find(key)</code>\uff1a\u67e5\u627e\u952e <code>key</code> \u5bf9\u5e94\u7684\u503c\u3002\u5982\u679c\u952e\u5b58\u5728\uff0c\u8fd4\u56de\u6307\u5411\u8be5\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u5426\u5219\u8fd4\u56de <code>end()</code>\u3002</li> <li><code>erase(key)</code>\uff1a\u5220\u9664\u6307\u5b9a\u952e\u7684\u5143\u7d20\u3002</li> <li><code>size()</code>\uff1a\u8fd4\u56de\u5bb9\u5668\u4e2d\u952e\u503c\u5bf9\u7684\u4e2a\u6570\u3002</li> <li><code>empty()</code>\uff1a\u68c0\u67e5\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a\u3002</li> </ul> <ol> <li>\u603b\u7ed3\uff1a</li> </ol> <ul> <li>\u4e24\u8005\u90fd\u63d0\u4f9b\u5e38\u6570\u65f6\u95f4\u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u56e0\u6b64\u5728\u9700\u8981\u5feb\u901f\u67e5\u627e\u7684\u573a\u666f\u4e0b\u975e\u5e38\u6709\u7528\u3002</li> </ul> <p>1. Hash \u7684\u63d2\u5165\u53ef\u4ee5\u6709\u8fd9\u6837\u7684\u64cd\u4f5c</p> <pre><code>Unordered_map &lt;string,int&gt; result;\nResult[\u201caa\u201d] = 23;\n</code></pre> <p>\u4f5c\u4e3a\u5bf9\u6bd4\uff1aVector \u7684\u63d2\u5165\u4e0d\u53ef\u4ee5\u76f4\u63a5\u7528\u6570\u7ec4\u7684\u65b9\u5f0f\uff0c\u5fc5\u987b\u4f7f\u7528 <code>emplace_back/push_back</code> \u6216\u8005 <code>insert(\u201cposition\u201d,things)</code>;</p> <p>\u6216\u8005\u53ef\u4ee5\u4f7f\u7528\uff1a</p> <pre><code>unordered_map&lt;int,int&gt; m; //&lt;string,string&gt;,&lt;char,char&gt;,\u6570\u636e\u7c7b\u578b\u4efb\u610f\nm.insert(pair&lt;int,int&gt;(1, 10));\nm.insert(pair&lt;int,int&gt;(2, 20));\n</code></pre> <p>2. Hash \u7684\u904d\u5386</p> <ul> <li> <p>\u7b2c\u4e00\u79cd\u904d\u5386\uff1a</p> <p><pre><code>unordered_map&lt;int,int&gt; count;\nfor(auto p : count){\n    int front = p.first;//key\n    int end = p.second;//value\n}\n</code></pre>    - \u7b2c\u4e8c\u79cd\u904d\u5386\uff1a</p> </li> </ul> <p><pre><code>unordered_map&lt;int,int&gt; count;\nfor(auto iter = count.begin();iter!=count.end();iter++){\n    int front = iter-&gt;first;//key\n    int end = iter-&gt;second;//value\n}\n</code></pre> \u5173\u4e8eiterator :</p> <p>eg1  : auto_iterator : <pre><code>    vector&lt;string&gt; v6 = { \"hi\",\"my\",\"name\",\"is\",\"lee\" };\n    //for (vector&lt;string&gt;::iterator iter = v6.begin(); iter != v6.end(); iter++)\n    for (auto iter = v6.begin(); iter != v6.end(); iter++)\n    {\n        cout &lt;&lt; *iter &lt;&lt; \" \";\n        //\u4e0b\u9762\u4e24\u79cd\u65b9\u6cd5\u90fd\u884c\n        cout &lt;&lt; (*iter).empty() &lt;&lt; \" \";\n        cout &lt;&lt; iter-&gt;empty() &lt;&lt; endl; \n    }\n</code></pre> it turns out that :  <pre><code>hi 0 0\nmy 0 0\nname 0 0\nis 0 0\nlee 0 0\n</code></pre></p> <p>eg2:  auto_iterator() <pre><code>    string s[7] = {\"aa\",\"bb\",\"cc\",\"dd\",\"ee\",\"ff\",\"gg\"};\n    vector&lt;string&gt; words(s,s+7);\n    cout &lt;&lt; \"not insert things yet!\" &lt;&lt; endl; \n    for(auto w:words){  //pay attention to this for_iteration\n        cout &lt;&lt; w&lt;&lt;\" \" ;\n    }\n    words.insert(words.begin()+3,\"-insertion-\");  \n    cout &lt;&lt; endl &lt;&lt; \"after insert\" &lt;&lt; endl ; \n    for(auto w:words){\n        cout &lt;&lt; w&lt;&lt;\" \" ;\n    }\n</code></pre> it turn out that: <pre><code>not insert things yet!\naa bb cc dd ee ff gg\nafter insert\naa bb cc  -insertion-  dd ee ff gg\n</code></pre></p> <p>eg3:  vec_iterator: <code>vector.front(),vector.back()</code> VS <code>vector.begin(),vector.end()</code></p> <p><pre><code> vector&lt;char&gt; v1;\n vector&lt;char&gt;::iterator iter1;\n vector&lt;char&gt;::iterator iter2;\n v1.push_back('m');\n v1.push_back('n');\n v1.push_back('o');\n v1.push_back('p');\n\n cout &lt;&lt; \"v1.front() = \" &lt;&lt; v1[0] &lt;&lt; endl;\n cout &lt;&lt; \"v1.back() = \" &lt;&lt; v1.back() &lt;&lt; endl;\n\n iter1 = v1.begin();\n cout &lt;&lt; *iter1 &lt;&lt; endl;\n cout &lt;&lt;*v1.begin()&lt;&lt;endl;\n iter2 = v1.end()-1;    //\u6ce8\u610fv1.end()\u6307\u5411\u7684\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8bbf\u95ee\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u6b63\u786e\u64cd\u4f5c\u4e3a\uff1av1.end() - 1;\n cout &lt;&lt; *iter2 &lt;&lt; endl;\n cout &lt;&lt;*(v1.end()-1)&lt;&lt;endl;\n</code></pre> it turn out that: <pre><code>v1.front() = m\nv1.back() = p\nm\nm\np\np\n</code></pre></p> <p>eg4 : \u5c06 vector  copy \u5230 hashset \u4e2d <pre><code>        unordered_set &lt;string&gt; word;\n        for(auto p : wordDict){\n            word.insert(p);\n        } \n</code></pre> <p>3. \u76f8\u5173\u6559\u5b66\uff1a</p> <p>unordered_set</p> <p>unordered_map</p> Note <p>useful</p> <pre><code>unordered_map&lt;int, string&gt; phoneMap;\n\n// \u63d2\u5165\u4e00\u4e9b\u952e\u503c\u5bf9\nphoneMap[1] = \"One\";\nphoneMap[2] = \"Two\";\nphoneMap[3] = \"Three\";\n\n// \u4f7f\u7528 at() \u8bbf\u95ee\u503c\ntry {\nstring letters = phoneMap.at(2);  // \u67e5\u627e\u952e\u4e3a 2 \u7684\u503c\ncout &lt;&lt; \"The value for key 2 is: \" &lt;&lt; letters &lt;&lt; endl;\n} catch (const out_of_range&amp; e) {\ncout &lt;&lt; \"Key not found!\" &lt;&lt; endl;\n}\n\n// \u5982\u679c\u952e\u4e0d\u5b58\u5728\uff0c\u4f7f\u7528 at() \u4f1a\u629b\u51fa\u5f02\u5e38\ntry {\nstring letters = phoneMap.at(4);  // \u67e5\u627e\u952e\u4e3a 4 \u7684\u503c\ncout &lt;&lt; \"The value for key 4 is: \" &lt;&lt; letters &lt;&lt; endl;\n} catch (const out_of_range&amp; e) {\ncout &lt;&lt; \"Key not found!\" &lt;&lt; endl;  // \u8f93\u51fa\uff1aKey not found!\n}\n</code></pre> <ul> <li>eg1. unordered_map : two sum problem(leetcode100) <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) {\n        unordered_map&lt;int,int&gt; result;\n        for(int i =0;i&lt;nums.size();i++){       \n            if(result.find(target-nums[i]) != result.end()){\n                return {result[target-nums[i]],i};\n            }\n            else{\n            //we can also use :\n            //result.insert(pair&lt;int,int&gt;(nums[i],i));\n            result[nums[i]] = i;\n            }\n        }\n        return {};\n    }\n};\n</code></pre></li> <li>eg2. unordered_set : \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57(leetcode100) <pre><code>//\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\n#include &lt;cstdio&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;iostream&gt; \n#include&lt;unordered_map&gt; \n#include&lt;unordered_set&gt; \n\nclass Solution {\npublic:\n    int singleNumber(vector&lt;int&gt;&amp; nums) {\n        unordered_set &lt;int&gt;ans;\n        for(int i=0;i&lt;nums.size();i++){\n            if(ans.find(nums[i]) != ans.end()){\n                ans.erase(nums[i]);\n            }\n            else{\n                ans.insert(nums[i]);\n            } \n        }\n        return *(ans.begin());\n\n    }\n};\n</code></pre></li> </ul>"},{"location":"cpp/cpp_learning/#string","title":"string","text":"<ol> <li> <p>\u622a\u53d6\uff1a    <pre><code>string str = \"C++ Programming\";\n string sub = str.substr(0, 3);  // \u4ece\u4f4d\u7f6e0\u5f00\u59cb\uff0c\u622a\u53d63\u4e2a\u5b57\u7b26\n\n cout &lt;&lt; \"Substring: \" &lt;&lt; sub &lt;&lt; endl;  // \u8f93\u51fa \"C++\"\n</code></pre></p> </li> <li> <p>\u67e5\u627e\uff1a    <pre><code> string str = \"Hello, C++ World!\";\n size_t pos = str.find(\"C++\");  // \u67e5\u627e\u5b50\u5b57\u7b26\u4e32\"C++\"\n\n if (pos != string::npos) {\n     cout &lt;&lt; \"Found C++ at position: \" &lt;&lt; pos &lt;&lt; endl;\n } else {\n     cout &lt;&lt; \"C++ not found!\" &lt;&lt; endl;\n }\n</code></pre></p> </li> <li> <p>\u521d\u59cb\u5316\uff1a</p> <p><code>string row = string(n, '.');</code> <code>row[position] = 'Q'</code></p> </li> <li> <p>\u904d\u5386\uff1a</p> </li> </ol> vector :: iterator itauto <pre><code>vector&lt;string&gt; vec = {\"apple\", \"banana\", \"cherry\"};\n\n// \u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386\nfor (vector&lt;string&gt;::iterator it = vec.begin(); it != vec.end(); ++it) {\n    cout &lt;&lt; *it &lt;&lt; \" \";\n}\n</code></pre> <pre><code>vector&lt;string&gt; vec = {\"apple\", \"banana\", \"cherry\"};\nfor (auto it = vec.begin(); it != vec.end(); ++it) {\n    cout &lt;&lt; *it &lt;&lt; \" \";\n}\n</code></pre> <p>string:</p> \u672c\u4f53\u8fed\u4ee3\u5668 <pre><code>string str = \"Hello, World!\";\n\n// \u4f7f\u7528\u57fa\u4e8e\u8303\u56f4\u7684for\u5faa\u73af\u904d\u5386\u5b57\u7b26\u4e32\nfor (char ch : str) {\n    cout &lt;&lt; ch &lt;&lt; \" \";  // \u8f93\u51fa\u6bcf\u4e2a\u5b57\u7b26\n}\n\nfor (auto ch : str) {\n    cout &lt;&lt; ch &lt;&lt; \" \";  // \u8f93\u51fa\u6bcf\u4e2a\u5b57\u7b26\n}\n</code></pre> <pre><code>string str = \"Hello, World!\";\n\n// \u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386\u5b57\u7b26\u4e32\nfor (auto it = str.begin(); it != str.end(); ++it) {\n    cout &lt;&lt; *it &lt;&lt; \" \";  // \u8f93\u51fa\u6bcf\u4e2a\u5b57\u7b26\n}\n</code></pre> <p>\u5173\u4e8e <code>const auto &amp;</code> VS <code>auto</code></p> <p><code>const string &amp;</code> \u6765\u4ee3\u66ff string\uff1a string \u4f1a\u8fdb\u884c\u590d\u5236\u64cd\u4f5c\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u800c <code>const string &amp;</code> \u4e0d\u4f1a\u8fdb\u884c\u590d\u5236\u64cd\u4f5c\uff0c\u76f4\u63a5\u4f7f\u7528\u539f\u6765\u7684\u5bf9\u8c61\uff0c\u4e14\u4e0d\u6539\u53d8\u5b58\u50a8\u503c \u3002\u51fd\u6570\u5f62\u53c2\u91cc\u9762\u4e0d\u4f1a\u53d8\u4e86 like \uff1a string digits \u4e5f\u53ef\u4ee5\u7528 <code>const string &amp;digits</code>\uff0c\u53c8\u6216\u8005\u662f\u5728 for \u5faa\u73af\u4e4b\u4e2d, \u53ef\u4ee5\u4f7f\u7528 <code>for (const auto &amp;dir: directions)</code> \u4ee3\u66ff... </p> <p>\u5728\u51fd\u6570\u53c2\u6570\u4e2d\uff0c&amp; \u8868\u793a \u5f15\u7528\u7c7b\u578b\uff0c\u5b83\u53ef\u4ee5\u907f\u514d\u62f7\u8d1d\u4f20\u9012\u5bf9\u8c61\uff0c\u4ece\u800c\u63d0\u9ad8\u6548\u7387\u3002\u5982\u679c\u7701\u7565 &amp;\uff0c\u5219\u610f\u5473\u7740\u4f20\u9012\u7684\u662f \u6309\u503c\u4f20\u9012\uff0c\u5373\u51fd\u6570\u4f1a\u62f7\u8d1d\u4e00\u4efd\u53c2\u6570\u5bf9\u8c61\u5230\u51fd\u6570\u5185\u90e8\u3002</p> <p>&amp; \u7684\u4f5c\u7528\uff1a   pair&amp; m \u8868\u793a m \u662f\u5bf9\u4f20\u5165 pair \u5bf9\u8c61\u7684 \u5f15\u7528\uff0c\u51fd\u6570\u5185\u90e8\u4fee\u6539 m \u4f1a\u5f71\u54cd\u4f20\u5165\u7684\u5bf9\u8c61\u3002   \u5982\u679c\u7701\u7565 &amp;\uff0c\u5219\u662f\u6309 \u503c\u4f20\u9012\uff0c\u610f\u5473\u7740\u51fd\u6570\u5185\u90e8\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u539f\u59cb\u7684\u5bf9\u8c61\u3002"},{"location":"cpp/cpp_learning/#vector","title":"vector","text":"<pre><code> auto queens = vector&lt;int&gt;(n, -1);\n</code></pre> <p>\u521b\u5efa row \u884c col \u5217\u5e76\u4e14\u521d\u59cb\u5316\u4e3a 0\uff1a</p> <pre><code>        int row = board.size();\n        int col = board[0].size();\n        vector&lt;vector&lt;int&gt;&gt; use(row,vector&lt;int&gt;(col,0));\n</code></pre> <p>\u521d\u59cb\u5316\u4e00\u4e2a\u5143\u7d20 pair \u7684\u5bb9\u5668\uff0c\u7528.first \u548c.second \u6765\u8bbf\u95ee\u524d\u540e\u5143\u7d20</p> <pre><code>        vector&lt;pair&lt;int, int&gt;&gt; directions{{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n</code></pre> <p>\u4f7f\u7528 <code>ele : vec</code> : (most recommended)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main() {\n    vector&lt;string&gt; vec = {\"apple\", \"banana\", \"cherry\"};\n\n    // \u4f7f\u7528\u8303\u56f4-based for \u5faa\u73af\u6253\u5370\u6240\u6709\u5143\u7d20\n    for (const string&amp; elem : vec) {\n        cout &lt;&lt; elem &lt;&lt; \" \";\n    }\n\n    for (auto elem : vec) {\n        cout &lt;&lt; elem &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u4ece vector \u4e2d\u5220\u9664\u6240\u6709\u503c\u4e3a\u7279\u5b9a\u503c\u7684\u5143\u7d20\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    // \u521d\u59cb\u5316\u4e00\u4e2avector\uff0c\u5305\u542b\u4e00\u4e9b\u6574\u6570\n    vector&lt;int&gt; vec = {1, 2, 3, 4, 2, 5, 2, 6};\n    int value_to_remove = 2;  // \u8981\u5220\u9664\u7684\u7279\u5b9a\u503c\n\n    // \u4f7f\u7528 remove \u5c06\u503c\u4e3a 2 \u7684\u5143\u7d20\u79fb\u5230\u672b\u5c3e\uff0c\u5e76\u8fd4\u56de\u65b0\u6709\u6548\u533a\u7684\u8fed\u4ee3\u5668\n    auto new_end = remove(vec.begin(), vec.end(), value_to_remove);\n\n    // \u4f7f\u7528 erase \u5220\u9664\u4ece new_end \u5230 vec.end() \u8303\u56f4\u5185\u7684\u5143\u7d20\n    vec.erase(new_end, vec.end());\n\n    // \u6253\u5370\u5220\u9664\u540e\u7684\u7ed3\u679c\n    for (const auto&amp; num : vec) {\n        cout &lt;&lt; num &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p><code>erase</code> \u548c <code>remove</code> \u662f C++ \u4e2d\u7528\u4e8e\u64cd\u4f5c\u5bb9\u5668\u7684\u4e24\u4e2a\u5e38\u7528\u51fd\u6570\uff0c\u5b83\u4eec\u901a\u5e38\u4e00\u8d77\u4f7f\u7528\uff0c\u5c24\u5176\u662f\u5728\u5220\u9664 <code>std::vector</code> \u6216 <code>std::list</code> \u4e2d\u7684\u7279\u5b9a\u5143\u7d20\u65f6\u3002\u5b83\u4eec\u7684\u4f5c\u7528\u4e0d\u540c\uff0c\u4f46\u53ef\u4ee5\u7ed3\u5408\u8d77\u6765\u5b8c\u6210\u5220\u9664\u64cd\u4f5c\u3002</p>"},{"location":"cpp/cpp_learning/#remove","title":"<code>remove</code> \u51fd\u6570:","text":"<p>\u5b9a\u4e49\uff1a</p> <p>\u7528\u4e8e\u91cd\u65b0\u6392\u5217\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u4f7f\u5f97\u6240\u6709\u4e0d\u7b49\u4e8e\u6307\u5b9a\u503c\u7684\u5143\u7d20\u88ab\u79fb\u52a8\u5230\u5bb9\u5668\u7684\u524d\u9762\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u65b0\u201c\u6709\u6548\u533a\u57df\u201d\u672b\u5c3e\u7684\u8fed\u4ee3\u5668\u3002</p> <p>\u8bed\u6cd5\uff1a</p> <pre><code>Iterator std::remove(Iterator first, Iterator last, const T&amp; value);\n</code></pre> <ul> <li><code>first</code> \u548c <code>last</code>\uff1a\u6307\u5b9a\u8981\u64cd\u4f5c\u7684\u8303\u56f4\uff08\u901a\u5e38\u662f\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\uff09\u3002</li> <li><code>value</code>\uff1a\u6307\u5b9a\u8981\u5220\u9664\u7684\u5143\u7d20\u7684\u503c\u3002</li> </ul> <p>\u7279\u70b9\uff1a</p> <ul> <li><code>std::remove</code> \u5e76\u4e0d\u4f1a\u5220\u9664\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u5b83\u53ea\u662f\u5c06\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u91cd\u65b0\u6392\u5217\uff0c\u628a\u6240\u6709\u4e0d\u7b49\u4e8e <code>value</code> \u7684\u5143\u7d20\u79fb\u5230\u524d\u9762\uff0c\u800c\u5c06\u6240\u6709\u7b49\u4e8e <code>value</code> \u7684\u5143\u7d20\u79fb\u5230\u5bb9\u5668\u7684\u672b\u5c3e\u3002</li> <li>\u5b83\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5668\uff0c\u6307\u5411\u5bb9\u5668\u4e2d\u4e0d\u7b49\u4e8e <code>value</code> \u7684\u5143\u7d20\u7684\u672b\u5c3e\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint main() {\n    vector&lt;int&gt; vec = {1, 2, 3, 4, 2, 5, 2, 6};\n    int value_to_remove = 2;\n\n    // \u4f7f\u7528 std::remove \u5c06\u503c\u4e3a 2 \u7684\u5143\u7d20\u79fb\u5230\u672b\u5c3e\n    auto new_end = remove(vec.begin(), vec.end(), value_to_remove);\n\n    // \u6253\u5370\u5bb9\u5668\u7684\u72b6\u6001\uff0c\u6ce8\u610f\u6b64\u65f6\u53ea\u5c06\u503c\u4e3a 2 \u7684\u5143\u7d20\u79fb\u5230\u672b\u5c3e\uff0c\u5e76\u6ca1\u6709\u5220\u9664\n    for (auto it = vec.begin(); it != new_end; ++it) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>1 3 4 5 6\n</code></pre>"},{"location":"cpp/cpp_learning/#erase","title":"<code>erase</code> \u51fd\u6570:","text":"<p>\u5b9a\u4e49\uff1a</p> <p><code>erase</code> \u662f\u5bb9\u5668\uff08\u5982 <code>std::vector</code>, <code>std::list</code>, <code>std::deque</code> \u7b49\uff09\u6210\u5458\u51fd\u6570\uff0c\u7528\u4e8e\u5220\u9664\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u3002\u5bf9\u4e8e <code>std::vector</code> \u6216 <code>std::deque</code>\uff0c<code>erase</code> \u4f1a\u771f\u6b63\u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u5e76\u4e14\u7f29\u5c0f\u5bb9\u5668\u7684\u5927\u5c0f\u3002</p> <p>\u8bed\u6cd5\uff1a</p> <pre><code>Iterator erase(Iterator position);\nIterator erase(Iterator first, Iterator last);\n</code></pre> <ul> <li><code>position</code>\uff1a\u6307\u5411\u5bb9\u5668\u4e2d\u8981\u5220\u9664\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002</li> <li><code>first</code> \u548c <code>last</code>\uff1a\u6307\u5b9a\u4e00\u4e2a\u8303\u56f4\uff0c\u5220\u9664\u8be5\u8303\u56f4\u5185\u7684\u6240\u6709\u5143\u7d20\u3002</li> </ul> <p>\u7279\u70b9\uff1a</p> <ul> <li> <p><code>erase</code> \u771f\u6b63\u5220\u9664\u5143\u7d20\uff0c\u5e76\u8c03\u6574\u5bb9\u5668\u5927\u5c0f</p> </li> <li> <p>\u5220\u9664\u7d22\u5f15 j \u7684\u5143\u7d20 \u76f4\u63a5 erase</p> </li> </ul> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main() {\n    vector&lt;int&gt; vec = {1, 2, 3, 4, 5, 6};\n    int j = 2;  // \u8981\u5220\u9664\u7684\u7d22\u5f15\n\n    // \u4f7f\u7528 erase \u5220\u9664\u7d22\u5f15\u4e3a j \u7684\u5143\u7d20\n    if (j &gt;= 0 &amp;&amp; j &lt; vec.size()) {\n        vec.erase(vec.begin() + j);\n    }\n\n    // \u6253\u5370\u5220\u9664\u540e\u7684\u7ed3\u679c\n    for (const auto&amp; num : vec) {\n        cout &lt;&lt; num &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"cpp/cpp_learning/#priority_queue","title":"priority_queue","text":"<pre><code>#include&lt;iostream&gt;\n#include &lt;queue&gt;\nusing namespace std;\nint main() \n{\n    //\u5bf9\u4e8e\u57fa\u7840\u7c7b\u578b \u9ed8\u8ba4\u662f\u5927\u9876\u5806\n    priority_queue&lt;int&gt; a; \n    //\u7b49\u540c\u4e8e priority_queue&lt;int, vector&lt;int&gt;, less&lt;int&gt; &gt; a;\n\n\n    priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt; &gt; c;  //\u8fd9\u6837\u5c31\u662f\u5c0f\u9876\u5806\n    priority_queue&lt;string&gt; b;\n\n    for (int i = 0; i &lt; 5; i++) \n    {\n        a.push(i);\n        c.push(i);\n    }\n    while (!a.empty()) \n    {\n        cout &lt;&lt; a.top() &lt;&lt; ' ';\n        a.pop();\n    } \n    cout &lt;&lt; endl;\n\n    while (!c.empty()) \n    {\n        cout &lt;&lt; c.top() &lt;&lt; ' ';\n        c.pop();\n    }\n    cout &lt;&lt; endl;\n\n    b.push(\"abc\");\n    b.push(\"abcd\");\n    b.push(\"cbd\");\n    while (!b.empty()) \n    {\n        cout &lt;&lt; b.top() &lt;&lt; ' ';\n        b.pop();\n    } \n    cout &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>4 3 2 1 0\n0 1 2 3 4\ncbd abcd abc\n</code></pre> <p>pari\u7684\u6bd4\u8f83\uff0c\u5148\u6bd4\u8f83\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u7b2c\u4e00\u4e2a\u76f8\u7b49\u6bd4\u8f83\u7b2c\u4e8c\u4e2a:</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;vector&gt;\nusing namespace std;\nint main() \n{\n    priority_queue&lt;pair&lt;int, int&gt; &gt; a;\n    pair&lt;int, int&gt; b(1, 2);\n    pair&lt;int, int&gt; c(1, 3);\n    pair&lt;int, int&gt; d(2, 5);\n    a.push(d);\n    a.push(c);\n    a.push(b);\n    while (!a.empty()) \n    {\n        cout &lt;&lt; a.top().first &lt;&lt; ' ' &lt;&lt; a.top().second &lt;&lt; '\\n';\n        a.pop();\n    }\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>2 5\n1 3\n1 2\n</code></pre>"},{"location":"cpp/cpp_learning/#_1","title":"\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570","text":""},{"location":"cpp/cpp_learning/#simple-method","title":"simple method","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\n// \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\nbool cmp(const pair&lt;int, int&gt;&amp; a, const pair&lt;int, int&gt;&amp; b) {\n    return a.first &lt; b.first;  // a.first \u5c0f\u4e8e b.first \u65f6\u8fd4\u56de true\uff0c\u8868\u793a a \u4f1a\u88ab\u6392\u5230\u540e\u9762\n}\n\nint main() {\n    // \u521b\u5efa\u4e00\u4e2a\u6700\u5927\u5806\u7684 priority_queue\n    priority_queue&lt;pair&lt;int, int&gt;, vector&lt;pair&lt;int, int&gt;&gt;, decltype(&amp;cmp)&gt; q(cmp);\n\n    // \u5411\u4f18\u5148\u961f\u5217\u4e2d\u6dfb\u52a0\u5143\u7d20\n    q.push({1, 100});\n    q.push({3, 200});\n    q.push({2, 150});\n\n    // \u8f93\u51fa\u5806\u9876\u5143\u7d20\n    while (!q.empty()) {\n        cout &lt;&lt; \"(\" &lt;&lt; q.top().first &lt;&lt; \", \" &lt;&lt; q.top().second &lt;&lt; \")\" &lt;&lt; endl;\n        q.pop();\n    }\n\n    return 0;\n}\n</code></pre> <p>\u5176\u4e2d\u7684 <code>decltype(&amp;cmp)</code> \u7684\u7c7b\u578b\u662f <code>bool (*)(const pair&lt;int, int&gt;&amp;, const pair&lt;int, int&gt;&amp;)</code>\uff0c\u5373\u5b83\u662f\u4e00\u4e2a \u6307\u5411\u6bd4\u8f83\u51fd\u6570 \u7684\u6307\u9488\uff0c\u8fd4\u56de\u7c7b\u578b\u662f <code>bool</code>\uff0c\u53c2\u6570\u7c7b\u578b\u662f <code>const pair&lt;int, int&gt;&amp;</code> \u548c <code>const pair&lt;int, int&gt;&amp;</code>\u3002</p> Bug <p>\u4f20\u9012\u65b9\u5f0f\u7684\u533a\u522b\uff1a</p> <ul> <li><code>const pair&lt;int, int&gt;&amp; a</code> \u8868\u793a\u901a\u8fc7 \u5e38\u91cf\u5f15\u7528 \u4f20\u9012 <code>pair&lt;int, int&gt;</code> \u5bf9\u8c61\u3002\u5f15\u7528\u907f\u514d\u4e86\u5bf9\u8c61\u7684\u62f7\u8d1d\uff0c\u540c\u65f6 <code>const</code> \u4fee\u9970\u7b26\u4fdd\u8bc1\u4e86\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u4fee\u6539\u8be5\u5bf9\u8c61\u3002</li> <li><code>pair&lt;int, int&gt; a</code> \u8868\u793a\u901a\u8fc7 \u503c\u4f20\u9012 \u4f20\u9012\u4e00\u4e2a <code>pair&lt;int, int&gt;</code> \u5bf9\u8c61\u3002\u6b64\u65f6\u4f1a\u53d1\u751f\u62f7\u8d1d\u64cd\u4f5c\uff0c\u4f20\u9012\u7684\u662f\u5bf9\u8c61\u7684\u526f\u672c\uff0c\u53ef\u80fd\u4f1a\u6d88\u8017\u989d\u5916\u7684\u5185\u5b58\u548c\u65f6\u95f4\u3002</li> </ul> <p>Success</p> <p>\u5173\u4e8e<code>decltype()</code>\u7528\u6cd5</p> <pre><code>decltype(expression)\n\n- `expression`\uff1a\u8fd9\u662f\u4f60\u60f3\u8981\u67e5\u8be2\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u6216\u53d8\u91cf\u3002\n- `decltype` \u8fd4\u56de\u8be5\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u3002\n</code></pre> <pre><code>//eg. \u83b7\u53d6\u53d8\u91cf\u7684\u7c7b\u578b\uff1a\nint a = 10;\ndecltype(a) b = 20;  // b \u7684\u7c7b\u578b\u4e0e a \u76f8\u540c\uff0c\u90fd\u662f int\n\n//eg. \u51fd\u6570\u6307\u9488\u7c7b\u578b\n\nbool cmp(int, int);\ndecltype(&amp;cmp) ptr = &amp;cmp;  // ptr \u662f\u6307\u5411 cmp \u51fd\u6570\u7684\u6307\u9488\uff0c\u7c7b\u578b\u662f bool(*)(int, int)\n</code></pre>"},{"location":"cpp/cpp_learning/#common-method","title":"common method","text":"<pre><code>#include&lt;queue&gt;\n#include&lt;vector&gt;\n#include&lt;iostream&gt;\nusing namespace std;\n\nstruct node\n{\n    int x, y;\n    node(int x,int y):x(x),y(y){}\n};\n\nstruct cmp\n{\n    bool operator()(node a,node b)\n    {\n        if(a.x == b.x)  return a.y &gt;= b.y;\n        else return a.x &gt; b.x;\n    }\n};\n\nint main()\n{\n    priority_queue&lt;node,vector&lt;node&gt;,cmp&gt; pq;    //\u5e26\u6709\u4e09\u4e2a\u53c2\u6570\u7684\u4f18\u5148\u961f\u5217;\n    for(int i = 1; i &lt;= 5; i++)\n        for(int j = 1; j &lt;= 5; j++)\n            pq.push(node(i,j));\n    while(!pq.empty())\n    {\n        cout&lt;&lt;pq.top().x&lt;&lt;\" \"&lt;&lt;pq.top().y&lt;&lt;endl;\n        pq.pop();\n    }\n    return 0;\n}\n</code></pre> <p><code>operator()</code>  \u662f C++ \u4e2d\u7684\u4e00\u4e2a \u8fd0\u7b97\u7b26\u91cd\u8f7d \u7684\u7279\u6b8a\u5f62\u5f0f\uff0c\u7528\u4e8e\u91cd\u8f7d\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\uff0c\u4f7f\u5f97\u4e00\u4e2a\u5bf9\u8c61\u80fd\u591f\u50cf\u51fd\u6570\u4e00\u6837\u88ab\u8c03\u7528\u3002\u5b83\u662f \u56fa\u5b9a\u7684\uff0c\u4e0d\u80fd\u6539\u6210\u5176\u4ed6\u5355\u8bcd\u3002</p> <p><code>operator()</code> \u7684\u4f5c\u7528\uff1a</p> <ul> <li><code>operator()</code> \u4f7f\u5f97\u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u7684\u884c\u4e3a\uff0c\u4f7f\u5176\u5728\u8c03\u7528\u65f6\u7c7b\u4f3c\u4e8e\u51fd\u6570\u7684\u8c03\u7528\u3002</li> <li>\u8fd9\u79cd\u8bed\u6cd5\u901a\u5e38\u88ab\u79f0\u4e3a \u51fd\u6570\u5bf9\u8c61\uff08\u6216\u79f0\u4e3a \u4eff\u51fd\u6570\uff09\u3002\u901a\u8fc7\u91cd\u8f7d <code>operator()</code>\uff0c\u4f60\u53ef\u4ee5\u8ba9\u5bf9\u8c61\u8868\u73b0\u5f97\u50cf\u4e00\u4e2a\u666e\u901a\u51fd\u6570\u4e00\u6837\uff0c\u63a5\u53d7\u53c2\u6570\u5e76\u8fd4\u56de\u503c\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> <p>\u5047\u8bbe\u4f60\u6709\u4e00\u4e2a\u7ed3\u6784\u4f53 <code>cmp</code>\uff0c\u5b83\u91cd\u8f7d\u4e86 <code>operator()</code>\uff0c\u4f7f\u5f97\u5176\u5bf9\u8c61\u80fd\u591f\u50cf\u51fd\u6570\u4e00\u6837\u88ab\u8c03\u7528\uff1a</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nstruct cmp {\n    bool operator()(int a, int b) {\n        return a &gt; b;  // \u6bd4\u8f83\u4e24\u4e2a\u6574\u6570\uff0c\u8fd4\u56de\u8f83\u5927\u7684\u90a3\u4e2a\n    }\n};\n\nint main() {\n    cmp compare;  // \u521b\u5efa\u4e00\u4e2a cmp \u7c7b\u578b\u7684\u5bf9\u8c61\n    cout &lt;&lt; compare(5, 3) &lt;&lt; endl;  // \u4f7f\u7528\u5bf9\u8c61\u50cf\u51fd\u6570\u4e00\u6837\u8c03\u7528\uff0c\u8f93\u51fa 1\uff0c\u56e0\u4e3a 5 &gt; 3\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>compare(5, 3)</code> \u8c03\u7528\u4e86 <code>operator()</code>\uff0c\u4f7f\u5f97 <code>cmp</code> \u5bf9\u8c61 <code>compare</code> \u5145\u5f53\u4e86\u4e00\u4e2a\u6bd4\u8f83\u4e24\u4e2a\u6574\u6570\u7684\u51fd\u6570\u3002</p> <p>\u4e8e\u662f\u81ea\u5b9a\u4e49\u6bd4\u8f83\u65b9\u5f0f\u53ef\u4ee5\u8fd9\u4e48\u5199</p>"},{"location":"cpp/cpp_learning/#_2","title":"\u6742\u9879","text":""},{"location":"cpp/leetcode/","title":"Leetcode","text":"Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n//others \nint main() {\n    return 0;\n}\n</code></pre> PythonJavaScript <pre><code>def main():\n    print(\"Hello world!\")\n\nif__name__ == \"__main__\":\n    main()\n</code></pre> <pre><code>function main() {\n    console.log(\"Hello world!\");\n}\n\nmain();\n</code></pre>"},{"location":"cpp/leetcode/#218-leetcode100-","title":"2.18 leetcode100-\u56de\u6eaf-\u5168\u6392\u5217","text":"<p>\u4ee5\u4e0b\u662f\u7b54\u6848\u7684\u89e3\u6cd5\uff0c\u5df2\u7ecf\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230\u6700\u4f73</p> <pre><code>class Solution {\n    public:\n    void backtrack(int first,int len,vector&lt;int&gt;&amp; output,vector&lt;vector&lt;int&gt;&gt; &amp;res){\n        //\u8868\u793a\u6211\u5c06\u6570\u7ec4\u5750\u6807\u4e3afirst-1\u53ca\u5176\u4e4b\u524d\u7684\u5143\u7d20\u5168\u90e8\u6392\u597d\u56fa\u5b9a\u4e86\uff0c\u63a5\u4e0b\u6765\u8981\u6392\u597dindex\u4e3afirst\u53ca\u5176\u4e4b\u540e\u7684\u6240\u6709\u6570\u540e\u5c06\u6240\u6709\u7684\u7ed3\u679c\u653e\u5165res\u5bb9\u5668,\u5e76\u4e14\u5168\u90e8\u64cd\u4f5c\u5b8c\u4e4b\u540e\u8981\u6c42output\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u6b21\u5e8f\u4e0e\u8c03\u7528\u8be5\u6b21backtrack\u524d\u7684\u6b21\u5e8f\u4e25\u683c\u4e0d\u53d8\n        if(first == len){\n            res.emplace_back(output);\n            return;\n        }\n        for(int i = first;i &lt;= len-1;i++){\n            swap(output[i],output[first]);\n            backtrack(first+1,len,output,res);\n            swap(output[i],output[first]);\n        }\n    }\n    vector&lt;vector&lt;int&gt;&gt; permute(vector&lt;int&gt;&amp; nums) {\n        vector &lt;vector&lt;int&gt;&gt; res;\n        backtrack(0,(int)nums.size(),nums,res);\n        return res;\n    }\n};\n</code></pre> <p>\u4ee5\u4e0b\u5c55\u793a\u6211\u7684\u89e3\u6cd5\uff1a\u6bd4\u8f83\u539f\u59cb\uff0c\u5c31\u662f\u65b0\u5efa\u4e00\u4e2a v \u6570\u7ec4\u6765\u8bb0\u5f55\u4f7f\u7528\u4e86\u54ea\u4e00\u4e9b\u6570\uff0c</p> <p>Note</p> <p>\u51fd\u6570\u5f62\u53c2\u4e2d vector \u8981\u7684\u5e26&amp;</p> <pre><code>class Solution {\n    public:\n    void backtrack(vector&lt;int&gt; &amp;v,vector&lt;vector&lt;int&gt;&gt; &amp;res,vector&lt;int&gt; &amp;output,vector&lt;int&gt; &amp;nums,int first){//\u5373\u5c06\u585e\u8fdb\u7d22\u5f15\u4e3afirst\u7684\u4f4d\u7f6e\n        if(first == nums.size()){\n            res.push_back(output);\n            return;\n        }\n        for(int i = 0;i &lt; nums.size();i++){\n            if(v[i] == 0){\n                output.push_back(nums[i]);\n                v[i] = 1;\n                backtrack(v,res,output,nums,first + 1);\n                output.pop_back();\n                v[i] = 0;\n            }\n\n        }\n    }\n    vector&lt;vector&lt;int&gt;&gt; permute(vector&lt;int&gt;&amp; nums) {\n        vector&lt;vector&lt;int&gt;&gt; res;\n        vector&lt;int&gt; v(nums.size(),0);\n        vector&lt;int&gt; output;\n        backtrack(v,res,output,nums,0);\n        retur\n\n    }\n};\n</code></pre>"},{"location":"cpp/leetcode/#218-leetcode100-_1","title":"2.18 leetcode100-\u56de\u6eaf-\u5b50\u96c6","text":"<p>\u6211\u5199\u7684\u89e3\u6cd5\uff1a</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; subsets(vector&lt;int&gt;&amp; nums) {\n        vector&lt;vector&lt;int&gt;&gt; res;\n        vector&lt;int&gt; output;\n        backtrack(res,output,nums,0);\n        return res;\n\n    }\n    void backtrack(vector&lt;vector&lt;int&gt;&gt; &amp;res,vector&lt;int&gt; &amp;output,vector&lt;int&gt; &amp;nums,int first){\n        //index first is to be done \u4f1a\u5728output\u7684\u57fa\u7840\u4e0a\uff0c\u5c06first\u53ca\u5176\u4e4b\u540e\u7684\u6240\u6709\u5b50\u96c6\u53ef\u80fd\u653e\u5230res\u91cc\u9762,,output\u8ba8\u8bba\u4e86\u7d22\u5f15\u4e3afirst-1\u53ca\u5176\u4e4b\u524d\u7684\u6240\u6709\u6570,\u5e76\u4e14output\u8c03\u7528\u524d\u540e\u4fdd\u6301\u4e0d\u53d8\n        if(first == nums.size()){\n            res.emplace_back(output);\n            return;\n        }\n        output.emplace_back(nums[first]);\n        backtrack(res,output,nums,first + 1);\n        output.pop_back();\n        backtrack(res,output,nums,first + 1);\n    }\n\n};\n</code></pre> Tip <p>\u4f18\u5316\uff1a\u7531\u4e8e res \u6570\u7ec4\u548c output \u90fd\u662f\u4e24\u4e2a\u51fd\u6570\u90fd\u5728\u4f7f\u7528\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u5b9a\u4e49\u5230 public \u5185\u7684\u53d8\u91cf\uff0c\u4e0d\u9700\u8981\u5728\u9012\u5f52\u51fd\u6570\u4e2d\u53cd\u590d\u4f20\u9012\uff08\u56e0\u4e3a\u4f60\u5df2\u7ecf\u786e\u4fdd output \u5bb9\u5668\u5728 backtrack \u8c03\u7528\u524d\u540e\u4fdd\u6301\u4e0d\u53d8\uff09\u7c7b\u4f3c\u201c\u5168\u5c40\u201d\u7684\u53d8\u91cf\uff1f</p> \u4f18\u5316\u524d <p><pre><code>```cpp\nclass Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; subsets(vector&lt;int&gt;&amp; nums) {\n        vector&lt;vector&lt;int&gt;&gt; res;\n        vector&lt;int&gt; output;\n        backtrack(res,output,nums,0);\n        return res;\n\n    }\n    void backtrack(vector&lt;vector&lt;int&gt;&gt; &amp;res,vector&lt;int&gt; &amp;output,vector&lt;int&gt; &amp;nums,int first){\n        //index first is to be done \u4f1a\u5728output\u7684\u57fa\u7840\u4e0a\uff0c\u5c06first\u53ca\u5176\u4e4b\u540e\u7684\u6240\u6709\u5b50\u96c6\u53ef\u80fd\u653e\u5230res\u91cc\u9762,,output\u8ba8\u8bba\u4e86\u7d22\u5f15\u4e3afirst-1\u53ca\u5176\u4e4b\u524d\u7684\u6240\u6709\u6570,\u5e76\u4e14output\u8c03\u7528\u524d\u540e\u4fdd\u6301\u4e0d\u53d8\n        if(first == nums.size()){\n            res.emplace_back(output);\n            return;\n        }\n        output.emplace_back(nums[first]);\n        backtrack(res,output,nums,first + 1);\n        output.pop_back();\n        backtrack(res,output,nums,first + 1);\n    }\n\n};\n</code></pre> <pre><code>=== \"\u4f18\u5316\u540e\"\n\n```cpp\n\nclass Solution {\n    public:\n    vector&lt;vector&lt;int&gt;&gt; res;\n    vector&lt;int&gt; output;\n    vector&lt;vector&lt;int&gt;&gt; subsets(vector&lt;int&gt;&amp; nums) {\n        backtrack(nums,0);\n        return res;\n\n    }\n    void backtrack(vector&lt;int&gt; &amp;nums,int first){\n        //index first is to be done \u4f1a\u5728output\u7684\u57fa\u7840\u4e0a\uff0c\u5c06first\u53ca\u5176\u4e4b\u540e\u7684\u6240\u6709\u5b50\u96c6\u53ef\u80fd\u653e\u5230res\u91cc\u9762,,output\u8ba8\u8bba\u4e86\u7d22\u5f15\u4e3afirst-1\u53ca\u5176\u4e4b\u524d\u7684\u6240\u6709\u6570,\u5e76\u4e14output\u8c03\u7528\u524d\u540e\u4fdd\u6301\u4e0d\u53d8\n        if(first == nums.size()){\n            res.emplace_back(output);\n            return;\n        }\n        output.emplace_back(nums[first]);\n        backtrack(nums,first + 1);\n        output.pop_back();\n        backtrack(nums,first + 1);\n    }\n\n};\n</code></pre></p>"},{"location":"cpp/leetcode/#219-leetcode100-","title":"2.19 leetcode100-\u56de\u6eaf-\u7535\u8bdd\u53f7\u7801\u5b57\u6bcd\u7ec4\u5408","text":"<pre><code>class Solution {\npublic:\n    vector&lt;string&gt; makedir(){\n        vector&lt;string&gt; dir(10,\"\");\n        dir[2] = \"abc\";\n        dir[3] = \"def\";\n        dir[4] = \"ghi\";\n        dir[5] = \"jkl\";\n        dir[6] = \"mno\";\n        dir[7] = \"pqrs\";\n        dir[8] = \"tuv\";\n        dir[9] = \"wxyz\";\n        return dir;\n\n    }\n    void putin(string output,string ranks,int pos,vector&lt;string&gt; &amp;result,vector&lt;string&gt; &amp;dir){//index pos to be filled\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57\u987a\u5e8f\uff0c\u8f93\u51fa\u6240\u6709\u7684\u5b57\u6bcd\u6392\u5e8f\uff0cpos\u5f00\u59cb\n        if(pos == ranks.length()){\n            result.emplace_back(output);\n        //    cout &lt;&lt; \"push \" &lt;&lt; output &lt;&lt; \" in\" &lt;&lt; endl;\n            return;\n        }\n        int dirnum = ranks[pos] - '0';  \n        string dirr = dir[dirnum];//abc\n        for(char ch : dirr){\n            output.push_back(ch);\n            putin(output,ranks,pos+1,result,dir);\n            output.pop_back();\n        }\n    }\n    vector&lt;string&gt; letterCombinations(string digits) {\n        vector&lt;string&gt; null;\n        if(digits.empty()){\n            return null;\n        }\n        vector&lt;string&gt; ranker;\n        ranker = rank(digits);\n//        cout &lt;&lt; \"ok\" &lt;&lt; endl;\n        vector&lt;string&gt; result;\n        vector&lt;string&gt; dir = makedir();\n//        cout &lt;&lt; \"ok1 \" &lt;&lt; endl;\n/*      for(auto itt = dir.begin();itt != dir.end();itt++){\n            cout &lt;&lt; *itt &lt;&lt; \" \";\n        }\n*/\n        //cout &lt;&lt; \"final operation:\" &lt;&lt; endl;\n/*        for(vector&lt;string&gt;::iterator it = ranker.begin();it != ranker.end();it++){//\u6bcf\u4e00\u4e2a\u6570\u5b57\u7ec4\u5408\n            string ranks = (*it);\n            cout &lt;&lt; ranks &lt;&lt; endl;\n            string output;\n            putin(output,ranks,0,result,dir);\n        }\n*/      string output;\n        string ranks =  digits;   \n        putin(output,ranks,0,result,dir);\n        return result;\n\n    }\n    void backtrack(string digits,int first,vector&lt;string&gt; &amp;res){\n        if(first == digits.length()){\n            res.emplace_back(digits);\n            return; \n        }\n        for(int i = first;i &lt; digits.length();i++){\n            swap(digits[first],digits[i]);\n            backtrack(digits,first + 1,res);\n            swap(digits[first],digits[i]);\n        }\n\n    }\n    vector&lt;string&gt; rank(string digits){//\u8fd4\u56de\u6240\u6709\u53ef\u80fd\u7684\u6570\u5b57\u7ec4\u5408\n        vector&lt;string&gt; res;\n        backtrack(digits,0,res);\n /*       for(auto it = res.begin();it != res.end();it++){\n            cout &lt;&lt; *it &lt;&lt; endl;\n        }\n*/        return res;\n    } \n};\n</code></pre> <p>\u56e0\u4e3a\u6ca1\u6709\u8ba4\u771f\u770b\u9898\uff0c\u6211\u4ee5\u4e3a\u7535\u8bdd\u53f7\u7801\u6570\u5b57\u7ec4\u5408\u662f\u53ef\u4ee5\u6392\u5e8f\u7684 damn\uff01\uff01\u56e0\u6b64\u5176\u5b9e\u6700\u521d\u5199\u7684\u662f\u8fd9\u4e2a\u5168\u6392\u5217\u7248\u672c\uff0cwhat can i say \u5c31\u5f53\u953b\u70bc\u597d\u4e86</p> <pre><code>class Solution {\npublic:\n    vector&lt;string&gt; makedir(){\n        vector&lt;string&gt; dir(10,\"\");\n        dir[2] = \"abc\";\n        dir[3] = \"def\";\n        dir[4] = \"ghi\";\n        dir[5] = \"jkl\";\n        dir[6] = \"mno\";\n        dir[7] = \"pqrs\";\n        dir[8] = \"tuv\";\n        dir[9] = \"wxyz\";\n        return dir;\n    }\n    void putin(string output,string ranks,int pos,vector&lt;string&gt; &amp;result,vector&lt;string&gt; &amp;dir){//index pos to be filled\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57\u987a\u5e8f\uff0c\u8f93\u51fa\u6240\u6709\u7684\u5b57\u6bcd\u6392\u5e8f\uff0cpos\u5f00\u59cb\n        if(pos == ranks.length()){\n            result.emplace_back(output);\n\n            return;\n        }\n        int dirnum = ranks[pos] - '0';  \n        string dirr = dir[dirnum];//abc\n        for(char ch : dirr){\n            output.push_back(ch);\n            putin(output,ranks,pos+1,result,dir);\n            output.pop_back();\n        }\n    }\n    vector&lt;string&gt; letterCombinations(string digits) {\n        vector&lt;string&gt; null;\n        if(digits.empty()){\n            return null;\n        }\n        vector&lt;string&gt; ranker;\n        ranker = rank(digits);\n        vector&lt;string&gt; result;\n        vector&lt;string&gt; dir = makedir();\n\n        for(vector&lt;string&gt;::iterator it = ranker.begin();it != ranker.end();it++){//\u6bcf\u4e00\u4e2a\u6570\u5b57\u7ec4\u5408\n            string ranks = (*it);\n            cout &lt;&lt; ranks &lt;&lt; endl;\n            string output;\n            putin(output,ranks,0,result,dir);\n        }\n\n        return result;\n\n    }\n    void backtrack(string digits,int first,vector&lt;string&gt; &amp;res){\n        if(first == digits.length()){\n            res.emplace_back(digits);\n            return; \n        }\n        for(int i = first;i &lt; digits.length();i++){\n            swap(digits[first],digits[i]);\n            backtrack(digits,first + 1,res);\n            swap(digits[first],digits[i]);\n        }\n\n    }\n    vector&lt;string&gt; rank(string digits){//\u8fd4\u56de\u6240\u6709\u53ef\u80fd\u7684\u6570\u5b57\u7ec4\u5408\n        vector&lt;string&gt; res;\n        backtrack(digits,0,res);\n        return res;\n    } \n};\n</code></pre> Note <p>const string &amp;\u6765\u4ee3\u66ff string\uff1a string \u4f1a\u8fdb\u884c\u590d\u5236\u64cd\u4f5c\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u800c const string &amp;\u4e0d\u4f1a\u8fdb\u884c\u590d\u5236\u64cd\u4f5c\uff0c\u76f4\u63a5\u4f7f\u7528\u539f\u6765\u7684\u5bf9\u8c61\uff0c\u4e14\u4e0d\u6539\u53d8\u5b58\u50a8\u503c \u3002\u51fd\u6570\u5f62\u53c2\u91cc\u9762\u4e0d\u4f1a\u53d8\u4e86 like \uff1a string digits \u4e5f\u53ef\u4ee5\u7528 const string &amp;digits</p> Note <p>\u53ef\u4ee5\u7528\u54c8\u5e0c\u8868 unordered_map \u6765\u5b58\u6570\u5b57\u5b57\u6bcd\u5bf9\u5e94\u8868\uff0c\u4f7f\u7528.at(key)\u6765\u627e\u952e\u503c</p> <p>\u7b54\u6848\u7684\u89e3\u6cd5\u5b66\u4e60\u65b9\u5f0f</p> <pre><code>class Solution {\n   public:\n    vector&lt;string&gt; letterCombinations(string digits) {\n        vector&lt;string&gt; combinations;\n        if (digits.empty()) {\n            return combinations;\n        }\n        unordered_map&lt;char, string&gt; phoneMap{\n            {'2', \"abc\"},\n            {'3', \"def\"},\n            {'4', \"ghi\"},\n            {'5', \"jkl\"},\n            {'6', \"mno\"},\n            {'7', \"pqrs\"},\n            {'8', \"tuv\"},\n            {'9', \"wxyz\"}\n        };\n        string combination;\n        backtrack(combinations, phoneMap, digits, 0, combination);\n        return combinations;\n    }\n\n    void backtrack(vector&lt;string&gt;&amp; combinations, const unordered_map&lt;char, string&gt;&amp; phoneMap, const string&amp; digits, int index, string&amp; combination) {\n        if (index == digits.length()) {\n            combinations.push_back(combination);\n        } else {\n            char digit = digits[index];\n            const string&amp; letters = phoneMap.at(digit);\n            for (const char&amp; letter: letters) {//auto is\n                combination.push_back(letter);\n                backtrack(combinations, phoneMap, digits, index + 1, combination);\n                combination.pop_back();\n            }\n        }\n    }\n};\n</code></pre>"},{"location":"cpp/leetcode/#219-leetcode100-_1","title":"2.19 leetcode100-\u56de\u6eaf-\u7ec4\u5408\u603b\u548c","text":"<p>my solution\uff1a</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; combinationSum(vector&lt;int&gt;&amp; candidates, int target) {\n        sort(candidates.begin(),candidates.end());\n        vector&lt;int&gt; output;\n        vector&lt;vector&lt;int&gt;&gt; res;\n        backtrack(candidates,0,0,target,output,res);\n        return res;\n    }\n    void backtrack(vector &lt;int&gt; &amp;candidates,int pos,int cursum,int target,vector&lt;int&gt; &amp;output,vector&lt;vector&lt;int&gt;&gt; &amp;res){\n        for(int i = pos;i &lt; candidates.size();i++){\n            if(cursum + candidates[i] &gt; target){\n                return;\n            }\n            output.emplace_back(candidates[i]);\n            if(cursum + candidates[i] == target){\n                res.emplace_back(output);\n                output.pop_back();  \n                continue;\n            }\n            backtrack(candidates,i,cursum + candidates[i],target,output,res); \n            output.pop_back();         \n        }\n\n\n    }\n};\n</code></pre>"},{"location":"cpp/leetcode/#219-leetcode100-_2","title":"2.19 leetcode100-\u56de\u6eaf-\u62ec\u53f7","text":"<pre><code>class Solution {\npublic:\n    vector&lt;string&gt; generateParenthesis(int n) {\n        vector&lt;int&gt; output;\n        vector&lt;vector&lt;int&gt;&gt; res;\n        backtrack(n,n,0,output,res);\n        for(auto it = res.begin();it != res.end();it++){\n            for(auto it1 = (*it).begin();it1 != (*it).end();it1++){\n                cout &lt;&lt; *it1 ;\n            }\n            cout &lt;&lt; endl;\n        }\n        vector&lt;string&gt; result;\n        result = trans(res);\n\n        return result;\n    }\n    void backtrack(int left,int right,int sum,vector&lt;int&gt; &amp;output,vector&lt;vector&lt;int&gt;&gt; &amp;res){\n        if(sum &lt; 0){\n            return;\n        }\n        if(left == 0){\n            vector&lt;int&gt; output1 = output;\n            for(int i = 0;i &lt; right;i++){\n                output1.emplace_back(1);\n            }\n            res.emplace_back(output1);\n            return;\n        }\n        if(right == 0){\n            res.emplace_back(output);\n            return;\n        }\n        output.emplace_back(0);\n        backtrack(left-1,right,sum + 1,output,res);\n        output.pop_back();\n\n        output.emplace_back(1);\n        backtrack(left,right-1,sum - 1,output,res);\n        output.pop_back();\n\n\n    }\n    vector&lt;string&gt; trans(vector&lt;vector&lt;int&gt;&gt; &amp;res){\n        vector&lt;string&gt; result;\n\n        for(auto it = res.begin();it != res.end();it++){\n            vector&lt;int&gt; rank = *it;\n            string ele;\n            for(auto it1 = rank.begin();it1 != rank.end();it1++){\n                if(*it1 == 1){\n                    ele.push_back(')');\n                }\n                else{\n                    ele.push_back('(');\n                }\n\n            }\n            result.emplace_back(ele);\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"cpp/leetcode/#220-leetcode100-","title":"2.20 leetcode100-\u56de\u6eaf-\u5355\u8bcd\u641c\u7d22","text":"<p>\u5728\u4fee\u6539\u6570\u7ec4\u8d8a\u754c\u7684 bug \u65f6\u82b1\u4e86\u4e0d\u5c11\u65f6\u95f4\uff0c\u79ef\u6512\u7ecf\u9a8c ing\uff0c\u8fd8\u662f\u602a\u6211\u53ef\u601c\u7684\u4ee3\u7801\u91cf\u545c\u545c</p> <pre><code>class Solution {\npublic:\n    bool exist(vector&lt;vector&lt;char&gt;&gt;&amp; board, string word) {\n        int row = board.size();\n        int col = board[0].size();\n        //cout &lt;&lt; \"row:\" &lt;&lt; row &lt;&lt; \";col:\" &lt;&lt; col &lt;&lt; endl;\n        vector&lt;vector&lt;int&gt;&gt; use(row,vector&lt;int&gt;(col,0));\n        for(int i = 0;i &lt; row;i++){\n            for(int j = 0;j &lt; col;j++){\n                //cout &lt;&lt; \"check(\" &lt;&lt; i &lt;&lt; \",\" &lt;&lt; j &lt;&lt; \"):\" ;\n                if(board[i][j] != word[0]){\n                    continue;\n                }\n                use[i][j] = 1;\n                if(backtrack(i,j,0,board,word,use) == 1){\n                    //cout &lt;&lt; \"find\uff1a\" &lt;&lt; i &lt;&lt; \" \" &lt;&lt; j ;\n                    use[i][j] = 0;\n                    return true;\n\n                }\n                use[i][j] = 0;\n                //cout &lt;&lt; endl;\n            }\n        }\n        return false;\n    }\n    bool backtrack(int i,int j,int k,vector&lt;vector&lt;char&gt;&gt; &amp;board,const string &amp;word,vector&lt;vector&lt;int&gt;&gt; &amp;use){\n        int flag = 0;\n        if(k &gt;= word.length() - 1){\n            return true;\n        }\n        if(i &gt;= 1 &amp;&amp; board[i-1][j] == word[k + 1] &amp;&amp; use[i-1][j] == 0){\n            //cout &lt;&lt; \"case1\";\n            use[i-1][j] = 1;\n            flag += backtrack(i-1,j,k+1,board,word,use);\n            use[i-1][j] = 0;\n        }\n        //cout &lt;&lt; \"skip case1 \";\n        if(j &gt;= 1 &amp;&amp; board[i][j-1] == word[k + 1] &amp;&amp; use[i][j-1] == 0){\n            //cout &lt;&lt; \"case2\";\n            use[i][j-1] = 1;\n            flag += backtrack(i,j-1,k+1,board,word,use);\n            use[i][j-1] = 0;\n        }\n        //cout &lt;&lt; \"skip case2 \";\n        //cout &lt;&lt;  \"(int)(board.size()):\" &lt;&lt; (int)(board.size()) &lt;&lt; endl;\n        //cout &lt;&lt; \"i=\" &lt;&lt; i &lt;&lt; \";board.size()-2=\" &lt;&lt; (int)(board.size())-2 &lt;&lt; endl;\n\n        if(i &lt;= (int)(board.size())-2 &amp;&amp; board[i+1][j] == word[k + 1] &amp;&amp; use[i+1][j] == 0){\n            //cout &lt;&lt; \"case3\";\n            use[i+1][j] = 1;\n            flag += backtrack(i+1,j,k+1,board,word,use);\n            use[i+1][j] = 0;\n        }\n\n        //cout &lt;&lt; \"skip case3 \";\n        if(j &lt;= (int)(board[0].size())-2 &amp;&amp; board[i][j+1] == word[k + 1] &amp;&amp; use[i][j+1] == 0){\n            //cout &lt;&lt; \"case4\";\n            use[i][j+1] = 1;\n            flag += backtrack(i,j+1,k+1,board,word,use);\n            use[i][j+1] = 0;\n        }\n        //cout &lt;&lt; \"skip case4 \";\n        //cout &lt;&lt; flag &lt;&lt; endl;\n        return (flag &gt; 0);\n\n\n    }\n};\n</code></pre> <p>Tip</p> <p>vector \u6bd4\u5982 board \u7684 <code>board.size()</code> \u662f <code>size_t</code> \u7c7b\u578b\uff0c\u5373\u65e0\u7b26\u53f7\u7c7b\u578b\u6574\u6570\uff0c\u6240\u4ee5 if <code>board.size() == 1</code>, then <code>board.size()-2 =</code> \u5219\u4f1a\u8fd4\u56de\u4e71\u7801, \u6700\u597d\u662f <code>(int)(board.size())</code> \u8f6c\u5316\u4e00\u4e0b</p> <p>key solution : \u91c7\u7528 pair \u7ed3\u6784\u6765\u5b58\u50a8\u4e0a\u4e0b\u5de6\u53f3\u79fb\u52a8\u9009\u9879 \uff0c \u907f\u514d\u4e86\u72ee\u5c71\u4ee3\u7801</p> <pre><code>class Solution {\npublic:\n    bool check(vector&lt;vector&lt;char&gt;&gt;&amp; board, vector&lt;vector&lt;int&gt;&gt;&amp; visited, int i, int j, string&amp; s, int k) {\n        if (board[i][j] != s[k]) {\n            return false;\n        } else if (k == s.length() - 1) {\n            return true;\n        }\n        visited[i][j] = true;\n        vector&lt;pair&lt;int, int&gt;&gt; directions{{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n        bool result = false;\n        for (const auto&amp; dir: directions) {\n            int newi = i + dir.first, newj = j + dir.second;\n            if (newi &gt;= 0 &amp;&amp; newi &lt; board.size() &amp;&amp; newj &gt;= 0 &amp;&amp; newj &lt; board[0].size()) {\n                if (!visited[newi][newj]) {\n                    bool flag = check(board, visited, newi, newj, s, k + 1);\n                    if (flag) {\n                        result = true;\n                        break;\n                    }\n                }\n            }\n        }\n        visited[i][j] = false;\n        return result;\n    }\n\n    bool exist(vector&lt;vector&lt;char&gt;&gt;&amp; board, string word) {\n        int h = board.size(), w = board[0].size();\n        vector&lt;vector&lt;int&gt;&gt; visited(h, vector&lt;int&gt;(w));\n        for (int i = 0; i &lt; h; i++) {\n            for (int j = 0; j &lt; w; j++) {\n                bool flag = check(board, visited, i, j, word, 0);\n                if (flag) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n};\n</code></pre>"},{"location":"cpp/leetcode/#221-leetcode100-","title":"2.21 leetcode100-\u56de\u6eaf-\u5206\u5272\u56de\u6587\u4e32","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;string&gt;&gt; partition(string s) {\n        vector&lt;string&gt; output;\n        vector&lt;vector&lt;string&gt;&gt; res;\n        backtrack(0,s,output,res);\n        return  res;\n    }\n    void backtrack(int first,string s,vector&lt;string&gt; &amp; output,vector&lt;vector&lt;string&gt;&gt; &amp;res){//first to be filled\n        if(first == s.length()){\n            res.emplace_back(output);\n            return;\n        }\n        for(int i = first;i &lt; s.length();i++){//\u5faa\u73af\u5185\u5728\n            if(exam(s,first,i)){\n                string news;\n                news = s.substr(first,i - first + 1);\n                output.emplace_back(news);\n                backtrack(i + 1,s,output,res);\n                output.pop_back();\n            }\n        }\n        return;\n    }\n    bool exam(const string &amp;s,int first,int end){\n        while(first &lt;= end){\n            if(s[first] != s[end])return false; \n            first++;\n            end--;\n        }\n        return true;\n    }\n};\n</code></pre> <p>\u6539\u8fdb\uff1a\u5229\u7528\u52a8\u6001\u89c4\u5212\u7ef4\u62a4 s [i~j] \u662f\u5426\u4e3a\u56de\u6587\u4e32</p> <p>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[ f(i, j) = \\begin{cases}     \\text{True}, &amp; \\text{if } i \\geq j \\\\     f(i+1, j-1) \\land (s [i] = s [j]), &amp; \\text{otherwise} \\end{cases} \\] <p></p>"},{"location":"cpp/leetcode/#226-leetcode100-n","title":"2.26 leetcode100-\u56de\u6eaf-N \u7687\u540e","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;string&gt;&gt; solveNQueens(int n) {\n        vector&lt;vector&lt;string&gt;&gt; ress;\n        vector&lt;vector&lt;int&gt;&gt; res;\n        vector&lt;int&gt; source;\n        for(int i = 0;i &lt; n;i++){\n            source.emplace_back(i);\n        }\n\n        vector&lt;int&gt; output;\n        backtrack(res,output,source,0,n);\n        cout &lt;&lt; \"solution: \" &lt;&lt; res.size() &lt;&lt;endl;\n        for(auto it = res.begin();it != res.end();it++){\n            for(auto io = (*it).begin();io != (*it).end();io++){\n                cout &lt;&lt; (*io) &lt;&lt; \" \";\n            }\n            cout &lt;&lt; endl;\n        }\n        ress = trans(res,n);\n        return ress;\n\n    }\n    void backtrack(vector&lt;vector&lt;int&gt;&gt; &amp;res,vector&lt;int&gt; &amp;output,vector&lt;int&gt; &amp;source,int index,int n){\n        cout &lt;&lt; endl &lt;&lt; \"index = \"&lt;&lt; index &lt;&lt; \":\" &lt;&lt; endl;\n        if(index == n){\n            res.emplace_back(output);\n            return;\n        }\n        int flag = 0;\n        for(int j = 0;j &lt; source.size();j++){\n            int check = 0;\n            for(int i = 0;i &lt; index;i++){\n                int y = index - i;\n                int x = output[i] - source[j]; \n                if(x == y || x + y == 0){\n                    check = 1;\n                    cout &lt;&lt; \"fail \"  ;\n                    break;\n                }\n            }\n            if(check == 0){\n                flag = 1;\n                cout &lt;&lt; \"push:\"&lt;&lt; source[j] &lt;&lt; \" \";\n                int num = source[j];\n                output.emplace_back(source[j]);\n                source.erase(source.begin() + j);\n                backtrack(res,output,source,index+1,n);\n                output.pop_back();\n                source.emplace_back(num);\n                sort(source.begin(),source.end());\n            }\n        }\n        if(flag == 0){\n            cout &lt;&lt; \"damn!back one index\" &lt;&lt; endl;\n        }\n    }\n    vector&lt;vector&lt;string&gt;&gt; trans(vector&lt;vector&lt;int&gt;&gt; res,int n){\n        vector&lt;vector&lt;string&gt;&gt; ress;\n        for(auto it = res.begin();it != res.end();it++){\n            vector&lt;int&gt; dir = *it;\n            vector&lt;string&gt; output;\n            for(auto itt = dir.begin();itt != dir.end();itt++){\n                string s;\n                int num = (*itt);\n                for(int i = 0;i &lt; num;i++){\n                    s.push_back('.');\n                }\n                s.push_back('Q');\n                for(int i = num + 1;i &lt; n;i++){\n                    s.push_back('.');\n                }\n                output.emplace_back(s);\n            }\n            ress.emplace_back(output);\n\n        }\n        return ress;\n    }\n\n};\n</code></pre> <p>key solution:\ud83e\udd10\u503c\u5f97\u5b66\u4e60</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;string&gt;&gt; solveNQueens(int n) {\n        auto solutions = vector&lt;vector&lt;string&gt;&gt;();\n        auto queens = vector&lt;int&gt;(n, -1);\n        auto columns = unordered_set&lt;int&gt;();\n        auto diagonals1 = unordered_set&lt;int&gt;();\n        auto diagonals2 = unordered_set&lt;int&gt;();\n        backtrack(solutions, queens, n, 0, columns, diagonals1, diagonals2);\n        return solutions;\n    }\n\n    void backtrack(vector&lt;vector&lt;string&gt;&gt; &amp;solutions, vector&lt;int&gt; &amp;queens, int n, int row, unordered_set&lt;int&gt; &amp;columns, unordered_set&lt;int&gt; &amp;diagonals1, unordered_set&lt;int&gt; &amp;diagonals2) {\n        if (row == n) {\n            vector&lt;string&gt; board = generateBoard(queens, n);\n            solutions.push_back(board);\n        } else {\n            for (int i = 0; i &lt; n; i++) {\n                if (columns.find(i) != columns.end()) {\n                    continue;\n                }\n                int diagonal1 = row - i;\n                if (diagonals1.find(diagonal1) != diagonals1.end()) {\n                    continue;\n                }\n                int diagonal2 = row + i;\n                if (diagonals2.find(diagonal2) != diagonals2.end()) {\n                    continue;\n                }\n                queens[row] = i;\n                columns.insert(i);\n                diagonals1.insert(diagonal1);\n                diagonals2.insert(diagonal2);\n                backtrack(solutions, queens, n, row + 1, columns, diagonals1, diagonals2);\n                queens[row] = -1;\n                columns.erase(i);\n                diagonals1.erase(diagonal1);\n                diagonals2.erase(diagonal2);\n            }\n        }\n    }\n\n    vector&lt;string&gt; generateBoard(vector&lt;int&gt; &amp;queens, int n) {\n        auto board = vector&lt;string&gt;();\n        for (int i = 0; i &lt; n; i++) {\n            string row = string(n, '.');\n            row[queens[i]] = 'Q';\n            board.push_back(row);\n        }\n        return board;\n    }\n};\n</code></pre> <p>Tip</p> <p>\u5229\u7528 unordered_set \u6570\u636e\u7ed3\u6784\u975e\u5e38\u5408\u9002\uff0c\u51cf\u5c0f\u65f6\u95f4\u590d\u6742\u5ea6(\u5728 find \u65f6\u5019)\uff0c\u4ee3\u66ff source \u6570\u7ec4\u8bb0\u5f55\u80fd\u591f\u4f7f\u7528\u7684\u503c \u7531\u4e8e\u65e0\u5e8f\uff0c\u6240\u4ee5 insert \u548c erase \u64cd\u4f5c\u975e\u5e38\u65b9\u4fbf\u3002</p> <p>\u6211\u81ea\u5df1\u53c8\u5c06\u81ea\u5df1\u7684 solution \u6539\u8fdb\u4e86\u4e00\u4e0b\uff1a(\u4f46\u662f\u4ecd\u7136\u4e0d\u5982key solution\u8fdc\u8fdc\u4e0d\u5982)</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;string&gt;&gt; solveNQueens(int n) {\n        vector&lt;vector&lt;int&gt;&gt; res;\n        vector&lt;vector&lt;string&gt;&gt; ress;\n        unordered_set&lt;int&gt; source;\n        for(int i = 0;i &lt; n;i++){\n            source.insert(i);\n        }\n        auto output = vector&lt;int&gt;();\n        backtrack(res,output,source,0,n);\n        trans(ress,res,n);\n        return ress;\n    }\n    void trans(vector&lt;vector&lt;string&gt;&gt; &amp;ress,const vector&lt;vector&lt;int&gt;&gt;&amp; res,int n){\n        for(auto it : res){\n            auto output = vector&lt;string&gt; ();\n            for(auto itt : it){\n                string s(n,'.');\n                s[itt] = 'Q';\n                output.emplace_back(s);\n            }\n        ress.emplace_back(output);\n        }\n    } \n    void backtrack(vector&lt;vector&lt;int&gt;&gt; &amp;res,vector&lt;int&gt; &amp;output,unordered_set&lt;int&gt; &amp;source,int index,int n){\n        if(index == n){\n            res.emplace_back(output);\n            return;\n        }\n        for(auto choice : source){\n            int flag = 0;\n            for(int i = 0;i &lt; index;i++){\n                int y = index - i;\n                int x = choice - output[i];\n                if(x == y || x == -y){\n                    flag = 1;\n                    break;\n                }\n            }\n            if(flag == 0){\n                unordered_set &lt;int&gt; cop = source;\n                output.emplace_back(choice);\n                cop.erase(choice);\n                backtrack(res,output,cop,index + 1,n);\n\n                output.pop_back();\n            }\n        }\n    }\n};\n</code></pre> <p>Warning</p> <p>\u5728\u4f7f\u7528 <code>for(auto choice : source)</code>\u5faa\u73af\u4f53\u5185\u90e8\u65f6\u4e0d\u80fd\u4f7f\u7528 <code>source.erase(choice)</code>\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002\u4e5f\u5c31\u662f\u4e0d\u8981\u6539\u53d8 <code>unordered_set&lt;int&gt; source</code>\u7684\u5143\u7d20\u5185\u5bb9\u3002\u53ef\u4ee5\u62f7\u8d1d\u4e00\u4e2a\u526f\u672c\u8fdb\u884c\u5185\u90e8\u64cd\u4f5c</p>"},{"location":"cpp/leetcode/#227-leetcode100-k","title":"2.27 leetcode100-\u5806-\u6570\u7ec4\u4e2d\u7b2ck\u4e2a\u6700\u5927\u5143\u7d20","text":"<p>\u5728\u5f00\u59cb\u8fd9\u4e2a\u90e8\u5206\u7ae0\u8282\u7684\u65f6\u5019\u4e0d\u5f97\u4e0d\u91cd\u65b0\u590d\u4e60\u4e86\u5927\u4e00\u4e0bfds\u5b66\u4e60\u7684\u5806\u5185\u5bb9\uff0c\u57fa\u7840\u8fd8\u662f\u5f88\u91cd\u8981\u7684\u54c8\u54c8</p> <p>Failure</p> <p>\u5806\u6392\u5e8f\u662f\u4e00\u79cd\u9009\u62e9\u6392\u5e8f\uff0c\u6574\u4f53\u4e3b\u8981\u7531\u6784\u5efa\u521d\u59cb\u5806+\u4ea4\u6362\u5806\u9876\u5143\u7d20\u548c\u672b\u5c3e\u5143\u7d20\u5e76\u91cd\u5efa\u5806\u4e24\u90e8\u5206\u7ec4\u6210\u3002\u5176\u4e2d\u6784\u5efa\u521d\u59cb\u5806\u7ecf\u63a8\u5bfc\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u5728\u4ea4\u6362\u5e76\u91cd\u5efa\u5806\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u4ea4\u6362n-1\u6b21\uff0c\u800c\u91cd\u5efa\u5806\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6839\u636e\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28\uff0c[log2(n-1),log2(n-2)...1]\u9010\u6b65\u9012\u51cf\uff0c\u8fd1\u4f3c\u4e3a <code>nlogn</code>\u3002\u6240\u4ee5\u5806\u6392\u5e8f\u65f6\u95f4\u590d\u6742\u5ea6\u4e00\u822c\u8ba4\u4e3a\u5c31\u662fO(nlogn)\u7ea7\u3002</p> <p>\u4f7f\u7528\u5e93\u51fd\u6570</p> <pre><code>class Solution {\npublic:\n    int findKthLargest(vector&lt;int&gt;&amp; nums, int k) {\n        priority_queue&lt;int&gt; a;\n        for(auto it : nums){\n            a.push(it);\n        }\n        for(int i = 0;i &lt; k-1;i++){\n            a.pop();\n        }\n        return a.top();\n    }\n};\n</code></pre> <pre><code>class Solution {\npublic:\n    int findKthLargest(vector&lt;int&gt;&amp; nums, int k) {\n        sort(nums.begin(),nums.end());\n        return nums[nums.size()-k];\n    }\n};\n</code></pre> <p>\u81ea\u5df1\u5b9e\u73b0\uff1a</p> <pre><code>class Solution {\npublic:\n    int findKthLargest(vector&lt;int&gt;&amp; nums, int k) {\n        int heapsize = nums.size();\n        buildheap(nums,heapsize);\n        for(int i = 0;i &lt; k;i++){\n            swap(nums[heapsize - 1],nums[0]);\n            heapsize--;\n            maxfy(nums,heapsize,0);\n            cout &lt;&lt; nums[heapsize] &lt;&lt; \" \";\n        }\n        //cout &lt;&lt; \"ok\" &lt;&lt; endl;\n        return nums[heapsize];\n    }\n    void buildheap(vector&lt;int&gt; &amp;nums,int heapsize){\n        for(int i = heapsize/2 - 1;i &gt;= 0 ; i--){\n            maxfy(nums,heapsize,i);\n        }\n    }\n    void maxfy(vector&lt;int&gt; &amp;nums,int heapsize,int i){\n        int l = 2*i + 1;\n        int r = 2*i + 2;\n        if(l &gt;= heapsize){\n            return;\n        }\n        if(l == heapsize - 1){\n            if(nums[l] &gt; nums[i]){\n                swap(nums[l],nums[i]);\n            }\n            return;\n        }\n        int larger = (nums[l] &gt; nums[r]) ? l : r;\n        if(nums[larger] &gt; nums[i]){\n            swap(nums[larger],nums[i]);\n            maxfy(nums,heapsize,larger);\n        }\n    }\n};\n</code></pre> <p>\u5176\u4e2dmaxfy\u51fd\u6570\u53ef\u4ee5\u5199\u7684\u66f4\u7b80\u5355\uff1a</p> <pre><code>    void maxHeapify(vector&lt;int&gt;&amp; a, int i, int heapSize) {\n        int l = i * 2 + 1, r = i * 2 + 2, largest = i;\n        if (l &lt; heapSize &amp;&amp; a[l] &gt; a[largest]) {\n            largest = l;\n        } \n        if (r &lt; heapSize &amp;&amp; a[r] &gt; a[largest]) {\n            largest = r;\n        }\n        if (largest != i) {\n            swap(a[i], a[largest]);\n            maxHeapify(a, largest, heapSize);\n        }\n    }\n</code></pre>"},{"location":"cpp/leetcode/#228-leetcode100-k","title":"2.28 leetcode100-\u5806-\u524dk\u4e2a\u9ad8\u9891\u5143\u7d20","text":"<p>my solution\u2650\ufe0f\u26f5\ufe0f:\u4f7f\u7528\u4e86 pari\u7684priority\u6bd4\u8f83 \u5012\u8f6cunordered_map\u7684\u7d22\u5f15\u548c\u51fa\u73b0\u9891\u6b21</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; topKFrequent(vector&lt;int&gt;&amp; nums, int k) {\n        unordered_map &lt;int,int&gt; dir;\n        for(auto it : nums){\n            if(dir.find(it) != dir.end()){\n                (dir[it])++;\n            }\n            else{\n                dir[it] = 1;\n            }\n        }\n        priority_queue&lt;pair&lt;int,int&gt;&gt; a;\n        for(auto it : dir){\n            pair&lt;int,int&gt; ele(it.second,it.first);\n            a.push(ele);\n        }\n        vector&lt;int&gt; res;\n        for(int i = 0;i&lt;k;i++){\n\n            res.emplace_back((a.top()).second);\n            a.pop();\n        }\n        return res;\n\n    }\n};\n</code></pre> <p>\u7b80\u5316\uff1aunordered_map dir[it]\u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u96f6</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; topKFrequent(vector&lt;int&gt;&amp; nums, int k) {\n        unordered_map &lt;int,int&gt; dir;\n        for(auto it : nums){\n            dir[it]++;\n\n        }\n        priority_queue&lt;pair&lt;int,int&gt;&gt; a;\n        for(auto it : dir){\n            pair&lt;int,int&gt; ele(it.second,it.first);\n            a.push(ele);\n        }\n        vector&lt;int&gt; res;\n        for(int i = 0;i&lt;k;i++){\n\n            res.emplace_back((a.top()).second);\n            a.pop();\n        }\n        return res;\n\n    }\n};\n</code></pre> <p>\u4f7f\u7528\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff1a</p> <pre><code>class Solution {\npublic:\n    struct cmp{\n        bool operator()(const pair&lt;int,int&gt; &amp;a,const pair&lt;int,int&gt; &amp;b ){\n            if(a.second &gt; b.second)return true;\n            return false;\n        }\n    };\n\n    vector&lt;int&gt; topKFrequent(vector&lt;int&gt;&amp; nums, int k) {\n        unordered_map&lt;int, int&gt; occurrences;\n        for (auto&amp; v : nums) {\n            occurrences[v]++;\n        }\n\n        // pair \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ee3\u8868\u6570\u7ec4\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u4ee3\u8868\u4e86\u8be5\u503c\u51fa\u73b0\u7684\u6b21\u6570\n        priority_queue&lt;pair&lt;int, int&gt;, vector&lt;pair&lt;int, int&gt;&gt;, cmp&gt; q;\n        for (const auto &amp;[num, count] : occurrences) {\n            if (q.size() == k) {\n                if (q.top().second &lt; count) {\n                    q.pop();\n                    q.emplace(num, count);\n                }\n            } else {\n                q.emplace(num, count);\n            }\n        }\n        vector&lt;int&gt; ret;\n        while (!q.empty()) {\n            ret.emplace_back(q.top().first);\n            q.pop();\n        }\n        return ret;\n    }\n};\n</code></pre> Failure <p>\u5237\u5230\u8fd9\u91cc\uff0c\u770b\u5230\u4e0b\u4e00\u9053\u6d89\u53ca\u7ed3\u6784\u4f53\u548c\u7c7b\u5bf9\u8c61\u7684\u9898\u76ee\uff0c\u771f\u5fc3\u611f\u89c9\u5e7c\u7a1a\u7684\u7b97\u6cd5\u9898\u5237\u591a\u4e86\uff0c\u5dee\u70b9\u5fd8\u8bb0\u81ea\u5df1\u76ee\u524d\u53ea\u6d89\u53ca\u4e86c++\u8bed\u6cd5\u7684\u51b0\u5c71\u4e00\u89d2\uff0c\u9042\u91cd\u56deoop\u6076\u8865\u7c7b\u548c\u5bf9\u8c61\u91cd\u5934\u620f</p>"},{"location":"cpp/leetcode/#3-1-leetcode100-","title":"3-1 leetcode100-\u5806-","text":""},{"location":"cpp/project/","title":"Index","text":"<p>\u660e\u767d\u4e86\uff0c\u6211\u5c06\u4e3a\u4f60\u5bfb\u627e\u9002\u5177\u5907\u6570\u636e\u7ed3\u6784\u3001\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u6570\u636e\u5e93\u7cfb\u7edf\u77e5\u8bc6\u3001\u4f46\u5c1a\u672a\u5b66\u4e60\u64cd\u4f5c\u7cfb\u7edf\u548c\u8ba1\u7b97\u673a\u7f51\u7edc\u7684 C++ \u5f00\u6e90\u9879\u76ee\u3002\u8fd9\u4e9b\u9879\u76ee\u5c06\u504f\u5411\u5c0f\u578b\u5230\u4e2d\u578b\uff0c\u6ce8\u91cd\u7ec3\u4e60\u57fa\u672c\u7b97\u6cd5\u3001OOP\u8bbe\u8ba1\u3001\u6570\u636e\u5e93\u4ea4\u4e92\uff0c\u4e0d\u4f9d\u8d56\u5e95\u5c42\u7cfb\u7edf\u6216\u590d\u6742\u7f51\u7edc\u6280\u672f\u3002</p> <p>\u6211\u4f1a\u5c3d\u5feb\u6574\u7406\u51fa\u63a8\u8350\u9879\u76ee\u6e05\u5355\u548c\u8bf4\u660e\uff0c\u65b9\u4fbf\u4f60\u9009\u62e9\u5e76\u53c2\u4e0e\u7ec3\u4e60\u3002</p>"},{"location":"cpp/project/#c","title":"\u9002\u5408\u5927\u4e8c\u5b66\u751f\u7684 C++ \u5f00\u6e90\u7ec3\u4e60\u9879\u76ee\u63a8\u8350","text":"<ul> <li> <p>Library Management System (\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf) \u2013 \u529f\u80fd\u7b80\u4ecb\uff1a\u4e00\u4e2a\u57fa\u4e8e\u547d\u4ee4\u884c\u7684\u56fe\u4e66\u9986\u7ba1\u7406\u7cfb\u7edf\uff0c\u53ef\u5f55\u5165\u65b0\u4e66\u8bb0\u5f55\u3001\u67e5\u8be2\u9986\u85cf\u4fe1\u606f\u5e76\u8fdb\u884c\u501f\u8fd8\u7ba1\u7406\u3002\u9879\u76ee\u5730\u5740\uff1aLMS-Library-Management-System\u3002\u63a8\u8350\u7406\u7531\uff1a\u9879\u76ee\u8bbe\u8ba1\u8f83\u7b80\u5355\u4f46\u529f\u80fd\u5b8c\u6574\uff0c\u9002\u5408\u7ec3\u4e60\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u548c\u6587\u4ef6/\u6570\u636e\u5b58\u50a8\u3002\u7ec3\u4e60\u70b9\uff1aOOP\uff08\u5982 Book\u3001Student \u7c7b\u8bbe\u8ba1\uff09\u3001\u6587\u4ef6\u8bfb\u5199\u3001\u57fa\u672c\u7b97\u6cd5\uff08\u67e5\u627e\u3001\u6392\u5e8f\u56fe\u4e66\u8bb0\u5f55\uff09\u7b49\u3002</p> </li> <li> <p>C++ Console Mini Games (\u63a7\u5236\u53f0\u5c0f\u6e38\u620f\u96c6) \u2013 \u529f\u80fd\u7b80\u4ecb\uff1a\u5305\u542b\u591a\u6b3e\u63a7\u5236\u53f0\u5c0f\u6e38\u620f\uff08\u5982\u201cCar Game\u201d\u3001\u201cPong\u201d\u3001\u201cSnake\u201d\uff09\uff0c\u5e2e\u52a9\u521d\u5b66\u8005\u7ec3\u4e60 C++ \u57fa\u7840\u3002\u9879\u76ee\u5730\u5740\uff1awin-x86-cpp-console-games\u3002\u63a8\u8350\u7406\u7531\uff1a\u9879\u76ee\u4ee3\u7801\u7b80\u6d01\uff0c\u6db5\u76d6\u6e38\u620f\u903b\u8f91\u5faa\u73af\u548c\u8f93\u5165\u8f93\u51fa\uff0c\u6613\u4e8e\u7406\u89e3\u548c\u4fee\u6539\uff0c\u9002\u5408\u7ec3\u4e60\u6307\u9488\u3001\u51fd\u6570\u548c\u57fa\u7840\u7b97\u6cd5\u3002\u7ec3\u4e60\u70b9\uff1a\u6307\u9488\u548c\u51fd\u6570\u4f7f\u7528\u3001\u5faa\u73af\u4e0e\u6761\u4ef6\u63a7\u5236\u3001\u78b0\u649e\u68c0\u6d4b\u7b49\u7b97\u6cd5\u601d\u8def\u3002</p> </li> <li> <p>Student Management System (\u5b66\u751f\u7ba1\u7406\u7cfb\u7edf) \u2013 \u529f\u80fd\u7b80\u4ecb\uff1a\u4e00\u4e2a\u7ba1\u7406\u5b66\u751f\u8bb0\u5f55\u7684\u63a7\u5236\u53f0\u5e94\u7528\uff0c\u652f\u6301\u63d2\u5165\u3001\u67e5\u770b\u3001\u6309\u5b66\u53f7/\u59d3\u540d\u641c\u7d22\u3001\u5220\u9664\u3001\u66f4\u65b0\u3001\u6392\u5e8f\u4ee5\u53ca\u7edf\u8ba1\u7b49\u529f\u80fd\u3002\u9879\u76ee\u5730\u5740\uff1astudent-management-system\u3002\u63a8\u8350\u7406\u7531\uff1a\u5178\u578b\u7684 CRUD \u5e94\u7528\uff0c\u6db5\u76d6\u6570\u7ec4/\u5bb9\u5668\u7ba1\u7406\u548c\u5b57\u7b26\u4e32\u64cd\u4f5c\u7b49\uff0c\u529f\u80fd\u660e\u786e\uff0c\u5bb9\u6613\u4e0a\u624b\u3002\u7ec3\u4e60\u70b9\uff1a\u6570\u636e\u7ed3\u6784\uff08\u5982\u6570\u7ec4\u3001<code>std::vector</code> \u5b58\u50a8\u5b66\u751f\u4fe1\u606f\uff09\u3001\u67e5\u627e\u548c\u6392\u5e8f\u7b97\u6cd5\u3001\u6587\u4ef6\u6216\u9759\u6001\u6570\u636e\u5b58\u50a8\u7b49\u3002</p> </li> <li> <p>Inventory Management System (\u5e93\u5b58\u7ba1\u7406\u7cfb\u7edf) \u2013 \u529f\u80fd\u7b80\u4ecb\uff1a\u6f14\u793a\u9762\u5411\u5bf9\u8c61\u7684\u5e93\u5b58\u7ba1\u7406\u7cfb\u7edf\uff0c\u5305\u542b\u4f9b\u5e94\u5546\u548c\u5ba2\u6237\u4e24\u79cd\u83dc\u5355\uff0c\u652f\u6301\u6dfb\u52a0/\u5220\u9664/\u66f4\u65b0\u5546\u54c1\u4e0e\u7c7b\u522b\uff0c\u6a21\u62df\u91c7\u8d2d\u4e0e\u7ed3\u8d26\u7b49\u529f\u80fd\u3002\u9879\u76ee\u5730\u5740\uff1aInventory_Management_System_Using_CPP\u3002\u63a8\u8350\u7406\u7531\uff1a\u9879\u76ee\u5f3a\u8c03 OOP \u8bbe\u8ba1\uff0c\u4f7f\u7528\u5355\u94fe\u8868\u52a8\u6001\u5b58\u50a8\u6570\u636e\uff0c\u7ed3\u6784\u5b8c\u6574\uff0c\u53ef\u7ec3\u4e60\u7c7b\u548c\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u3002\u7ec3\u4e60\u70b9\uff1aOOP\uff08\u7c7b\u4e0e\u5bf9\u8c61\u8bbe\u8ba1\uff09\u3001\u94fe\u8868\u7b49\u6570\u636e\u7ed3\u6784\u3001\u5c01\u88c5\u548c\u7ee7\u627f\u3001\u7b97\u6cd5\uff08\u5217\u8868\u904d\u5386\u3001\u589e\u5220\u64cd\u4f5c\uff09\u3002</p> </li> <li> <p>Staff Management System (\u5458\u5de5\u7ba1\u7406\u7cfb\u7edf) \u2013 \u529f\u80fd\u7b80\u4ecb\uff1aC++ \u547d\u4ee4\u884c\u5e94\u7528\uff0c\u4f7f\u7528 SQLite \u6570\u636e\u5e93\u5b58\u50a8\u5458\u5de5\u4fe1\u606f\uff0c\u652f\u6301\u67e5\u770b\u3001\u65b0\u5efa\u3001\u7f16\u8f91\u548c\u5220\u9664\u5458\u5de5\u6863\u6848\u3002\u9879\u76ee\u5730\u5740\uff1astaff-management-system\u3002\u63a8\u8350\u7406\u7531\uff1a\u771f\u5b9e\u4f7f\u7528\u4e86\u6570\u636e\u5e93\uff08SQLite\uff09\uff0c\u9002\u5408\u7ec3\u4e60\u6570\u636e\u5e93\u4ea4\u4e92\u548c SQL \u64cd\u4f5c\uff0c\u540c\u65f6\u5e94\u7528\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u3002\u7ec3\u4e60\u70b9\uff1aSQL/SQLite \u64cd\u4f5c\uff08CRUD\uff09\u3001\u6570\u636e\u5e93\u8fde\u63a5\u4e0e\u6267\u884c\u67e5\u8be2\u3001\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u3001\u6587\u4ef6\u5904\u7406\u548c\u547d\u4ee4\u884c\u4ea4\u4e92\u3002</p> </li> </ul>"},{"location":"cpp/project/note/","title":"cpp\u5f00\u53d1\u7ecf\u9a8c","text":""},{"location":"cpp/project/note/#_1","title":"\u5173\u4e8e\u8de8\u6587\u4ef6","text":"<p>\u5982\u679c\u5b8f\u5b9a\u4e49\u5728\u5934\u6587\u4ef6\u91cc\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5934\u6587\u4ef6\u88ab #include \u5230\u591a\u4e2a .cpp \u91cc\uff0c\u90a3\u4e48\u5728\u8fd9\u4e9b .cpp \u7f16\u8bd1\u5355\u5143\u4e2d\u5b8f\u4e5f\u90fd\u6709\u6548\uff08\u56e0\u4e3a #include \u4f1a\u628a\u5b8f\u6587\u672c\u590d\u5236\u8fdb\u53bb\uff09\u3002</p> <p>\ud83d\udccc \u4f46\u662f\uff0c\u4e0d\u540c .cpp \u6587\u4ef6\u4e4b\u95f4\u7684\u5b8f\u5b9a\u4e49\u662f\u4e92\u76f8\u72ec\u7acb\u7684\uff0c\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u5355\u4e2a\u6587\u4ef6\u65f6\u53ea\u77e5\u9053\u8fd9\u4e2a\u6587\u4ef6\u91cc\uff08\u4ee5\u53ca\u5b83\u5305\u542b\u7684\u5934\u6587\u4ef6\uff09\u6709\u54ea\u4e9b\u5b8f\u3002</p>"},{"location":"cpp/project/note/#inline","title":"inline","text":"<p>\u4e0e\u7c7b\u6210\u5458\u65e0\u5173\u7684\u5de5\u5177\u51fd\u6570\uff0c\u5efa\u8bae\u72ec\u7acb\u5b9a\u4e49\uff0c\u65b9\u4fbf\u590d\u7528\u3002h\u6587\u4ef6\u58f0\u660e\u5b9a\u4e49\u4e00\u8d77\u5199 <pre><code>// utils.h\n#pragma once\n#include &lt;iostream&gt;\n#include &lt;chrono&gt;\n#include &lt;ctime&gt;\n\ninline void printCurrentTime() {\n    auto now = std::chrono::system_clock::now();\n    std::time_t t = std::chrono::system_clock::to_time_t(now);\n    std::cout &lt;&lt; std::ctime(&amp;t);\n}\n</code></pre></p> <ol> <li>\u5728\u4e00\u4e2a\u5de5\u5177\u5934\u6587\u4ef6\uff08\u5982 utils.h\uff09\u4e2d\u5b9a\u4e49:</li> <li>\u9759\u6001\u6210\u5458\u51fd\u6570</li> </ol>"},{"location":"cpp/sdl2/sdl2/","title":"cpp game","text":"<p>\u7528arch linux in wsl2\u5f00\u53d1\u4e00\u4e2acpp\u7684\u6e38\u620f\u9879\u76ee</p> <p>key</p> <p>\u56fe\u5f62\u5e93\u4f7f\u7528SDL2\uff0c\u6307\u5b9a\u4f7f\u7528Wayland + EGL + GLES</p> <p>SDL2\u5b66\u4e60\u8d44\u6e90\uff1a https://lazyfoo.net/tutorials/SDL/</p> <p>https://www.youtube.com/watch?v=c5UEFzOJ9-U&amp;list=PLVotA8ycjnCs3DNWIbEIpBrjYkhJq11q-&amp;index=2</p> <p>https://www.cirmall.com/upload/webench/1475218799/works_SDL2%20%E5%88%9D%E7%BA%A7%E6%95%99%E7%A8%8B.pdf</p> <p>\u7f16\u8bd1\u547d\u4ee4\uff1a <pre><code>g++ -o test test.cpp -lSDL2\n</code></pre></p>"},{"location":"cpp/sdl2/sdl2/#get-started","title":"get started","text":"available options <p>\u5728 Windows \u4e0a\u4f7f\u7528 WSL2 + Arch Linux \u6765\u5f00\u53d1\u4e00\u4e2a C++ \u6e38\u620f\u9879\u76ee\u65f6\uff0c\u8981\u5b9e\u73b0\u56fe\u5f62\u5316\u754c\u9762\u652f\u6301\uff0c\u4f60\u53ef\u4ee5\u7ed3\u5408\u4ee5\u4e0b\u6280\u672f\u6765\u5b9e\u73b0\u5f00\u53d1\u73af\u5883\u3001\u56fe\u5f62\u663e\u793a\u548c\u8c03\u8bd5\u4f53\u9a8c\uff1a</p> <ul> <li>my option: \u65b9\u6848\u4e00\uff1a\u4f7f\u7528 Windows \u4e0a\u7684\u56fe\u5f62\u670d\u52a1</li> </ul>"},{"location":"cpp/sdl2/sdl2/#1","title":"\ud83c\udfae 1. \u56fe\u5f62\u754c\u9762\u652f\u6301\u65b9\u5f0f","text":""},{"location":"cpp/sdl2/sdl2/#windows","title":"\u2705 \u65b9\u6848\u4e00\uff1a\u4f7f\u7528 Windows \u4e0a\u7684\u56fe\u5f62\u670d\u52a1\uff08\u63a8\u8350\uff09","text":"<p>\u4f7f\u7528 Windows \u7684 X Server + WSLg WSL2 \u4ece Windows 11 \u5f00\u59cb\u81ea\u5e26 WSLg\uff08Windows Subsystem for Linux GUI\uff09\uff0c\u5b83\u652f\u6301\u5728 Linux \u5b50\u7cfb\u7edf\u4e2d\u76f4\u63a5\u8fd0\u884c GUI \u7a0b\u5e8f\uff08\u5305\u62ec\u57fa\u4e8e X11 \u548c Wayland \u7684\u7a0b\u5e8f\uff09\u3002</p> <ul> <li>\u9002\u5408\u4eba\u7fa4\uff1a\u4f7f\u7528 Windows 11 \u7684\u5f00\u53d1\u8005\uff08\u6700\u63a8\u8350\uff09</li> <li> <p>\u4f18\u70b9\uff1a</p> </li> <li> <p>\u96f6\u914d\u7f6e GUI \u652f\u6301</p> </li> <li>\u53ef\u4ee5\u8fd0\u884c Linux \u4e0b\u7684 GUI \u5de5\u5177\uff08\u5982 VS Code\u3001SDL/OpenGL \u7a97\u53e3\uff09</li> <li>\u517c\u5bb9\u6027\uff1aWSLg \u517c\u5bb9 SDL2\u3001OpenGL\u3001Vulkan \u7b49\u56fe\u5f62\u5e93</li> </ul> <p>\ud83d\udee0 \u4f7f\u7528\u65b9\u6cd5\uff1a</p> <ul> <li>\u786e\u4fdd\u4f60\u7684 WSL2 \u7248\u672c\u4e3a Windows 11 \u7684 WSLg \u652f\u6301\u7248\u672c</li> <li>\u5728 Arch \u4e2d\u5b89\u88c5\u6e38\u620f\u76f8\u5173\u5e93\uff1a</li> </ul> <p><pre><code>sudo pacman -S sdl2 sdl2_image glew glfw mesa vulkan-icd-loader\n</code></pre> * \u7f16\u8bd1\u5e76\u8fd0\u884c SDL/OpenGL \u7a0b\u5e8f\uff0c\u7a97\u53e3\u4f1a\u81ea\u52a8\u5f39\u51fa\uff08\u7531 Windows \u7684 WSLg \u663e\u793a\uff09</p>"},{"location":"cpp/sdl2/sdl2/#windows-x-server-vcxsrvx410","title":"\u2705 \u65b9\u6848\u4e8c\uff1a\u4f7f\u7528 Windows \u7684 X Server\uff08\u4f8b\u5982 VcXsrv\u3001X410\uff09","text":"<p>\u5982\u679c\u4f60\u4f7f\u7528 Windows 10 \u6216\u7981\u7528\u4e86 WSLg\uff0c\u53ef\u4ee5\u4f7f\u7528 X Server\uff1a</p> <ul> <li> <p>\u5b89\u88c5 X Server\uff08Windows\uff09\uff1a</p> </li> <li> <p>VcXsrv</p> </li> <li>X410</li> <li>\u542f\u52a8 X Server \u540e\uff0c\u5728 Arch \u4e2d\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff1a</li> </ul> <p><pre><code>export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0\nexport LIBGL_ALWAYS_INDIRECT=1\n</code></pre> * \u4e4b\u540e\u8fd0\u884c\u56fe\u5f62\u7a0b\u5e8f\uff08\u5982 SDL/OpenGL\uff09\uff0c\u4f1a\u901a\u8fc7 X Server \u5728 Windows \u4e0a\u663e\u793a</p>"},{"location":"cpp/sdl2/sdl2/#2","title":"\ud83d\udd27 2. \u6e38\u620f\u5f00\u53d1\u76f8\u5173\u5de5\u5177\u94fe\u5efa\u8bae","text":"\u7c7b\u578b \u5de5\u5177/\u5e93 \u5b89\u88c5\u547d\u4ee4 \u7f16\u8bd1\u5668 <code>gcc</code> / <code>clang</code> <code>sudo pacman -S gcc clang</code> \u6784\u5efa\u7cfb\u7edf <code>cmake</code> / <code>meson</code> <code>sudo pacman -S cmake meson ninja</code> \u56fe\u5f62\u5e93 <code>SDL2</code>, <code>OpenGL</code>, <code>Vulkan</code> <code>sudo pacman -S sdl2 glew glfw mesa vulkan-headers</code> \u7f16\u8f91\u5668 <code>neovim</code> / <code>vscode</code> / <code>CLion</code> VSCode\u53ef\u7528Windows\u7aef\uff0c\u8fde\u63a5WSL\u8c03\u8bd5"},{"location":"cpp/sdl2/sdl2/#sdl2","title":"\ud83d\udd79 \u793a\u4f8b\uff1a\u7f16\u8bd1\u4e00\u4e2a\u7b80\u5355\u7684 SDL2 \u7a0b\u5e8f","text":"<ol> <li>\u5b89\u88c5 SDL2\uff1a</li> </ol> <pre><code>sudo pacman -S sdl2\n</code></pre> <ol> <li>\u7f16\u5199 <code>main.cpp</code>\uff1a</li> </ol> <pre><code>#include &lt;SDL2/SDL.h&gt;\nint main() {\n    SDL_Init(SDL_INIT_VIDEO);\n    SDL_Window* window = SDL_CreateWindow(\"Hello SDL2\", 100, 100, 800, 600, SDL_WINDOW_SHOWN);\n    SDL_Delay(3000);\n    SDL_DestroyWindow(window);\n    SDL_Quit();\n    return 0;\n}\n</code></pre> <ol> <li>\u7f16\u8bd1\u5e76\u8fd0\u884c\uff1a</li> </ol> <pre><code>g++ main.cpp -o sdl_app `sdl2-config --cflags --libs`\n./sdl_app\n</code></pre> <p>\u5982\u679c\u4f60\u7528\u7684\u662f WSLg \u6216\u914d\u7f6e\u597d\u4e86 X Server\uff0c\u7a97\u53e3\u5c31\u80fd\u6b63\u5e38\u663e\u793a\u3002</p>"},{"location":"cpp/sdl2/sdl2/#vulkan-opengl","title":"\ud83d\udca1 \u5982\u679c\u4f60\u7528 Vulkan \u6216 OpenGL\uff1a","text":"<ul> <li>WSLg \u652f\u6301 OpenGL + Vulkan \u663e\u793a\u52a0\u901f</li> <li>\u53ef\u7ed3\u5408 <code>vulkan-tools</code> \u6d4b\u8bd5\uff1a</li> </ul> <pre><code>sudo pacman -S vulkan-tools\nvulkaninfo | less\n</code></pre>"},{"location":"cpp/sdl2/sdl2/#windows-wsl2","title":"\ud83d\ude80 \u63a8\u8350\u5f00\u53d1\u6d41\u7a0b\uff08Windows + WSL2\uff09\uff1a","text":"<ol> <li>\u7528 VS Code \u7684 WSL Remote \u63d2\u4ef6 \u5f00\u53d1\u4ee3\u7801</li> <li>\u5728 Arch \u4e0b\u4f7f\u7528 <code>cmake</code> \u6784\u5efa</li> <li>\u7528 SDL/OpenGL \u7f16\u5199\u6e38\u620f\u903b\u8f91</li> <li>\u7528 WSLg \u6216 X Server \u663e\u793a\u56fe\u5f62\u754c\u9762</li> <li>\uff08\u53ef\u9009\uff09\u4f7f\u7528 git + GitHub/GitLab \u505a\u7248\u672c\u7ba1\u7406</li> </ol>"},{"location":"cpp/sdl2/sdl2/#1-arch","title":"1. \u5728 Arch \u4e2d\u5b89\u88c5\u6e38\u620f\u76f8\u5173\u5e93\uff1a","text":"<pre><code>sudo pacman -S sdl2 sdl2_image glew glfw mesa vulkan-icd-loader\n</code></pre> <p>\u7b80\u5355\u6d4b\u8bd5\u529f\u80fd\uff08after <code>sudo pacman -S sdl2</code>\uff09\uff1a</p> <p>\u7f16\u5199\uff1a<code>sdl2_test.cpp</code> <pre><code>#include &lt;SDL2/SDL.h&gt;\nint main() {\n    SDL_Init(SDL_INIT_VIDEO);\n    SDL_Window* window = SDL_CreateWindow(\"Hello SDL2\", 100, 100, 800, 600, SDL_WINDOW_SHOWN);\n    SDL_Delay(3000);\n    SDL_DestroyWindow(window);\n    SDL_Quit();\n    return 0;\n}\n</code></pre></p> <p><pre><code>g++ sdl2_test.cpp -o sdl_app `sdl2-config --cflags --libs`\n./sdl_app\n</code></pre> \ud83e\ude9f \u663e\u793a\u6548\u679c\uff08\u9ed8\u8ba4\u884c\u4e3a\uff09 - \u5c4f\u5e55\u4e0a\u4f1a\u5f39\u51fa\u4e00\u4e2a\u5c3a\u5bf8\u4e3a 800x600 \u50cf\u7d20\u7684\u7a7a\u7a97\u53e3</p> <ul> <li> <p>\u6807\u9898\u680f\u663e\u793a\u4e3a \"Hello SDL2\"</p> </li> <li> <p>\u7a97\u53e3\u80cc\u666f\u662f\u9ed8\u8ba4\u7684 \u9ed1\u8272 \u6216 \u767d\u8272\uff08\u53d6\u51b3\u4e8e\u7cfb\u7edf\u6216 SDL \u7248\u672c\uff09</p> </li> <li> <p>\u7a0b\u5e8f\u6682\u505c 3 \u79d2\u949f\uff0c\u7136\u540e\u7a97\u53e3\u5173\u95ed\u9000\u51fa</p> </li> </ul> <p>\u5982\u679c\u4f60\u60f3\u8ba9\u7a97\u53e3\u91cc\u770b\u5230\u4e00\u4e9b\u56fe\u50cf\u5185\u5bb9\uff08\u6bd4\u5982\u989c\u8272\u6216\u56fe\u5f62\uff09\uff0c\u9700\u8981\u4f7f\u7528 <code>SDL_Renderer</code> \u6765\u6e05\u5c4f\u548c\u7ed8\u5236\u3002</p> <p>\u4f8b\u5982\u7528\u84dd\u8272\u586b\u5145\u7a97\u53e3\uff1a <pre><code>// \u8fd9\u6bb5\u4ee3\u7801\u4f1a\u663e\u793a\u4e00\u4e2a\u7eaf\u84dd\u8272\u7a97\u53e3\uff0c\u6301\u7eed 3 \u79d2\u949f\u3002\n#include &lt;SDL2/SDL.h&gt;\n\nint main() {\n    SDL_Init(SDL_INIT_VIDEO);\n\n    SDL_Window* window = SDL_CreateWindow(\"Hello SDL2\", 100, 100, 800, 600, SDL_WINDOW_SHOWN);\n    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);\n\n    // \u8bbe\u7f6e\u989c\u8272\u4e3a\u84dd\u8272\uff08R, G, B, A\uff09\n    SDL_SetRenderDrawColor(renderer, 0, 0, 255, 255);\n    SDL_RenderClear(renderer);           // \u7528\u5f53\u524d\u989c\u8272\u6e05\u7a7a\u7a97\u53e3\n    SDL_RenderPresent(renderer);         // \u663e\u793a\u5185\u5bb9\n\n    SDL_Delay(3000); // \u663e\u793a 3 \u79d2\n\n    SDL_DestroyRenderer(renderer);\n    SDL_DestroyWindow(window);\n    SDL_Quit();\n    return 0;\n}\n</code></pre> \u5e94\u8be5\u6210\u529f\u663e\u793a\u4e3a </p>"},{"location":"cpp/sdl2/sdl2/#2-sdl-wayland-egl","title":"2. \u8bbe\u7f6e SDL \u5f3a\u5236\u4f7f\u7528 Wayland + EGL \u6e32\u67d3","text":"<p>\u5728\u521d\u6b21\u8fd0\u884c\u4ee5\u4e0a\u7ed8\u5236\u7a97\u53e3\uff08\u84dd\u8272\uff09\u7684\u65f6\u5019\uff0c\u5c3d\u7ba1\u7f16\u8bd1\u6210\u529f\uff0c\u4f46\u4f1a\u5728\u8fd0\u884c\u65f6\u5019\u51fa\u73b0error\uff1aSDL \u5728\u5c1d\u8bd5\u4f7f\u7528 OpenGL \u4e0a\u4e0b\u6587\u65f6\u5931\u8d25\u4e86 <pre><code>X Error of failed request:  BadValue (integer parameter out of range for operation)\n  Major opcode of failed request:  148 (GLX)\n  Minor opcode of failed request:  3 (X_GLXCreateContext)\n</code></pre></p> <p>Failure</p> <p>\u8fd9\u4e2a\u9519\u8bef\u901a\u5e38\u610f\u5473\u7740 SDL \u5728\u5c1d\u8bd5\u4f7f\u7528 OpenGL \u4e0a\u4e0b\u6587\u65f6\u5931\u8d25\u4e86\uff0c\u800c\u539f\u56e0\u5927\u591a\u6570\u548c \u56fe\u5f62\u73af\u5883\u914d\u7f6e\u4e0d\u517c\u5bb9 \u6216 \u9a71\u52a8/\u5e93\u7f3a\u5931 \u6709\u5173\u3002</p> <ol> <li> <p>\u4f60\u5728 WSL2 \u4e2d\u8fd0\u884c SDL2/OpenGL \u76f8\u5173\u7a0b\u5e8f</p> </li> <li> <p>SDL \u5728\u521b\u5efa SDL_Renderer \u65f6\uff0c\u5185\u90e8\u4f1a\u8bf7\u6c42\u4e00\u4e2a OpenGL \u4e0a\u4e0b\u6587\uff08\u53ef\u80fd\u662f\u901a\u8fc7 GLX\uff09</p> </li> <li> <p>WSL \u7684\u56fe\u5f62\u7cfb\u7edf\uff08\u5c24\u5176\u662f\u975e WSLg\uff0c\u6bd4\u5982\u4f7f\u7528 VcXsrv \u6216 X410\uff09\u4e0d\u80fd\u6b63\u786e\u5904\u7406\u8fd9\u4e2a OpenGL \u8bf7\u6c42</p> </li> </ol> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> \u65b9\u6848\u4e00(\u672a\u91c7\u7528):\u663e\u5f0f\u4f7f\u7528\u8f6f\u4ef6\u6e32\u67d3 <p></p> <p>\u2705 \u6700\u5c0f\u53ef\u8fd0\u884c\u7248\u672c\uff08\u4f7f\u7528\u8f6f\u4ef6\u6e32\u67d3\uff09\uff1a\u5982\u679c\u4f60\u53ea\u662f\u60f3\u786e\u8ba4 SDL \u7a97\u53e3\u80fd\u6b63\u5e38\u663e\u793a\u989c\u8272\uff0c\u7528\u8fd9\u4e2a\u4ee3\u7801\u5373\u53ef\uff1a <pre><code>#include &lt;SDL2/SDL.h&gt;\n\nint main() {\n    SDL_Init(SDL_INIT_VIDEO);\n    SDL_Window* window = SDL_CreateWindow(\"Hello SDL2\", 100, 100, 800, 600, SDL_WINDOW_SHOWN);\n    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_SOFTWARE);\n\n    SDL_SetRenderDrawColor(renderer, 0, 0, 255, 255); // \u84dd\u8272\n    SDL_RenderClear(renderer);\n    SDL_RenderPresent(renderer);\n\n    SDL_Delay(3000);\n\n    SDL_DestroyRenderer(renderer);\n    SDL_DestroyWindow(window);\n    SDL_Quit();\n    return 0;\n}\n</code></pre></p> <p>\u65b9\u6848\u4e8c\uff08\u91c7\u7528\uff09:\u8bbe\u7f6e SDL \u5f3a\u5236\u4f7f\u7528 Wayland + EGL \u6e32\u67d3</p> <p>\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f Windows 11 + WSLg\uff0c\u5efa\u8bae\u4f60\u68c0\u67e5\u73af\u5883\u53d8\u91cf\u662f\u5426\u5b58\u5728\uff1a <pre><code>echo $WAYLAND_DISPLAY\n</code></pre></p> <p>\u9047\u5230\u7684\u95ee\u9898\uff1a <pre><code>[dingzhen@man dino-game]$ echo $WAYLAND_DISPLAY\nwayland-0\n</code></pre> \u663e\u793a\u6b63\u5e38 \u4f46\u662fSDL \u5728\u5c1d\u8bd5\u4f7f\u7528 OpenGL \u4e0a\u4e0b\u6587\u65f6\u5931\u8d25\u4e86</p> <p><code>$WAYLAND_DISPLAY = wayland-0</code> \u8bf4\u660e\u4f60\u4f7f\u7528\u7684\u662f WSLg\uff0c\u4e5f\u5c31\u662f Windows 11 \u81ea\u5e26\u7684\u56fe\u5f62\u652f\u6301\u73af\u5883\uff0c\u5b83\u7406\u8bba\u4e0a\u652f\u6301 OpenGL \u548c Vulkan\u3002\u4f46\u662f\u4f60\u4ecd\u7136\u9047\u5230 SDL + OpenGL \u7684 GLX \u9519\u8bef\uff0c\u8fd9\u63d0\u793a\u6211\u4eec\uff1a</p> <p>SDL \u53ef\u80fd\u8bef\u4ee5\u4e3a\u4f60\u5728\u7528 X11\uff0c\u4ece\u800c\u5c1d\u8bd5\u7528 GLX\uff08OpenGL on X11\uff09\u521b\u5efa\u4e0a\u4e0b\u6587\uff0c\u800c\u4e0d\u662f\u7528 Wayland \u6216 EGL\u3002</p> <ul> <li>\u2705 \u6700\u5173\u952e\u7684\u95ee\u9898\uff1aSDL \u81ea\u52a8\u9009\u62e9\u7684\u56fe\u5f62\u540e\u7aef\u6709\u95ee\u9898</li> </ul> <p>\u5373\u4fbf\u4f60\u5728 WSLg \u4e0b\uff0cSDL2 \u9ed8\u8ba4\u53ef\u80fd\u4ecd\u7136\u8d70 X11 + GLX \u8def\u5f84\uff0c\u800c\u4e0d\u662f Wayland + EGL\u3002</p> <p>\u5feb\u901f\u9a8c\u8bc1\u65b9\u6848\uff1a\u68c0\u67e5 SDL \u7684 video driver</p> <p>\u5728\u7ec8\u7aef\u8fd0\u884c\uff1a</p> <pre><code>SDL_VIDEODRIVER=wayland ./sdl_app\n</code></pre> <p>\u6216\u8005\u5207\u6362\u56de X11\uff1a</p> <pre><code>SDL_VIDEODRIVER=x11 ./sdl_app\n</code></pre> <p>\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\u662f\uff1a\u2714 \u8bbe\u7f6e SDL \u5f3a\u5236\u4f7f\u7528 Wayland + EGL \u6e32\u67d3\uff1a</p> <p>WSLg \u652f\u6301 Wayland + EGL \u66f4\u52a0\u7a33\u5b9a\u3002\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u8fd0\u884c\u524d\u8bbe\u7f6e\u4ee5\u4e0b\u73af\u5883\u53d8\u91cf\uff1a</p> <pre><code>export SDL_VIDEODRIVER=wayland\nexport SDL_RENDER_DRIVER=opengles2\n./sdl_app\n</code></pre> <p>\u6216\u8005\u5728\u7a0b\u5e8f\u4e2d\u8bbe\u7f6e\uff08\u5fc5\u987b\u5728 <code>SDL_Init</code> \u4e4b\u524d\uff09\uff1a</p> <pre><code>SDL_SetHint(SDL_HINT_VIDEO_DRIVER, \"wayland\");\nSDL_SetHint(SDL_HINT_RENDER_DRIVER, \"opengles2\");\n</code></pre> <p>\u8fd9\u4e9b\u8bbe\u7f6e\u4f1a\u5f3a\u5236 SDL\uff1a</p> <ul> <li>\u4f7f\u7528 <code>Wayland</code> \u800c\u4e0d\u662f <code>X11</code></li> <li>\u4f7f\u7528 <code>EGL/OpenGL ES 2</code> \u800c\u4e0d\u662f <code>GLX/OpenGL</code></li> </ul> <ul> <li>\ud83d\udce6 \u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56\u5e93\uff08Wayland &amp; EGL \u652f\u6301\uff09</li> </ul> <p>\u786e\u4fdd\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86\u652f\u6301 <code>EGL</code> \u548c <code>Wayland</code> \u7684 Mesa \u548c SDL \u5e93\uff1a</p> <pre><code>sudo pacman -S mesa libglvnd wayland libegl sdl2 sdl2_image\n</code></pre> <p>\u2705 \u603b\u7ed3\u4f60\u7684\u4fee\u590d\u6b65\u9aa4\u5efa\u8bae\uff1a</p> <ol> <li> <p>\u786e\u4fdd WSLg \u5728\u8fd0\u884c\uff08\u4f60\u5df2\u7ecf\u6210\u529f\uff09</p> </li> <li> <p>\u8bbe\u7f6e SDL \u4f7f\u7528 Wayland + GLES\uff1a</p> </li> </ol> <pre><code>export SDL_VIDEODRIVER=wayland\nexport SDL_RENDER_DRIVER=opengles2\n</code></pre> <ol> <li>\u786e\u4fdd\u5b89\u88c5\u4e86\u6240\u6709\u4f9d\u8d56\u5e93\uff1a</li> </ol> <pre><code>sudo pacman -S mesa libegl libglvnd wayland\n</code></pre> <ol> <li>\u4f7f\u7528 <code>SDL_RENDERER_SOFTWARE</code> \u662f\u515c\u5e95\u65b9\u6848</li> </ol> <p>Question</p> <p>\u4ee5\u4e0a\u4f60\u7ed9\u51fa\u7684\u63aa\u65bd\u4e2d \uff1a \u663e\u5f0f\u4f7f\u7528\u8f6f\u4ef6\u6e32\u67d3\uff08\u907f\u514d OpenGL\uff09 \u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u8fd9\u4e2a\u505a\u6cd5\u548c\u540e\u9762\u4f60\u63d0\u51fa\u7684\u8bbe\u7f6e SDL \u5f3a\u5236\u4f7f\u7528 Wayland + EGL \u6e32\u67d3\u6709\u4ec0\u4e48\u5173\u8054\uff1f</p> <p></p> <p>Wayland + EGL\u548cOpenGL\u662f\u4ec0\u4e48\u5173\u7cfb?</p> <p> </p> <p>\u6700\u7ec8\u6211\u4eec\u91c7\u7528\u65b9\u6848\u4e8c\uff1a\u8bbe\u7f6e SDL \u5f3a\u5236\u4f7f\u7528 Wayland + EGL \u6e32\u67d3</p>"},{"location":"cpp/sdl2/sdl2/#_1","title":"\u8d70\u8ff7\u5bab\u6e38\u620f\uff08\u7528\u4e8e\u6d4b\u8bd5\u529f\u80fd\u6808\u5b8c\u6574\u6027\uff09","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u73b0\uff0c\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff1a\u4e00\u4e2a 4x4 \u7684\u65b9\u683c\u6e38\u620f\uff0c\u73a9\u5bb6\u901a\u8fc7\u952e\u76d8\u4e0a\u4e0b\u5de6\u53f3\u952e\u79fb\u52a8\u5230\u968f\u673a\u751f\u6210\u7684\u5b9d\u85cf\u4f4d\u7f6e\u5373\u53ef\u7ed3\u675f\u6e38\u620f\u3002 <pre><code>#include &lt;SDL2/SDL.h&gt;\n#include &lt;cstdlib&gt;\n#include &lt;ctime&gt;\n#include &lt;iostream&gt;\n\nconst int GRID_SIZE = 4; // 4x4 \u65b9\u683c\nconst int CELL_SIZE = 100; // \u6bcf\u4e2a\u65b9\u683c\u7684\u5927\u5c0f\nconst int WINDOW_SIZE = GRID_SIZE * CELL_SIZE;\n\nstruct Position {\n    int x, y;\n};\n\nvoid renderGrid(SDL_Renderer* renderer) {\n    SDL_SetRenderDrawColor(renderer, 200, 200, 200, 255); // \u7070\u8272\n    for (int i = 0; i &lt;= GRID_SIZE; ++i) {\n        SDL_RenderDrawLine(renderer, i * CELL_SIZE, 0, i * CELL_SIZE, WINDOW_SIZE); // \u7ad6\u7ebf\n        SDL_RenderDrawLine(renderer, 0, i * CELL_SIZE, WINDOW_SIZE, i * CELL_SIZE); // \u6a2a\u7ebf\n    }\n}\n\nvoid renderPlayer(SDL_Renderer* renderer, Position player) {\n    SDL_Rect rect = {player.x * CELL_SIZE, player.y * CELL_SIZE, CELL_SIZE, CELL_SIZE};\n    SDL_SetRenderDrawColor(renderer, 0, 255, 0, 255); // \u7eff\u8272\n    SDL_RenderFillRect(renderer, &amp;rect);\n}\n\nvoid renderTreasure(SDL_Renderer* renderer, Position treasure) {\n    SDL_Rect rect = {treasure.x * CELL_SIZE, treasure.y * CELL_SIZE, CELL_SIZE, CELL_SIZE};\n    SDL_SetRenderDrawColor(renderer, 255, 215, 0, 255); // \u91d1\u8272\n    SDL_RenderFillRect(renderer, &amp;rect);\n}\n\nint main() {\n    SDL_Init(SDL_INIT_VIDEO);\n\n    SDL_Window* window = SDL_CreateWindow(\"Treasure Hunt Game\", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, WINDOW_SIZE, WINDOW_SIZE, SDL_WINDOW_SHOWN);\n    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);\n\n    std::srand(std::time(nullptr));\n\n    Position player = {0, 0}; // \u73a9\u5bb6\u521d\u59cb\u4f4d\u7f6e\n    Position treasure = {std::rand() % GRID_SIZE, std::rand() % GRID_SIZE}; // \u968f\u673a\u751f\u6210\u5b9d\u85cf\u4f4d\u7f6e\n\n    bool running = true;\n    SDL_Event event;\n\n    while (running) {\n        while (SDL_PollEvent(&amp;event)) {\n            if (event.type == SDL_QUIT) {\n                running = false;\n            } else if (event.type == SDL_KEYDOWN) {\n                switch (event.key.keysym.sym) {\n                    case SDLK_UP:\n                        if (player.y &gt; 0) player.y--;\n                        break;\n                    case SDLK_DOWN:\n                        if (player.y &lt; GRID_SIZE - 1) player.y++;\n                        break;\n                    case SDLK_LEFT:\n                        if (player.x &gt; 0) player.x--;\n                        break;\n                    case SDLK_RIGHT:\n                        if (player.x &lt; GRID_SIZE - 1) player.x++;\n                        break;\n                }\n            }\n        }\n\n        // \u68c0\u67e5\u662f\u5426\u627e\u5230\u5b9d\u85cf\n        if (player.x == treasure.x &amp;&amp; player.y == treasure.y) {\n            std::cout &lt;&lt; \"You found the treasure! Game over!\" &lt;&lt; std::endl;\n            running = false;\n        }\n\n        // \u6e32\u67d3\n        SDL_SetRenderDrawColor(renderer, 0, 0, 0, 255); // \u9ed1\u8272\u80cc\u666f\n        SDL_RenderClear(renderer);\n\n        renderGrid(renderer);\n        renderTreasure(renderer, treasure);\n        renderPlayer(renderer, player);\n\n        SDL_RenderPresent(renderer);\n    }\n\n    SDL_DestroyRenderer(renderer);\n    SDL_DestroyWindow(window);\n    SDL_Quit();\n    return 0;\n}\n</code></pre></p> <p><pre><code>g++ -o treasure_game main.cpp -lSDL2\n./treasure_game\n</code></pre> \u5e94\u5bf9\u4e4b\u524d\u63d0\u5230\u7684GLX\u4e0a\u4e0b\u6587\u62a5\u9519 <pre><code>[dingzhen@77qq dino-game]$ ./treasure_game\nX Error of failed request: BadValue (integer parameter out of range for operation)\nMajor opcode of failed request: 148 (GLX)\nMinor opcode of failed request: 3 (X_GLXCreateContext)\nValue in failed request: 0x0\nSerial number of failed request: 347\nCurrent serial number in output stream: 348\n</code></pre> \u91c7\u7528\u63aa\u65bd\uff1a \u8981\u6c42\u4f7f\u7528Wayland + EGL + GLES \u800c\u4e0d\u662f GLX + OpenGL</p> <ol> <li> <p>\u8fd0\u884c\u7a0b\u5e8f\u524d\u8bbe\u7f6e SDL \u4f7f\u7528 Wayland \u548c EGL\uff1a <pre><code>export SDL_VIDEODRIVER=wayland\nexport SDL_RENDER_DRIVER=opengles2\n</code></pre></p> </li> <li> <p>(\u7ecf\u6d4b\u8bd5\u8fd9\u4e00\u6b65\u6ca1\u6709\u5fc5\u8981 \u90fd\u80fd\u8dd1)\u4fee\u6539\u4ee3\u7801\u4ee5\u4f7f\u7528 GLES SDL2 \u4f1a\u81ea\u52a8\u9009\u62e9 EGL \u548c GLES2 \u6e32\u67d3\u5668\uff0c\u4f46\u4f60\u53ef\u4ee5\u663e\u5f0f\u6307\u5b9a GLES \u6e32\u67d3\u5668\u3002\u4fee\u6539SDL_CreateRenderer \u7684\u6807\u5fd7\uff1a <pre><code>SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC);\n</code></pre> SDL \u4f1a\u81ea\u52a8\u9009\u62e9 GLES \u6e32\u67d3\u5668\uff0c\u65e0\u9700\u989d\u5916\u914d\u7f6e\u3002</p> </li> <li> <p>\u7f16\u8bd1\u8fd0\u884c</p> </li> </ol> <p>\u4e3a\u4e86\u6c38\u4e45\u6027\u914d\u7f6e\uff0c\u52a0\u5230\u4f60\u7684 shell \u914d\u7f6e\u6587\u4ef6\u4e2d </p> <p>\u6e38\u620f\u6548\u679c\uff1a </p>"},{"location":"cpp/sdl2/sdl2_learning/","title":"sdl2 learning","text":"<p>C++ SDL2 Window Tutorial</p> <p>\u7f16\u8bd1\u547d\u4ee4\uff1a <pre><code> g++ -o a *.cpp -lSDL2 -lSDL2_image -lSDL2_ttf\n</code></pre></p>"},{"location":"cpp/sdl2/sdl2_learning/#lec2-fps-keyboard-fullscreen","title":"lec2: FPS, Keyboard, Fullscreen","text":"<pre><code>#include &lt;SDL2/SDL.h&gt;\n#include &lt;iostream&gt;\n\n#define WIDTH 1280\n#define HEIGHT 720\n\nbool running, fullscreen;\nSDL_Renderer* renderer;\nSDL_Window* window;\nint frameCount, timerFPS, lastFrame, fps;\n\n\nvoid update() {\n    if (fullscreen) SDL_SetWindowFullscreen(window, SDL_WINDOW_FULLSCREEN);\n    if (!fullscreen) SDL_SetWindowFullscreen(window, 0);\n}\n\nvoid input() {\n    SDL_Event e;\n    while (SDL_PollEvent(&amp;e)) {\n        if (e.type == SDL_QUIT) running = false;\n    }\n    const Uint8* keystates = SDL_GetKeyboardState(NULL);\n    if (keystates[SDL_SCANCODE_ESCAPE]) running = false;\n    if (keystates[SDL_SCANCODE_F11]) fullscreen =!fullscreen;\n}\n\nvoid draw() {\n    SDL_SetRenderDrawColor(renderer, 40, 43, 200, 255);\n/*\n\u4f5c\u7528: \u8bbe\u7f6e\u6e32\u67d3\u5668\u7684\u7ed8\u5236\u989c\u8272\u3002\n\u53c2\u6570 (40, 43, 200, 255) \u5206\u522b\u8868\u793a \u7ea2\u8272 (R)\u3001\u7eff\u8272 (G)\u3001\u84dd\u8272 (B) \u548c \u900f\u660e\u5ea6 (A)\u3002\n\u8fd9\u91cc\u8bbe\u7f6e\u7684\u989c\u8272\u662f\u4e00\u4e2a\u84dd\u8272\u8c03\uff08RGB \u503c\u4e3a 40, 43, 200\uff09\uff0c\u5b8c\u5168\u4e0d\u900f\u660e\uff08A = 255\uff09\u3002\n*/\n    SDL_Rect rect;\n    rect.x = rect.y = 0; // \u77e9\u5f62\u7684\u5de6\u4e0a\u89d2\u5750\u6807\u4e3a (0, 0)\uff0c\u5373\u7a97\u53e3\u7684\u5de6\u4e0a\u89d2\u3002\n    rect.w = WIDTH;\n    rect.h = HEIGHT;\n    SDL_RenderFillRect(renderer, &amp;rect);\n\n    frameCount++;\n    int timerFPS = SDL_GetTicks() - lastFrame;\n    if (timerFPS &lt; (1000 / 60)) {\n        SDL_Delay((1000 / 60) - timerFPS);\n    }\n\n    SDL_RenderPresent(renderer);\n}\n\nint main() {\n    running = 1;\n    fullscreen = 0;\n    static int lastTime = 0;\n    if (SDL_Init(SDL_INIT_EVERYTHING) &lt; 0) \n    //\u53c2\u6570: SDL_INIT_EVERYTHING:\u8fd9\u662f\u4e00\u4e2a\u5b8f\uff0c\u8868\u793a\u521d\u59cb\u5316 SDL \u7684\u6240\u6709\u5b50\u7cfb\u7edf\uff08\u5982\u89c6\u9891\u3001\u97f3\u9891\u3001\u8ba1\u65f6\u5668\u7b49\uff09\u3002\n        std::cout &lt;&lt; \"Failed at SDL_Init()\" &lt;&lt; std::endl;\n    if (SDL_CreateWindowAndRenderer(WIDTH, HEIGHT, 0, &amp;window, &amp;renderer) &lt; 0) //\u6307\u5411 SDL_Window* \u7684\u6307\u9488\uff0c\u7528\u4e8e\u5b58\u50a8\u521b\u5efa\u7684\u7a97\u53e3\u3002\n        std::cout &lt;&lt; \"Failed at SDL_CreateWindowAndRenderer()\" &lt;&lt; std::endl; //\u6307\u5411 SDL_Renderer* \u7684\u6307\u9488\uff0c\u7528\u4e8e\u5b58\u50a8\u521b\u5efa\u7684\u6e32\u67d3\u5668\u3002\n\n    SDL_SetWindowTitle(window, \"SDL2 Window\");\n    SDL_ShowCursor(1);\n    SDL_SetHint(SDL_HINT_RENDER_SCALE_QUALITY, \"2\");//\u7528\u4e8e\u8bbe\u7f6e SDL \u6e32\u67d3\u5668\u7684\u7f29\u653e\u8d28\u91cf\u63d0\u793a\u3002\n/*\n\"0\"\uff1a\u6700\u8fd1\u90bb\u7b97\u6cd5\uff08Nearest Pixel Sampling\uff09\uff0c\u901f\u5ea6\u5feb\uff0c\u4f46\u8d28\u91cf\u4f4e\u3002\n\"1\"\uff1a\u7ebf\u6027\u63d2\u503c\uff08Linear Filtering\uff09\uff0c\u8d28\u91cf\u8f83\u9ad8\u3002\n\"2\"\uff1a\u5404\u5411\u5f02\u6027\u8fc7\u6ee4\uff08Anisotropic Filtering\uff09\uff0c\u8d28\u91cf\u6700\u9ad8\u3002\n*/\n    while (running) {\n        lastFrame = SDL_GetTicks();\n        if (lastFrame &gt;= (lastFrame + 1000)) { \n            lastTime = lastFrame;\n            fps = frameCount;\n            frameCount = 0;\n        }\n        std::cout &lt;&lt; fps &lt;&lt; std::endl;\n\n        update();\n        input();\n        draw();\n    }\n\n    SDL_DestroyRenderer(renderer);\n    SDL_DestroyWindow(window);\n    SDL_Quit();\n\n    return 0; \n}\n</code></pre> <p>\u89e3\u6790\uff1a</p>"},{"location":"cpp/sdl2/sdl2_learning/#_1","title":"\u4e8b\u4ef6\u5904\u7406\uff08\u952e\u76d8\u9f20\u6807\u70b9\u51fb\uff09","text":"<p><pre><code>void input() {\n    SDL_Event e;\n    while (SDL_PollEvent(&amp;e)) {\n        if (e.type == SDL_QUIT) running = false;\n    }\n    const Uint8* keystates = SDL_GetKeyboardState(NULL);\n    if (keystates[SDL_SCANCODE_ESCAPE]) running = false;\n    if (keystates[SDL_SCANCODE_F11]) fullscreen =!fullscreen;\n}\n</code></pre> </p> <p><code>const Uint8* keystates = SDL_GetKeyboardState(NULL);</code>\u83b7\u53d6\u5f53\u524d\u952e\u76d8\u7684\u72b6\u6001\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u952e\u76d8\u72b6\u6001\u6570\u7ec4\u7684\u6307\u9488\u3002\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8868\u793a\u5bf9\u5e94\u6309\u952e\u7684\u72b6\u6001\uff08\u6309\u4e0b\u4e3a 1\uff0c\u672a\u6309\u4e0b\u4e3a 0\uff09\u3002 \u56e0\u4e3a\u53ea\u6709\u4e24\u4e2a\u72b6\u6001\u6240\u4ee5\u53ea\u9700\u89818\u4e3a\u65e0\u7b26\u53f7int</p>"},{"location":"cpp/sdl2/sdl2_learning/#lec3-window-gameloop","title":"lec3: Window &amp; Gameloop","text":"<p>\u5173\u4e8eFPS\uff1a Frames Per Second\uff0c\u8868\u793a\u6bcf\u79d2\u949f\u6e32\u67d3\u6216\u663e\u793a\u7684\u753b\u9762\u5e27\u6570\uff0c\u53cd\u6620\u4e86\u6e38\u620f\u6216\u56fe\u5f62\u7a0b\u5e8f\u8fd0\u884c\u7684\u6d41\u7545\u7a0b\u5ea6\u3002</p> <p>\u5e38\u89c1\u7684 FPS \u8303\u56f4\uff1a 30 FPS: \u57fa\u672c\u6d41\u7545\uff0c\u9002\u5408\u4e00\u4e9b\u4f4e\u8981\u6c42\u7684\u6e38\u620f\u6216\u52a8\u753b\u3002 60 FPS: \u6d41\u7545\u7684\u4f53\u9a8c\uff0c\u5e38\u89c1\u4e8e\u5927\u591a\u6570\u73b0\u4ee3\u6e38\u620f\u3002 120 FPS \u6216\u66f4\u9ad8: \u8d85\u9ad8\u6d41\u7545\u5ea6\uff0c\u9002\u5408\u9ad8\u7aef\u663e\u793a\u5668\u548c\u786c\u4ef6\u3002 </p> game.cpp <pre><code>// game.cpp\n# include \"game.h\"\n#include &lt;SDL2/SDL.h&gt;\n#include &lt;SDL2/SDL_render.h&gt;\nGame::Game() {\n    SDL_Init(0);\n    SDL_CreateWindowAndRenderer(360, 240, 0, &amp;win, &amp;ren);\n    SDL_SetWindowTitle(win, \"Our first game!!!\");\n    running = true;\n    count = 0;\n    loop(); \n}\n\nGame::~Game() {\n    SDL_DestroyRenderer(ren);\n    SDL_DestroyWindow(win);\n    SDL_Quit();\n}\n\nvoid Game::loop() {\n    while (running) {\n\n/*\nframeCount: \u7528\u4e8e\u8bb0\u5f55\u5f53\u524d\u79d2\u5185\u6e32\u67d3\u7684\u5e27\u6570\u3002\ntimerFPS: \u7528\u4e8e\u8ba1\u7b97\u5f53\u524d\u5e27\u7684\u6e32\u67d3\u65f6\u95f4\u3002ms\nlastFrame: \u7528\u4e8e\u8bb0\u5f55\u4e0a\u4e00\u6b21\u6e32\u67d3\u7684\u65f6\u95f4\u6233\uff0cms\n\n*/\n        lastFrame = SDL_GetTicks();// ms\n        static int lastTime;\n        if(lastFrame &gt;= (lastTime + 1000)) {\n            lastTime = lastFrame;\n            frameCount = 0;\n            count++;\n        }\n        render();\n        input();\n        update();\n\n        if(count &gt; 3) running = false; // \u8fd0\u884c3\u79d2\u540e\u9000\u51fa\n\n    }\n}\n\n\nvoid Game::render(){\n    SDL_SetRenderDrawColor(ren,255,0,0,255);\n    /*\n255, 0, 0: \u8868\u793a\u989c\u8272\u7684 RGB \u503c\uff0c\u8fd9\u91cc\u662f\u7ea2\u8272\uff08R=255\uff0cG=0\uff0cB=0\uff09\u3002\n255: \u8868\u793a\u989c\u8272\u7684 alpha \u503c\uff08\u900f\u660e\u5ea6\uff09\uff0c255 \u8868\u793a\u5b8c\u5168\u4e0d\u900f\u660e\u3002\n    */\n    SDL_Rect rect;\n    rect.x = 0; // \u77e9\u5f62\u7684\u5de6\u4e0a\u89d2 x \u5750\u6807\n    rect.y = 0; // \u77e9\u5f62\u7684\u5de6\u4e0a\u89d2 y \u5750\u6807\n    rect.w = 360; // \u77e9\u5f62\u7684\u5bbd\u5ea6\n    rect.h = 240; // \u77e9\u5f62\u7684\u9ad8\u5ea6\n    SDL_RenderFillRect(ren, &amp;rect);//  \u4f7f\u7528\u5f53\u524d\u6e32\u67d3\u5668ren\u7684\u7ed8\u5236\u989c\u8272\u586b\u5145\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\u3002\n\n    frameCount++;\n    int timerFPS = SDL_GetTicks() - lastFrame; // \u8ba1\u7b97\u5f53\u524d\u5e27\u7684\u6e32\u67d3\u65f6\u95f4\u3002ms\n    if (timerFPS &lt; (1000 / 60)) { // \u5982\u679c\u6e32\u67d3\u65f6\u95f4\u5c0f\u4e8e 60 FPS \u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5219\u5ef6\u8fdf\u4ee5\u4fdd\u6301\u5e27\u7387\u3002\n        SDL_Delay((1000 / 60) - timerFPS);\n    }\n\n    SDL_RenderPresent(ren); // \u66f4\u65b0\u5c4f\u5e55\u663e\u793a:\u5c06\u6e32\u67d3\u5668\u7684\u5185\u5bb9\u66f4\u65b0\u5230\u5c4f\u5e55\u4e0a\u3002\n// \u5c06\u4e4b\u524d\u901a\u8fc7\u6e32\u67d3\u5668\u7ed8\u5236\u7684\u6240\u6709\u5185\u5bb9\uff08\u5982\u77e9\u5f62\u3001\u7ebf\u6761\u7b49\uff09\u663e\u793a\u5230\u7a97\u53e3\u4e2d\u3002\u6ca1\u6709\u8fd9\u884c\u4ee3\u7801\uff0c\u7ed8\u5236\u7684\u5185\u5bb9\u4e0d\u4f1a\u5b9e\u9645\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u3002\n}\n</code></pre> game.h <pre><code>// game.h\n#ifndef GAME_H\n#define GAME_H\n\n#include &lt;SDL2/SDL.h&gt;\n\n#include &lt;iostream&gt;\nusing namespace std;\n\nclass Game{\npublic:\n    Game();\n    ~Game();\n    void loop();\n    void update(){}\n    void input(){}\n    void render();\nprivate:\n    SDL_Renderer* ren;\n    SDL_Window* win;\n    bool running;\n    int count;// \u8bb0\u5f55\u6e38\u620f\u8fd0\u884c\u7684\u79d2\u6570\n    int frameCount , timerFPS , lastFrame;\n/*\nframeCount: \u7528\u4e8e\u8bb0\u5f55\u5f53\u524d\u79d2\u5185\u6e32\u67d3\u7684\u5e27\u6570\u3002\ntimerFPS: \u7528\u4e8e\u8ba1\u7b97\u5f53\u524d\u5e27\u7684\u6e32\u67d3\u65f6\u95f4\u3002ms\nlastFrame: \u7528\u4e8e\u8bb0\u5f55\u4e0a\u4e00\u6b21\u6e32\u67d3\u7684\u65f6\u95f4\u6233\uff0cms\n\n*/\n};\n\n\n\n#endif // GAME_H\n</code></pre> main.cpp <pre><code>// main.cpp\n#include \"game.h\"\nint main(){\n    Game g;\n}\n</code></pre> <p>\u8fd0\u884c\u6548\u679c\uff1a</p> <p></p>"},{"location":"cpp/sdl2/sdl2_learning/#lec4-objects-and-drawing","title":"lec4: Objects and Drawing","text":""},{"location":"cpp/sdl2/sdl2_learning/#pixels","title":"\u50cf\u7d20\uff08pixels\uff09","text":"<p>\u8fd9\u91cc\u6240\u6709\u5750\u6807\u7684\u5355\u4f4d\u90fd\u662f\u50cf\u7d20\uff08pixels\uff09</p> <p>\u50cf\u7d20&amp;\u5206\u8fa8\u7387</p> \u50cf\u7d20\u5206\u8fa8\u7387 <p>\u50cf\u7d20\uff08Pixel\uff0c\u6765\u81ea\u201cPicture Element\u201d\uff09\u662f\u6570\u5b57\u56fe\u50cf\u7684\u6700\u5c0f\u5355\u4f4d\u3002</p> <p>\u4e00\u4e2a\u50cf\u7d20 = \u56fe\u50cf\u4e2d\u4e00\u4e2a\u70b9</p> <p>\u5b83\u8868\u793a\u4e00\u5f20\u56fe\u7247\u4e0a\u6700\u5c0f\u7684\u989c\u8272\u5355\u4f4d\uff0c\u5c31\u50cf\u9a6c\u8d5b\u514b\u7684\u4e00\u4e2a\u683c\u5b50\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff1a</p> <ul> <li>\u4e00\u5f20 1920 \u00d7 1080 \u7684\u56fe\u7247\u6709 1920 \u4e2a\u6a2a\u5411\u50cf\u7d20\u30011080 \u4e2a\u7eb5\u5411\u50cf\u7d20\uff1b</li> <li>\u603b\u5171\u50cf\u7d20\u6570 = 1920 \u00d7 1080 = 2,073,600 \u50cf\u7d20\uff08\u5373\u201c200\u4e07\u50cf\u7d20\u201d\uff09\u3002</li> </ul> <p>\ud83d\udd0d \u50cf\u7d20\u5305\u542b\u4ec0\u4e48\u5185\u5bb9\uff1f</p> <p>\u6bcf\u4e2a\u50cf\u7d20\u8bb0\u5f55\u4e00\u4e2a\u989c\u8272\uff0c\u901a\u5e38\u5305\u62ec\uff1a</p> <ul> <li> <p>RGB \u503c\uff1a\u7ea2\uff08Red\uff09\u3001\u7eff\uff08Green\uff09\u3001\u84dd\uff08Blue\uff09\u7684\u7ec4\u5408\uff1b</p> </li> <li> <p>\u6bd4\u5982 (255, 0, 0) \u8868\u793a\u7eaf\u7ea2\u8272\uff1b</p> </li> <li>\u6709\u65f6\u8fd8\u5305\u542b \u900f\u660e\u5ea6\uff08Alpha \u503c\uff09\uff0c\u6bd4\u5982\u5728 PNG \u683c\u5f0f\u4e2d\u3002</li> </ul> <p>\ud83d\uddbc \u4e3e\u4f8b\u8bf4\u660e\uff1a</p> <p>\u4e00\u5f20\u5c0f\u56fe\uff083\u00d72\uff09\uff1a</p> \ud83d\udd34 \ud83d\udd35 \u26aa \u26ab \ud83d\udfe2 \ud83d\udd34 <p>\u8fd9\u662f\u4e00\u4e2a 3\u50cf\u7d20\u5bbd \u00d7 2\u50cf\u7d20\u9ad8 \u7684\u56fe\u50cf\uff0c\u5171 6 \u4e2a\u50cf\u7d20\uff0c\u6bcf\u4e2a\u5c0f\u56fe\u6807\u76f8\u5f53\u4e8e\u4e00\u4e2a\u50cf\u7d20\u3002</p> <p>\ud83e\udde0 \u50cf\u7d20 \u2260 \u5b9e\u9645\u5c3a\u5bf8\uff08\u6bd4\u5982\u5398\u7c73\uff09</p> <p>\u56fe\u50cf\u5b9e\u9645\u663e\u793a\u7684\u5927\u5c0f\u8fd8\u53d6\u51b3\u4e8e\uff1a</p> <ul> <li>\u5206\u8fa8\u7387\uff08\u5982 72 DPI, 300 DPI\uff09</li> <li>\u663e\u793a\u8bbe\u5907\u7684\u5bc6\u5ea6\uff08\u50cf\u7d20/\u82f1\u5bf8\uff09</li> </ul> <p>\u6bd4\u5982\uff1a</p> <ul> <li>\u540c\u6837\u662f 500 \u50cf\u7d20\u5bbd\u7684\u56fe\u7247\uff0c\u5728\u624b\u673a\u5c4f\u5e55\u4e0a\u770b\u8d77\u6765\u6bd4\u5728\u5927\u663e\u793a\u5668\u4e0a\u5c0f\u3002</li> </ul> <p>\u5206\u8fa8\u7387\u6307\u7684\u662f\u56fe\u50cf\u6216\u5c4f\u5e55\u4e0a\u6c34\u5e73\u65b9\u5411\u548c\u5782\u76f4\u65b9\u5411\u7684\u50cf\u7d20\u6570\u91cf\uff0c\u8868\u793a\u56fe\u50cf\u7684\u201c\u6e05\u6670\u5ea6\u201d\u6216\u201c\u7ec6\u8282\u7a0b\u5ea6\u201d\u3002</p> <p>\ud83e\udde9 \u5206\u8fa8\u7387\u7684\u5b9a\u4e49\uff1a</p> <p>\u5206\u8fa8\u7387 = \u5bbd \u00d7 \u9ad8</p> <p>\u4e3e\u4f8b\uff1a</p> \u5206\u8fa8\u7387 \u8bf4\u660e \u603b\u50cf\u7d20\u6570\u91cf 800 \u00d7 600 \u8001\u5f0f\u663e\u793a\u5668\u7684\u5e38\u89c1\u5206\u8fa8\u7387 480,000 \u50cf\u7d20 1920 \u00d7 1080 \u5168\u9ad8\u6e05\uff08Full HD\uff09 2,073,600 \u50cf\u7d20\uff08\u7ea6200\u4e07\uff09 3840 \u00d7 2160 4K \u8d85\u9ad8\u6e05\uff08Ultra HD\uff09 8,294,400 \u50cf\u7d20\uff08\u7ea6800\u4e07\uff09 <p>\ud83d\udcfa \u4e24\u79cd\u5e38\u89c1\u573a\u666f\u4e0b\u7684\u5206\u8fa8\u7387\u89e3\u91ca\uff1a</p> <ol> <li>\u5c4f\u5e55\u5206\u8fa8\u7387\uff08\u663e\u793a\u8bbe\u5907\uff09</li> </ol> <p>\u6307\u7684\u662f\u5c4f\u5e55\u4e0a\u80fd\u663e\u793a\u591a\u5c11\u50cf\u7d20\uff0c\u6bd4\u5982\u4f60\u7684\u7535\u8111\u6216\u624b\u673a\u5c4f\u5e55\u3002</p> <ul> <li>\u4e00\u53f0 1920\u00d71080 \u7684\u663e\u793a\u5668\uff0c\u5c4f\u5e55\u53ef\u4ee5\u6a2a\u5411\u663e\u793a 1920 \u4e2a\u50cf\u7d20\uff0c\u7eb5\u5411\u663e\u793a 1080 \u4e2a\u50cf\u7d20\u3002</li> <li>\u5206\u8fa8\u7387\u8d8a\u9ad8\uff0c\u56fe\u50cf\u8d8a\u7ec6\u817b\uff0c\u4f46\u5982\u679c\u5c4f\u5e55\u4e0d\u591f\u5927\uff0c\u5b57\u4f53\u53ef\u80fd\u4f1a\u663e\u5f97\u5f88\u5c0f\u3002</li> </ul> <p>\ud83d\udc49 \u6240\u4ee5\u5206\u8fa8\u7387\u548c**\u5c4f\u5e55\u5c3a\u5bf8\uff08\u82f1\u5bf8\uff09**\u914d\u5408\u4f7f\u7528\uff0c\u624d\u51b3\u5b9a\u4f60\u770b\u5230\u7684\u5927\u5c0f\u3002</p> <ol> <li> <p>\u56fe\u50cf\u5206\u8fa8\u7387\uff08\u56fe\u7247\u6587\u4ef6\uff09</p> <p>\u6307\u7684\u662f\u56fe\u7247\u672c\u8eab\u5305\u542b\u591a\u5c11\u50cf\u7d20\uff0c\u5e38\u89c1\u4e8e\u7167\u7247\u3001\u622a\u56fe\u3002</p> <ul> <li>\u4e00\u5f20 3000\u00d72000 \u7684\u7167\u7247\uff0c\u5171\u6709 600 \u4e07\u4e2a\u50cf\u7d20\uff086MP\uff09\uff1b</li> <li>\u5982\u679c\u6253\u5370\uff0c\u901a\u5e38\u8fd8\u4f1a\u914d\u5408 DPI\uff08\u6bcf\u82f1\u5bf8\u50cf\u7d20\u70b9\u6570\uff09 \u4f7f\u7528\u6765\u63a7\u5236\u6253\u5370\u5927\u5c0f\u3002</li> </ul> </li> </ol> <p>\ud83e\udde0 \u62d3\u5c55\uff1a\u5206\u8fa8\u7387 \u2260 \u6e05\u6670\u5ea6\uff1f</p> <p>\u4e0d\u5b8c\u5168\u7b49\u4ef7\uff1a</p> <ul> <li>\u5206\u8fa8\u7387\u9ad8 \u2192 \u7ec6\u8282\u591a\uff0c\u7406\u8bba\u4e0a\u66f4\u6e05\u6670\uff1b</li> <li>\u4f46\u82e5\u5c4f\u5e55\u592a\u5c0f\u3001\u538b\u7f29\u4e25\u91cd\u3001\u5bf9\u6bd4\u5ea6\u5dee\uff0c\u4f9d\u7136\u53ef\u80fd\u770b\u4e0d\u6e05\u3002</li> </ul> <p>\u5206\u8fa8\u7387\u662f\u8861\u91cf\u56fe\u50cf\u6216\u5c4f\u5e55\u80fd\u663e\u793a\u591a\u5c11\u50cf\u7d20\u7684\u6307\u6807\uff0c\u683c\u5f0f\u4e3a\u201c\u5bbd \u00d7 \u9ad8\u201d\u3002\u5b83\u5f71\u54cd\u56fe\u50cf\u7684\u7ec6\u8282\u7a0b\u5ea6\u3002</p> <p>\u800cfile\u6307\u4ee4\u53ef\u4ee5\u67e5\u770b\u56fe\u7247\u5c5e\u6027 <pre><code>[dingzhen@77qq lec3]$ file image.png\nimage.png: JPEG image data, Exif standard: [TIFF image data, big-endian, direntries=4, width=0, height=0, orientation=upper-left], baseline, precision 8, 997x983, components 3\n</code></pre></p> <ul> <li>997x983: \u8868\u793a\u56fe\u7247\u7684\u50cf\u7d20\u5927\u5c0f\uff0c\u5bbd\u5ea6\u4e3a 997 \u50cf\u7d20\uff0c\u9ad8\u5ea6\u4e3a 983 \u50cf\u7d20\u3002</li> <li>JPEG image data: \u8868\u793a\u56fe\u7247\u7684\u683c\u5f0f\u662f JPEG\u3002</li> <li>components 3: \u8868\u793a\u56fe\u7247\u6709 3 \u4e2a\u989c\u8272\u901a\u9053\uff08\u901a\u5e38\u662f RGB\uff09\u3002</li> </ul> <p>\u5b9a\u4e49<code>object</code>\u7c7b</p> <pre><code>class Object {\nprivate:\n    SDL_Rect dest;// \u5b9a\u4e49\u88c1\u526a\u540e\u7684\u7eb9\u7406\u5728\u5c4f\u5e55\u4e0a\u7684\u663e\u793a\u4f4d\u7f6e\u548c\u5927\u5c0f\u3002\u4f4d\u7f6e\u548c\u7f29\u653e\n    SDL_Rect src;// \u4ece\u7eb9\u7406\uff08\u56fe\u50cf\uff09\u4e2d\u88c1\u526a\u7684\u533a\u57df\n    SDL_Texture* tex;\npublic:\n    Object(){}\n    SDL_Rect getDest() const { return dest; }\n    SDL_Rect getSource() const { return src; }\n    void setDest(int x, int y, int w, int h) ;\n    void setSource(int x, int y, int w, int h) ;\n    void setImage(string filename , SDL_Renderer* ren);\n    SDL_Texture* getTex() const { return tex; }\n};\n</code></pre> <p> </p> <p>\u6700\u540e\u7684\u6e32\u67d3\u6548\u679c\uff1a</p> <p></p>"},{"location":"cpp/sdl2/sdl2_learning/#sdl_surfacetexturerenderer","title":"SDL_Surface/Texture/Renderer*","text":"<p>SDL_Surface* \u548c SDL_Texture* \u548c SDL_Renderer* </p> <p>\u5728 SDL \u4e2d\uff0c<code>SDL_Surface</code>\u3001<code>SDL_Texture</code> \u548c <code>SDL_Renderer</code> \u662f\u56fe\u5f62\u6e32\u67d3\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u5b83\u4eec\u5404\u81ea\u6709\u4e0d\u540c\u7684\u7528\u9014\uff0c\u5e76\u4e14\u76f8\u4e92\u5173\u8054\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u7528\u6cd5\u548c\u5728\u7a0b\u5e8f\u4e2d\u7684\u5173\u8054\u89e3\u91ca\uff1a</p> 1. SDL_Surface2. SDL_Texture3. SDL_Renderer"},{"location":"cpp/sdl2/sdl2_learning/#1-sdl_surface","title":"1. SDL_Surface","text":"<p>\u7528\u6cd5:</p> <ul> <li><code>SDL_Surface</code> \u662f\u4e00\u79cd\u672a\u4f18\u5316\u7684\u56fe\u50cf\u6570\u636e\u7ed3\u6784\uff0c\u901a\u5e38\u5b58\u50a8\u5728 CPU \u5185\u5b58\u4e2d\u3002 </li> <li>\u5b83\u4e3b\u8981\u7528\u4e8e\u52a0\u8f7d\u56fe\u50cf\u6587\u4ef6\u6216\u521b\u5efa\u4e34\u65f6\u7684\u56fe\u50cf\u6570\u636e\u3002 </li> <li>\u9002\u5408\u5728\u52a0\u8f7d\u56fe\u50cf\u6216\u8fdb\u884c\u50cf\u7d20\u7ea7\u64cd\u4f5c\u65f6\u4f7f\u7528\uff0c\u4f46\u4e0d\u9002\u5408\u76f4\u63a5\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\u3002 </li> </ul> <p>\u5e38\u7528\u51fd\u6570:</p> <ul> <li> <p>\u52a0\u8f7d\u56fe\u50cf: <pre><code>SDL_Surface* surf = IMG_Load(\"image.png\");\n</code></pre> \u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d: <pre><code>SDL_Surface* surf = IMG_Load(filename.c_str());\n</code></pre> \u8fd9\u53e5\u4ee3\u7801\u5c06\u56fe\u50cf\u6587\u4ef6\u52a0\u8f7d\u4e3a <code>SDL_Surface</code>\uff0c\u4ee5\u4fbf\u540e\u7eed\u8f6c\u6362\u4e3a\u7eb9\u7406\u3002(\u53ea\u652f\u6301C\u98ce\u683c\u5b57\u7b26\u4e32)</p> </li> <li> <p>\u91ca\u653e\u5185\u5b58: <pre><code>SDL_FreeSurface(surf);\n</code></pre> \u5728\u5c06 <code>SDL_Surface</code> \u8f6c\u6362\u4e3a <code>SDL_Texture</code> \u540e\uff0c\u5e94\u91ca\u653e <code>SDL_Surface</code>\uff0c\u4ee5\u8282\u7701\u5185\u5b58\u3002 </p> </li> </ul>"},{"location":"cpp/sdl2/sdl2_learning/#2-sdl_texture","title":"2. SDL_Texture","text":"<p>\u7528\u6cd5:</p> <ul> <li><code>SDL_Texture</code> \u662f\u4e00\u79cd\u4f18\u5316\u540e\u7684\u56fe\u50cf\u6570\u636e\u7ed3\u6784\uff0c\u5b58\u50a8\u5728 GPU \u5185\u5b58\u4e2d\u3002 </li> <li>\u5b83\u662f\u4ece <code>SDL_Surface</code> \u8f6c\u6362\u800c\u6765\u7684\uff0c\u9002\u5408\u9ad8\u6548\u5730\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\u3002 </li> <li>\u7eb9\u7406\u662f\u901a\u8fc7 <code>SDL_Renderer</code> \u6e32\u67d3\u5230\u7a97\u53e3\u4e2d\u7684\u3002 </li> </ul> <p>\u5e38\u7528\u51fd\u6570:</p> <ul> <li>\u4ece <code>SDL_Surface</code> \u521b\u5efa\u7eb9\u7406: \u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d: <pre><code>SDL_Texture* tex = SDL_CreateTextureFromSurface(renderer, surf);\n</code></pre> \u8fd9\u53e5\u4ee3\u7801\u5c06 <code>SDL_Surface</code> \u8f6c\u6362\u4e3a <code>SDL_Texture</code>\uff0c\u4ee5\u4fbf\u901a\u8fc7\u6e32\u67d3\u5668\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\u3002</li> <li>\u91ca\u653e\u7eb9\u7406: <pre><code>SDL_DestroyTexture(tex);\n</code></pre> \u5728\u4e0d\u9700\u8981\u7eb9\u7406\u65f6\uff0c\u5e94\u91ca\u653e\u5b83\u4ee5\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u3002 </li> </ul>"},{"location":"cpp/sdl2/sdl2_learning/#3-sdl_renderer","title":"3. SDL_Renderer","text":"<p>\u7528\u6cd5:</p> <ul> <li><code>SDL_Renderer</code> \u662f\u4e00\u4e2a\u6e32\u67d3\u5668\uff0c\u7528\u4e8e\u5c06\u7eb9\u7406\u7ed8\u5236\u5230\u7a97\u53e3\u4e0a\u3002 </li> <li>\u5b83\u662f\u56fe\u5f62\u6e32\u67d3\u7684\u6838\u5fc3\uff0c\u8d1f\u8d23\u7ba1\u7406\u7ed8\u5236\u64cd\u4f5c\u3002 </li> </ul> <p>\u5e38\u7528\u51fd\u6570:</p> <ul> <li>\u521b\u5efa\u6e32\u67d3\u5668: <pre><code>SDL_CreateWindowAndRenderer(360, 240, 0, &amp;win, &amp;ren);\n</code></pre> \u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\uff0c\u8fd9\u53e5\u4ee3\u7801\u5728<code>Game::Game</code>\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u540c\u65f6\u521b\u5efa\u4e86\u7a97\u53e3\u548c\u6e32\u67d3\u5668\u3002</li> <li>\u8bbe\u7f6e\u7ed8\u5236\u989c\u8272: <pre><code>SDL_SetRenderDrawColor(renderer, 255, 0, 0, 255);\n</code></pre> \u8fd9\u53e5\u4ee3\u7801\u5728<code>Game::render</code>\u51fd\u6570\u4e2d\uff0c \u8bbe\u7f6e\u6e32\u67d3\u5668\u7684\u7ed8\u5236\u989c\u8272\u3002</li> <li> <p>\u7ed8\u5236\u7eb9\u7406:</p> <p>\u7b80\u5355\u60c5\u5f62 <pre><code>SDL_RenderCopy(renderer, texture, &amp;src, &amp;dest);\n</code></pre> \u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d:\uff08\u590d\u6742\u60c5\u5f62\uff0c\u9700\u8981\u65cb\u8f6c\u7ffb\u8f6c\u7b49\u64cd\u4f5c\uff09 <pre><code>SDL_RenderCopyEx(ren, o.getTex(), &amp;src, &amp;dest, 0, NULL, SDL_FLIP_NONE);\n</code></pre> \u8fd9\u53e5\u4ee3\u7801\u5728 <code>Game::draw</code> \u51fd\u6570\u4e2d\uff0c \u5c06\u7eb9\u7406\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\uff0c<code>src</code> \u662f\u88c1\u526a\u533a\u57df\uff08\u53ef\u4ee5\u4e3aNULL\u8868\u793a\u65e0\u9700\u8981\u4efb\u4f55\u88c1\u526a\uff09\uff0c<code>dest</code> \u662f\u76ee\u6807\u663e\u793a\u533a\u57df\u3002<code>0:</code> \u65cb\u8f6c\u89d2\u5ea6\uff08\u4ee5\u5ea6\u4e3a\u5355\u4f4d\uff09\u3002<code>NULL</code>: \u65cb\u8f6c\u4e2d\u5fc3\u70b9\uff08\u9ed8\u8ba4\u4e3a\u76ee\u6807\u77e9\u5f62\u7684\u4e2d\u5fc3\uff09\u3002<code>SDL_FLIP_NONE</code>: \u4e0d\u8fdb\u884c\u7ffb\u8f6c\uff08\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u6c34\u5e73\u7ffb\u8f6c\u6216\u5782\u76f4\u7ffb\u8f6c\uff09\u3002</p> </li> <li> <p>\u66f4\u65b0\u5c4f\u5e55: <pre><code>SDL_RenderPresent(renderer);\n</code></pre> \u8fd9\u53e5\u4ee3\u7801\u5728<code>Game::render</code>\u51fd\u6570\u4e2d\uff0c\u5c06\u6240\u6709\u7ed8\u5236\u64cd\u4f5c\u66f4\u65b0\u5230\u5c4f\u5e55\u4e0a\u3002 </p> </li> </ul>"},{"location":"cpp/sdl2/sdl2_learning/#_2","title":"\u5173\u8054\u5173\u7cfb","text":"<ol> <li>\u4ece <code>SDL_Surface</code> \u5230 <code>SDL_Texture</code>:<ul> <li><code>SDL_Surface</code> \u662f\u4ece\u56fe\u50cf\u6587\u4ef6\u52a0\u8f7d\u7684\u539f\u59cb\u6570\u636e\u3002 </li> <li>\u4f7f\u7528 <code>SDL_CreateTextureFromSurface</code> \u5c06\u5176\u8f6c\u6362\u4e3a <code>SDL_Texture</code>\uff0c\u4ee5\u4fbf\u901a\u8fc7 GPU \u9ad8\u6548\u6e32\u67d3\u3002 </li> </ul> </li> <li>\u901a\u8fc7 <code>SDL_Renderer</code> \u6e32\u67d3 <code>SDL_Texture</code>:<ul> <li><code>SDL_Texture</code> \u662f\u4e0e <code>SDL_Renderer</code> \u5173\u8054\u7684\u3002 </li> <li>\u4f7f\u7528 <code>SDL_RenderCopy</code> \u6216 <code>SDL_RenderCopyEx</code> \u5c06\u7eb9\u7406\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a\u3002 </li> </ul> </li> <li>\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u7684\u6d41\u7a0b:<ul> <li>\u52a0\u8f7d\u56fe\u50cf </li> <li>\u8f6c\u6362\u4e3a\u7eb9\u7406 </li> <li>\u91ca\u653e\u8868\u9762 </li> <li>\u901a\u8fc7\u6e32\u67d3\u5668\u7ed8\u5236\u7eb9\u7406 </li> </ul> </li> </ol> <ul> <li><code>SDL_Surface</code>\uff1a\u7528\u4e8e\u52a0\u8f7d\u548c\u5b58\u50a8\u672a\u4f18\u5316\u7684\u56fe\u50cf\u6570\u636e\uff0c\u5b58\u50a8\u5728 CPU \u5185\u5b58\u4e2d\u3002 </li> <li><code>SDL_Texture</code>\uff1a\u7528\u4e8e\u9ad8\u6548\u6e32\u67d3\u7684\u4f18\u5316\u56fe\u50cf\u6570\u636e\uff0c\u5b58\u50a8\u5728 GPU \u5185\u5b58\u4e2d\u3002 </li> <li><code>SDL_Renderer</code>\uff1a\u8d1f\u8d23\u5c06\u7eb9\u7406\u7ed8\u5236\u5230\u7a97\u53e3\u4e0a\uff0c\u662f\u6e32\u67d3\u7684\u6838\u5fc3\u3002 </li> </ul> <p>\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\uff0c\u8fd9\u4e09\u8005\u7684\u5173\u7cfb\u5982\u4e0b\uff1a</p> <ol> <li>\u4f7f\u7528 <code>IMG_Load</code> \u52a0\u8f7d\u56fe\u50cf\u4e3a <code>SDL_Surface</code> \u3002 </li> <li>\u4f7f\u7528 <code>SDL_CreateTextureFromSurface</code> \u5c06 <code>SDL_Surface</code> \u8f6c\u6362\u4e3a <code>SDL_Texture</code> \u3002 </li> <li>\u4f7f\u7528 <code>SDL_Renderer</code> \u5c06 <code>SDL_Texture</code> \u7ed8\u5236\u5230\u7a97\u53e3\u4e0a\u3002 </li> </ol>"},{"location":"cpp/sdl2/sdl2_learning/#lec4-rendering-font","title":"lec4: Rendering Font","text":"<p>https://www.fontsquirrel.com/fonts/open-sans</p> <p>\u4e0b\u8f7d<code>OpenSans-Regular.ttf</code>\u91cd\u547d\u540d\u4e3a<code>Sans.ttf</code>\u7c98\u8d34\u5728\u6839\u76ee\u5f55\u4e0b</p> <p>\u5728<code>game.h</code>\u4e2d<code>class game</code>\u7c7b\u4e2d\u65b0\u6dfb\u52a0\u51fd\u6570draw <pre><code>void draw(const char* msg, int x, int y, int r, int g, int b, int size);\n</code></pre></p> <p><code>``cpp \"game.cpp\" void Game::draw(const char* msg, int x, int y, int r, int g, int b, int size) {     SDL_Surface* surf;     SDL_Texture* tex;     TTF_Font* font = TTF_OpenFont(\"Sans.ttf\", size);     SDL_Color color;     color.r = r;     color.g = g;     color.b = b;     color.a = 255; // \u8bbe\u7f6e\u989c\u8272\u7684 alpha \u503c\u4e3a 255\uff08\u5b8c\u5168\u4e0d\u900f\u660e\uff09     SDL_Rect rect;     surf = TTF_RenderText_Solid(font, msg, color);     tex = SDL_CreateTextureFromSurface(ren, surf);     rect.x = x;     rect.y = y;     rect.w = surf-&gt;w;     rect.h = surf-&gt;h;     SDL_FreeSurface(surf);     SDL_RenderCopy(ren, tex, NULL, &amp;rect);     SDL_DestroyTexture(tex); } <pre><code>\u5e76\u4e14\u5728`game.cpp`\u7684`Game`\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u4e2d\u5206\u522b\u52a0\u4e0a\u5b57\u4f53\u5e93\u7684\u884c\u4e3a\n```cpp\nTTF_Init(); // \u521d\u59cb\u5316\u5b57\u4f53\u5e93\nTTF_Quit(); // \u9000\u51fa\u5b57\u4f53\u5e93\n</code></pre> \u6dfb\u4e0a</code>#include <code>,\u7f16\u8bd1\u65f6\u5019\u52a0\u4e0a</code>-lSDL2_ttf`\u94fe\u63a5\u5e93 <p>\u6e32\u67d3\u6548\u679c\uff1a </p>"},{"location":"cpp/sdl2/sdl2_learning/#lec5-input-method","title":"lec5: Input Method","text":""},{"location":"cpp/sfml/sfml_learning/","title":"sfml learning","text":"<p>https://www.sfml-dev.org/tutorials/2.6/</p> <p>\u76f4\u63a5\u4f7f\u7528 g++ \u7f16\u8bd1\u65f6\u6ca1\u6709\u94fe\u63a5SFML\u5e93\uff0c\u6240\u4ee5\u5e94\u8be5\u8981 <pre><code>g++ main.cpp -o a -lsfml-graphics -lsfml-window -lsfml-system\n</code></pre></p> <p>\u66ff\u4ee3\u65b9\u6848\uff1a\u4f7f\u7528CMake\u6784\u5efa <pre><code>cmake_minimum_required(VERSION 3.28)\nproject(CMakeSFMLProject LANGUAGES CXX)\n\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\ninclude(FetchContent)\nFetchContent_Declare(SFML\n    GIT_REPOSITORY https://github.com/SFML/SFML.git\n    GIT_TAG 2.6.1\n    GIT_SHALLOW ON\n    EXCLUDE_FROM_ALL\n    SYSTEM)\nFetchContent_MakeAvailable(SFML)\n\nadd_executable(main src/main.cpp)\ntarget_compile_features(main PRIVATE cxx_std_17)\ntarget_link_libraries(main PRIVATE SFML::Graphics)\n</code></pre></p> <p>CMakeLists.txt \u6587\u4ef6\u5f53\u524d\u4f7f\u7528\u4e86 FetchContent \u6765\u4e0b\u8f7d SFML \u6e90\u7801\u3002\u5982\u679c\u7f51\u7edc\u5ef6\u8fdf\u8f83\u9ad8\u5bfc\u81f4\u5361\u4f4f\uff0c\u53ef\u4ee5\u6539\u4e3a\u76f4\u63a5\u4f7f\u7528\u7cfb\u7edf\u5b89\u88c5\u7684 SFML\uff08\u901a\u8fc7 apt \u5b89\u88c5\u7684 2.6.1 \u7248\u672c\uff09\u3002\u4ee5\u4e0b\u662f\u4fee\u6539\u540e\u7684 CMakeLists.txt \u6587\u4ef6\uff1a</p> <pre><code>cmake_minimum_required(VERSION 3.28)\nproject(CMakeSFMLProject LANGUAGES CXX)\n\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n\n# \u4f7f\u7528\u7cfb\u7edf\u5b89\u88c5\u7684 SFML\nfind_package(SFML 2.6 REQUIRED COMPONENTS graphics window system)\n\nadd_executable(main src/main.cpp)\ntarget_compile_features(main PRIVATE cxx_std_17)\n\n# \u94fe\u63a5\u5230\u7cfb\u7edf\u5b89\u88c5\u7684 SFML \u5e93\ntarget_link_libraries(main PRIVATE sfml-graphics sfml-window sfml-system)\n</code></pre> <pre><code># \u8fdb\u5165build\u76ee\u5f55\ncd ~/newfolder/build\n\n# \u7f16\u8bd1\u9879\u76ee\nmake\n\n# \u8fd0\u884c\u7a0b\u5e8f\n./MySFMLGame\n</code></pre>"},{"location":"cpp/sfml/sfml_learning/#_1","title":"\u57fa\u64cd","text":"<p>youtube\u6559\u7a0b\u8ddf\u7ec3</p>"},{"location":"cpp/sfml/sfml_learning/#tutorial-02-creating-a-window-using-events-and-the-game-loop","title":"Tutorial 02 | Creating a window, using events and the game-loop","text":"<p>\u6700\u57fa\u672c\u6846\u67b6\uff1a</p> <p>\u6846\u67b6</p> <p><pre><code>#include &lt;iostream&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\nusing namespace sf;\nusing namespace std;\n\nint main()\n{\n    // create the window\n    RenderWindow window(VideoMode(800, 600), \"My window\");\n    window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n\n    // run the program as long as the window is open\n    while (window.isOpen())\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n        }\n\n        // clear the window with black color\n        window.clear(Color::Black);\n\n        // draw everything here...\n        // window.draw(...);\n\n        // end the current frame\n        window.display();\n    }\n\n    return 0;\n}\n</code></pre> \u6bcf\u6b21\u5faa\u73af\u5b8c\u6210\u540e\uff0c\u5c4f\u5e55\u5185\u5bb9\u4f1a\u66f4\u65b0\u4e00\u6b21\uff0c\u8fd9\u5c31\u662f\u4e00\u5e27\u3002\u7a0b\u5e8f\u4f1a\u6301\u7eed\u8fd0\u884c\u8fd9\u4e2a\u5faa\u73af\uff0c\u751f\u6210\u8fde\u7eed\u7684\u5e27\uff0c\u4ece\u800c\u5b9e\u73b0\u52a8\u753b\u6216\u5b9e\u65f6\u4ea4\u4e92\u3002</p> <p><code>while (window.pollEvent(event))</code>\u662f\u4e00\u4e2a\u4e8b\u4ef6\u961f\u5217</p> <p>\u6700\u540e\u7a0b\u5e8f\uff1a <pre><code>#include &lt;iostream&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\n\nusing namespace sf;\nusing namespace std;\n\nint main()\n{\n    // create the window\n    RenderWindow window(VideoMode(800, 600), \"My window\");\n    window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n    CircleShape circle(50.f); // create a circle shape\n    circle.setFillColor(Color::Yellow); // set the circle color to yellow\n    circle.setPosition(375.f, 275.f); // set the circle position to the center of the window\n\n    // run the program as long as the window is open\n    while (window.isOpen())\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n        }\n        circle.move(0.1f, 0.1f); // move the shape slightly to the right\n        // clear the window with black color\n        window.clear(Color::White);\n\n        // draw everything here...\n        // window.draw(...);\n        window.draw(circle); // draw the circle shape\n        // end the current frame\n        window.display();\n    }\n\n    return 0;\n}\n</code></pre></p>"},{"location":"cpp/sfml/sfml_learning/#tutorial-03-circles-and-rectangles-and-such","title":"Tutorial 03 | Circles and Rectangles and such","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\n\nusing namespace sf;\nusing namespace std;\n\nint main()\n{\n    // create the window\n    RenderWindow window(VideoMode(800, 600), \"My window\");\n    window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n    CircleShape circle(50.f); // create a circle shape\n    circle.setFillColor(Color::Yellow); // set the circle color to yellow\n    circle.setPosition(100.f, 100.f); // set the circle position to the center of the window\n\n    RectangleShape rect(Vector2f(50.f, 100.f));\n    rect.setFillColor(Color(100, 100, 100, 255));\n    rect.setPosition(400.f, 400.f);\n\n\n    // run the program as long as the window is open\n    while (window.isOpen())\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n        }\n        circle.move(0.1f, 0.1f); // move the shape slightly to the right\n        circle.rotate(2.f);\n        rect.move(-0.1f, -0.1f); // move the rectangle slightly to the right\n        rect.rotate(2.f);\n        // clear the window with black color\n        window.clear(Color::White);\n\n        // draw everything here...\n        // window.draw(...);\n        window.draw(circle); \n        window.draw(rect);\n        // end the current frame\n        window.display();\n\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"cpp/sfml/sfml_learning/#tutorial-04-triangles-lines-and-convex-shapes","title":"Tutorial 04 | Triangles, lines and convex shapes","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\nusing namespace sf;\nusing namespace std;\n\nint main()\n{\n\n    // create the window\n    RenderWindow window(VideoMode(800, 600), \"My window\");\n    window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n\n    CircleShape triangle(100.f, 3); // create a triangle shape\n    triangle.setFillColor(Color::Green); // set the fill color to green\n    triangle.setPosition(300, 200); // set the position of the triangle\n\n\n    Vertex line[] = {Vertex(Vector2f(100, 400)),\n                     Vertex(Vector2f(50, 100))};\n    // run the program as long as the window is open\n\n    ConvexShape convex;\n    convex.setPointCount(5);\n    convex.setPoint(0, Vector2f(0, 0));\n    convex.setPoint(1, Vector2f(150, 10));\n    convex.setPoint(2, Vector2f(120, 90));\n    convex.setPoint(3, Vector2f(30, 100));\n    convex.setPoint(4, Vector2f(0, 50)); \n    convex.setFillColor(Color::Red); // set the fill color to red\n    convex.setPosition(0, 0); // set the position of the convex shape\n\n    while (window.isOpen())\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n        }\n\n        // clear the window with black color\n        window.clear(Color::Black);\n\n        // draw everything here...\n        // window.draw(...);\n        window.draw(triangle); // draw the triangle\n        window.draw(line, 2, Lines); // draw the line\n        window.draw(convex); // draw the convex shape\n        // end the current frame\n        window.display();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"cpp/sfml/sfml_learning/#tutorial-05-keyboard-and-mouse-input-intro-and-events","title":"Tutorial 05 | Keyboard and Mouse input intro and Events","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\nusing namespace sf;\nusing namespace std;\n\nint main()\n{\n    // create the window\n    RenderWindow window(VideoMode(800, 600), \"My window\");\n    window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n\n    // run the program as long as the window is open\n    while (window.isOpen())\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n            // if (event.type == Event::KeyPressed &amp;&amp; event.key.code == Keyboard::Escape)\n            //     window.close(); // close the window when Escape is pressed\n        }\n        if (Keyboard::isKeyPressed(Keyboard::Escape)) \n            window.close(); // close the window when Escape is pressed\n\n        if (Mouse::isButtonPressed(Mouse::Left))\n            window.close(); // close the window when left mouse button is pressed\n\n        // clear the window with black color\n        window.clear(Color::Black);\n\n        // draw everything here...\n        // window.draw(...);\n\n        // end the current frame\n        window.display();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"cpp/sfml/sfml_learning/#tutorial-06-simple-game-using-wasd-and-mouse","title":"Tutorial 06 | Simple game using WASD and Mouse","text":"<pre><code>#include &lt;SFML/Graphics/RectangleShape.hpp&gt;\n#include &lt;SFML/Graphics/RenderWindow.hpp&gt;\n#include &lt;SFML/Window/Mouse.hpp&gt;\n#include &lt;SFML/Window/VideoMode.hpp&gt;\n#include &lt;iostream&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\nusing namespace sf;\nusing namespace std;\n\nvoid Update(int &amp;keyTime,RectangleShape &amp;square,RenderWindow &amp;window);\nvoid Draw(RenderWindow &amp;window,RectangleShape &amp;square);\n\n\nint main()\n{\n    int keyTime = 8;\n    RenderWindow window(VideoMode(680,480), \"Simple Square Swag\");\n    window.setFramerateLimit(60);\n\n    RectangleShape square(Vector2f(100.f, 100.f));\n    square.setFillColor(Color::Red);\n    square.setPosition(window.getSize().x/2, window.getSize().y/2); // Center the square in the window\n\n\n    while (window.isOpen())\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            if (event.type == Event::Closed)\n                window.close();\n            if(event.type == Event::KeyPressed &amp;&amp; event.key.code == Keyboard::Escape)\n                window.close();\n        }\n\n\n        Update(keyTime, square, window);\n        Draw(window,square);\n\n\n    }\n    return 0;\n}\n\n\n\nvoid Update(int &amp;keyTime, RectangleShape &amp;square, RenderWindow &amp;window){\n    if(keyTime &lt; 8){// \u7528\u6765\u9650\u5236\u70b9\u51fb\u5207\u6362\u65b9\u5757\u989c\u8272\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u4e0d\u7136\u4f1a\u62bd\u98ce\u53cd\u590d\u5207\u6362\uff0c\u5728\u8fde\u7eed\u51e0\u5e27\u90fd\u68c0\u6d4b\u5230\u9f20\u6807\u5de6\u952e\u70b9\u51fb\u72b6\u6001\n        keyTime++;\n        return;\n    }\n    if(Keyboard::isKeyPressed(Keyboard::A) &amp;&amp; square.getPosition().x &gt; 0){\n        square.move(-5.f, 0.f);\n\n    }\n    if(Keyboard::isKeyPressed(Keyboard::D) &amp;&amp; square.getPosition().x &lt; window.getSize().x - square.getSize().x){\n        square.move(5.f, 0.f);\n\n    }\n    if(Keyboard::isKeyPressed(Keyboard::W) &amp;&amp; square.getPosition().y &gt; 0){\n        square.move(0.f, -5.f);\n\n    }\n    if(Keyboard::isKeyPressed(Keyboard::S) &amp;&amp; square.getPosition().y &lt; window.getSize().y - square.getSize().y){\n        square.move(0.f, 5.f);\n\n    }\n    if(Mouse::isButtonPressed(Mouse ::Left) &amp;&amp; keyTime &gt;= 8){\n        keyTime = 0; // \u91cd\u7f6e\u8ba1\u65f6\u5668\n        if(square.getFillColor() == Color::Green)\n            square.setFillColor(Color::Red);\n        else\n            square.setFillColor(Color::Green);\n    }\n\n}\nvoid Draw(RenderWindow &amp;window, RectangleShape &amp;square){\n    window.clear(Color::White);\n    window.draw(square);\n    window.display();\n}\n</code></pre> <p>\u6ce8\u610f\u8fd9\u91cc\u5e27\u7387\u548ckeyTime\u7684\u914d\u5408</p>"},{"location":"cpp/sfml/sfml_learning/#tutorial-07-simple-shoot-the-target-game-with-mouse-and-collision","title":"Tutorial 07 | Simple shoot-the-target game with mouse and collision","text":"<pre><code>#include &lt;SFML/Graphics/CircleShape.hpp&gt;\n#include &lt;iostream&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\nusing namespace sf;\nusing namespace std;\n\nint main()\n{\n    // create the window\n    RenderWindow window(VideoMode(600, 400), \"My window\");\n    window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n\n    CircleShape hoop;\n    int dir = 0;\n    hoop.setRadius(50.f);\n    hoop.setFillColor(Color::Black);\n    hoop.setOutlineThickness(2);\n    hoop.setOutlineColor(Color::Blue);\n    hoop.setPosition(Vector2f(0,10.f));\n\n    CircleShape ball;\n    bool isShot = false;\n    ball.setRadius(20.f);\n    ball.setFillColor(Color::Red);\n    ball.setPosition(Vector2f(0, window.getSize().y - ball.getRadius()*3));\n\n    // run the program as long as the window is open\n    while (window.isOpen())\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n        }\n\n        // Update hoop \n        if(hoop.getPosition().x &lt;= 0)\n            dir = 1;\n        else if (hoop.getPosition().x + hoop.getRadius()*2 &gt;= window.getSize().x)\n            dir = 0;\n\n\n        if(dir == 1){\n            hoop.move(8.f, 0.f);\n        } else {\n            hoop.move(-8.f, 0.f);\n        }\n\n        //Update ball \n        if(Mouse::isButtonPressed(Mouse::Left))\n            isShot = true;\n\n        if(!isShot)\n            ball.setPosition(Mouse::getPosition(window).x - ball.getRadius(), window.getSize().y - ball.getRadius()*3);\n        else\n            ball.move(0.f, -5.f);\n\n        //Collision ball\n        if(ball.getPosition().y &lt;= 0 || ball.getGlobalBounds().intersects(hoop.getGlobalBounds())){\n            isShot = false;\n            //ball.setPosition(Vector2f(0, window.getSize().y - ball.getRadius()*3));\n        }\n\n\n\n        window.clear(Color::White);\n\n        // draw everything here...\n        window.draw(hoop);\n        window.draw(ball);\n\n        // end the current frame\n        window.display();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"cpp/sfml/sfml_learning/#tutorial-08-shooter-game-with-many-projectiles-and-enemies","title":"Tutorial 08 | Shooter game with many projectiles and enemies!","text":"<pre><code>#include &lt;SFML/Graphics/CircleShape.hpp&gt;\n#include &lt;SFML/Graphics/RectangleShape.hpp&gt;\n#include &lt;SFML/System/Vector2.hpp&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cstdlib&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\nusing namespace sf;\nusing namespace std;\n\nint main()\n{\n    srand(time(NULL));\n    // create the window\n    RenderWindow window(VideoMode(800, 800), \"BALL SHOOTING\");\n    window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n\n\n    CircleShape projectile;\n    projectile.setRadius(5.f);\n    projectile.setFillColor(Color::Red);\n\n    RectangleShape enemy;\n    enemy.setFillColor(Color::Magenta);\n    enemy.setSize(Vector2f(50.f,50.f));\n    int enemySpawnTimer = 0;\n\n    CircleShape player;\n    player.setFillColor(Color::White);\n    player.setRadius(50.f);\n    player.setPosition(window.getSize().x / 2 - player.getRadius(), window.getSize().y - player.getRadius() * 2 - 10.f);\n    Vector2f playerCenter ;\n    int shootTimer = 0;\n\n\n    vector&lt;CircleShape&gt; projectiles;\n    projectiles.push_back(projectile);\n    vector&lt;RectangleShape&gt; enemies;\n    enemies.push_back(enemy);\n\n\n\n    while (window.isOpen())\n    {\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n        }\n\n//player\n\n        playerCenter = player.getPosition() + Vector2f(player.getRadius(), player.getRadius());\n        if(shootTimer &lt; 5){\n            shootTimer++;\n        }\n        player.setPosition(Mouse::getPosition(window).x - player.getRadius(), player.getPosition().y);\n\n//projectile\n        if(Mouse::isButtonPressed(Mouse::Left) &amp;&amp; shootTimer &gt;= 5){\n            projectile.setPosition(playerCenter);\n            projectiles.push_back(projectile);\n\n            shootTimer = 0;\n        }\n\n        for(size_t i = 0; i &lt; projectiles.size(); i++){\n            projectiles[i].move(0.f, -10.f);\n            if(projectiles[i].getPosition().y &lt;= 0){\n                projectiles.erase(projectiles.begin() + i);\n            }\n        }\n\n//enemy\n        if(enemySpawnTimer &lt; 20){\n            enemySpawnTimer++;\n        } \n        else {\n            enemy.setPosition(rand() % (window.getSize().x - (int)enemy.getSize().x), 0.f);\n            enemies.push_back(enemy);\n            enemySpawnTimer = 0;\n        }\n        for(size_t i = 0; i &lt; enemies.size(); i++){\n            enemies[i].move(0.f, 5.f);\n            if(enemies[i].getPosition().y &gt;= window.getSize().y){\n                enemies.erase(enemies.begin() + i);\n            }\n\n        }\n//collision detection\n        if(!projectiles.empty() &amp;&amp; !enemies.empty()){\n            for(size_t i = 0; i &lt; enemies.size(); i++){\n                for(size_t k = 0;k &lt; projectiles.size();k++){\n                    if(enemies[i].getGlobalBounds().intersects(projectiles[k].getGlobalBounds())){\n                        enemies.erase(enemies.begin() + i);\n                        projectiles.erase(projectiles.begin() + k);\n                        break;\n                    }\n                }\n            }\n        }\n\n\n\n\n        // clear the window with black color\n        window.clear(Color::Black);\n\n        // draw everything here...\n        window.draw(player);\n\n        for (const auto&amp; enemy : enemies)\n            window.draw(enemy);\n        for (const auto&amp; projectile : projectiles)\n            window.draw(projectile);\n\n        // end the current frame\n        window.display();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"cpp/sfml/sfml_learning/#tutorial-09-textures-and-sprites-cats-dodging-game-with-health-bar","title":"Tutorial 09 | TEXTURES and SPRITES | Cats do(d)ging game with health bar","text":"<pre><code>#include &lt;SFML/Graphics/RectangleShape.hpp&gt;\n#include &lt;SFML/Graphics/Sprite.hpp&gt;\n#include &lt;iostream&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\nusing namespace sf;\nusing namespace std;\n\nint main()\n{\n    srand(time(NULL));\n    RenderWindow window(VideoMode(800, 600), \"Cat doge\");\n    window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n\n\n//CAT\n    Texture catTex;\n    Sprite cat;\n    int hp = 10;\n    RectangleShape hpBar;\n    hpBar.setSize(Vector2f((float)hp * 20.f, 20.f));\n    hpBar.setFillColor(Color::Red);\n    hpBar.setPosition(200.f, 10.f);\n\n    //if(!catTex.loadFromFile(\"/home/man567/code/sfml-template/Textures/cat.png\"))\n    if (!catTex.loadFromFile(\"Textures/cat11.png\"))\n        throw \"Could not load cat texture\";\n\n    cat.setTexture(catTex);\n    cat.setScale(0.1f, 0.1f); // scale the cat sprite to half its size\n\n    vector&lt;Sprite&gt; cats;\n    cats.push_back(cat);\n    int catSpawnTimer = 20;\n\n//DOGE\n    Texture dogeTex;\n    Sprite doge;\n\n    if (!dogeTex.loadFromFile(\"Textures/doge.png\"))\n        throw \"Could not load doge texture\";\n\n    doge.setTexture(dogeTex);\n    doge.setScale(0.04f, 0.04f); // scale the doge sprite to half its size\n\n//GAME LOOP\n    while (window.isOpen() &amp;&amp; hp &gt; 0) // game loop runs while the window is open and the player has health\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n            if( event.type == Event::KeyPressed &amp;&amp; event.key.code == Keyboard::Escape) // if the escape key is pressed\n            {\n                window.close(); // close the window\n            }\n        }\n//UPDATE\n//cat(enemies)\n        for(size_t i = 0; i &lt; cats.size(); ++i)\n        {\n             cats[i].move(-10.f, 0.f); // move each cat sprite slightly\n            if(cats[i].getPosition().x &lt; 0 - cats[i].getGlobalBounds().width) // if the cat goes off screen\n            {\n                cats.erase(cats.begin() + i); // remove the cat if it goes off screen\n            }\n        }\n        if(catSpawnTimer &lt; 10)\n        {\n            catSpawnTimer++;\n        }\n        else\n        {\n            cat.setPosition(window.getSize().x, rand() % int(window.getSize().y - cat.getGlobalBounds().height)); // spawn at a random height\n            cats.push_back(cat);\n            catSpawnTimer = 0;\n        }\n\n\n//DOGE(player)\n        doge.setPosition(doge.getPosition().x, Mouse::getPosition(window).y);\n        if(doge.getPosition().y &lt; 0) // if the doge goes off screen\n        {\n            doge.setPosition(doge.getPosition().x, 0); // set the doge's position to the top of the screen\n        }\n        if(doge.getPosition().y &gt; window.getSize().y - doge.getGlobalBounds().height) // if the doge goes off screen\n        {\n            doge.setPosition(doge.getPosition().x, window.getSize().y - doge.getGlobalBounds().height); // set the doge's position to the top of the screen\n        }\n\n//COLLISION\n        for(size_t i = 0; i &lt; cats.size(); ++i)\n        {\n            if(cats[i].getGlobalBounds().intersects(doge.getGlobalBounds())) // if the cat collides with the doge\n            {   \n                hp--;\n                cats.erase(cats.begin() + i); // remove the cat\n\n            }\n        }\n\n\n//UI\n        hpBar.setSize(Vector2f((float)hp * 20.f, 20.f));\n\n//DRAW\n        window.clear(Color::Black);\n        window.draw(doge);\n        for(size_t i = 0; i &lt; cats.size(); ++i)\n        {\n            window.draw(cats[i]);\n        }\n        window.draw(hpBar);\n        window.display();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"cpp/sfml/sfml_learning/#tutorial-10-2d-shooter-game-with-360-degree-shooting-made-easy-with-vectors","title":"Tutorial 10 | 2D shooter game with 360 degree shooting! Made easy with vectors","text":"<pre><code>#include &lt;SFML/Graphics/CircleShape.hpp&gt;\n#include &lt;SFML/Graphics/RectangleShape.hpp&gt;\n#include &lt;SFML/System/Vector2.hpp&gt;\n#include &lt;cstddef&gt;\n#include &lt;iostream&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n#include &lt;cmath&gt;\n\nusing namespace sf;\nusing namespace std;\n\n\nclass Bullet\n{\npublic:\n    CircleShape shape;\n    Vector2f currVelocity;\n    float maxSpeed;\n\n    Bullet(float radius = 5.f) : currVelocity(0.f,0.f), maxSpeed(15.f)\n    {\n        shape.setRadius(radius);\n        shape.setFillColor(Color::Red);\n\n    }\n\n};\n\nint main()\n{\n    srand(time(NULL));\n    // create the window\n    RenderWindow window(VideoMode(800, 600), \"My window\");\n    window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n//player\n    CircleShape player(25.f);\n    player.setFillColor(Color::White);\n\n//bullets\n    Bullet b1;\n    vector&lt;Bullet&gt; bullets;\n\n\n//vectors\n    Vector2f playerCenter;\n    Vector2f mousePosWindow;\n    Vector2f aimDir;\n    Vector2f aimDirNorm;\n\n//enemy\n    RectangleShape enemy;\n    enemy.setSize(Vector2f(50.f, 50.f));\n    enemy.setFillColor(Color::Magenta);\n    vector&lt;RectangleShape&gt; enemies;\n    int enemySpawnTimer = 0;\n\n    // run the program as long as the window is open\n    while (window.isOpen())\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n        }\n\n//UPDATE\n//vectors\n        playerCenter = player.getPosition() + Vector2f(player.getRadius(), player.getRadius());\n        mousePosWindow = Vector2f(Mouse::getPosition(window));\n        aimDir = mousePosWindow - playerCenter;\n        aimDirNorm = aimDir / static_cast&lt;float&gt;(sqrt(pow(aimDir.x, 2) + pow(aimDir.y, 2)));\n\n  //      cout &lt;&lt; aimDirNorm.x &lt;&lt; \" \" &lt;&lt; aimDirNorm.y &lt;&lt; endl;\n\n//player\n        if(Keyboard::isKeyPressed(Keyboard::A))\n            player.move(-10.f, 0.f);\n        if(Keyboard::isKeyPressed(Keyboard::D))\n            player.move(10.f, 0.f);\n        if(Keyboard::isKeyPressed(Keyboard::W))\n            player.move(0.f, -10.f);\n        if(Keyboard::isKeyPressed(Keyboard::S))\n            player.move(0.f, 10.f);\n\n//enemy\n        if(enemySpawnTimer &lt; 20)\n        {\n            enemySpawnTimer++;\n        }\n        if(enemySpawnTimer &gt;= 20 &amp;&amp; enemies.size() &lt; 50) // spawn an enemy every 20 frames, max 10 enemies\n        {\n            enemy.setPosition(rand() % (window.getSize().x - static_cast&lt;int&gt;(enemy.getSize().x)),\n                              rand() % (window.getSize().y - static_cast&lt;int&gt;(enemy.getSize().y)));\n            enemies.push_back(enemy);\n            enemySpawnTimer = 0;\n        }\n\n\n//shooting\n        if(Mouse::isButtonPressed(Mouse::Left)){\n            b1.shape.setPosition(playerCenter);\n            b1.currVelocity = aimDirNorm * b1.maxSpeed;\n            bullets.push_back(b1);\n        }\n        for(size_t i = 0; i &lt; bullets.size(); ++i)\n        {\n            bullets[i].shape.move(bullets[i].currVelocity);\n\n            //out of bounds\n            if(bullets[i].shape.getPosition().x &lt; 0 || bullets[i].shape.getPosition().x &gt; window.getSize().x ||\n               bullets[i].shape.getPosition().y &lt; 0 || bullets[i].shape.getPosition().y &gt; window.getSize().y)\n            {\n                bullets.erase(bullets.begin() + i);\n                --i; // adjust index after erasing\n            }\n            else{\n            //collision\n                for(size_t j = 0; j &lt; enemies.size(); ++j)\n                {\n                    if(bullets[i].shape.getGlobalBounds().intersects(enemies[j].getGlobalBounds()))\n                    {\n                        bullets.erase(bullets.begin() + i);\n                        enemies.erase(enemies.begin() + j);\n                        --i; // adjust index after erasing\n                        break;\n                    }\n                }\n            }\n        }\n        cout &lt;&lt; bullets.size() &lt;&lt; endl;\n\n\n        // clear the window with black color\n        window.clear(Color::Black);\n\n        // draw everything here...\n        window.draw(player);\n        for(size_t i = 0; i &lt; bullets.size(); ++i)\n        {\n            // update bullet position\n\n            window.draw(bullets[i].shape);\n        }\n        for(size_t i = 0; i &lt; enemies.size(); ++i)\n        {\n            window.draw(enemies[i]);\n        }\n\n        // end the current frame\n        window.display();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"cpp/sfml/sfml_learning/#tutorial-11-text-and-font-quick-and-easy","title":"Tutorial 11 | Text and Font quick and easy","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\nusing namespace sf;\nusing namespace std;\n\nint main()\n{\n    // create the window\n    RenderWindow window(VideoMode(800, 600), \"My window\");\n    window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n    Font font;\n    if(!font.loadFromFile(\"Fonts/weiruanyahei.ttf\"))\n        throw(\"COULD NOT LOAD FONT\");\n\n\n    Text text;\n    text.setFont(font);\n    text.setString(\"Hello, SFML!\");\n    text.setCharacterSize(24);\n    text.setFillColor(Color::White);\n    text.setStyle(Text::Bold);\n\n    Font cfont;\n    if(!cfont.loadFromFile(\"Fonts/huawenfangsong.ttf\"))\n        throw(\"COULD NOT LOAD FONT\");\n    Text ctext;\n    ctext.setPosition(0.f,200.f);\n    ctext.setFont(cfont);\n    ctext.setString(\"\u534e\u6587\u4eff\u5b8b\");\n    ctext.setCharacterSize(24);\n    ctext.setFillColor(Color::Yellow);\n    ctext.setStyle(Text::Bold);\n\n    // run the program as long as the window is open\n    while (window.isOpen())\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n        }\n\n        // clear the window with black color\n        window.clear(Color::Black);\n\n        window.draw(text); // draw the text\n        window.draw(ctext); // draw the Chinese text\n\n        // end the current frame\n        window.display();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"cpp/sfml/sfml_learning/#tutorial-12-2d-space-shooter-game-using-sprites-textures-and-ui-with-text","title":"Tutorial 12 | 2D Space shooter game using Sprites, Textures and UI with Text","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdlib&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\n\nusing namespace sf;\n\n//VECTOR MATH\n//LENGTH OF VECTOR\n//|V| = sqrt(pow(2, Vx) + pow(2, Vy));\n//NORMALIZE\n//U = V/|V| = (Vx, Vy) / sqrt(pow(2, Vx) + pow(2, Vy));\n\nclass Bullet\n{\npublic:\n    Sprite shape;\n\n    Bullet(Texture *texture, Vector2f pos)\n    {\n        this-&gt;shape.setTexture(*texture);\n\n        this-&gt;shape.setScale(0.07f, 0.07f);\n\n        this-&gt;shape.setPosition(pos);\n    }\n\n    ~Bullet(){}\n};\n\nclass Player\n{\npublic:\n    Sprite shape;\n    Texture *texture;\n\n    int HP;\n    int HPMax;\n\n    std::vector&lt;Bullet&gt; bullets;\n\n    Player(Texture *texture)\n    {\n        this-&gt;HPMax = 10;\n        this-&gt;HP = this-&gt;HPMax;\n\n        this-&gt;texture = texture;\n        this-&gt;shape.setTexture(*texture);\n\n        this-&gt;shape.setScale(0.1f, 0.1f);\n    }\n\n    ~Player() {}\n\n};\n\nclass Enemy\n{\npublic:\n    Sprite shape;\n\n    int HP;\n    int HPMax;\n\n    Enemy(Texture *texture, Vector2u windowSize)\n    {\n        this-&gt;HPMax = rand() % 3 + 1;\n        this-&gt;HP = this-&gt;HPMax;\n\n        this-&gt;shape.setTexture(*texture);\n\n        this-&gt;shape.setScale(0.1f, 0.1f);\n\n        this-&gt;shape.setPosition(windowSize.x - this-&gt;shape.getGlobalBounds().width, rand()% (int)(windowSize.y - this-&gt;shape.getGlobalBounds().height));\n    }\n\n    ~Enemy(){}\n};\n\nint main()\n{\n    srand(time(NULL));\n\n    RenderWindow window(VideoMode(800, 600), \"Spaceship action!\", Style::Default);\n    window.setFramerateLimit(200);\n\n    Clock clock;\n    float dt = 0.f;\n    float dtMultiplier = 62.5f;\n\n    //Init text\n    Font font;\n    font.loadFromFile(\"Fonts/Dosis-Light.ttf\");\n\n    //Init textures\n    Texture playerTex;\n    playerTex.loadFromFile(\"Textures/ship.png\");\n\n    Texture enemyTex;\n    enemyTex.loadFromFile(\"Textures/enemy.png\");\n\n    Texture bulletTex;\n    bulletTex.loadFromFile(\"Textures/missileTex01.png\");\n\n    //UI init\n    Text scoreText;\n    scoreText.setFont(font);\n    scoreText.setCharacterSize(20);\n    scoreText.setFillColor(Color::White);\n    scoreText.setPosition(10.f, 10.f);\n\n    Text gameOverText;\n    gameOverText.setFont(font);\n    gameOverText.setCharacterSize(30);\n    gameOverText.setFillColor(Color::Red);\n    gameOverText.setPosition(100.f, window.getSize().y / 2);\n    gameOverText.setString(\"GAME OVER!\");\n\n    //Player init\n    int score = 0;\n    Player player(&amp;playerTex);\n    float shootTimer = 20.f;\n    Text hpText;\n    hpText.setFont(font);\n    hpText.setCharacterSize(12);\n    hpText.setFillColor(Color::White);\n\n    //Enemy init\n    float enemySpawnTimer = 0.f;\n    std::vector&lt;Enemy&gt; enemies;\n\n    Text eHpText;\n    eHpText.setFont(font);\n    eHpText.setCharacterSize(12);\n    eHpText.setFillColor(Color::White);\n\n    while (window.isOpen())\n    {\n        Event event;\n        while (window.pollEvent(event))\n        {\n            if (event.type == Event::Closed)\n                window.close();\n        }\n\n        //dt = 0,016 seconds / frame at 60fps\n        dt = clock.restart().asSeconds();\n        std::cout &lt;&lt; dt &lt;&lt; \"\\n\";\n\n        //UPDATE ========================================================UPDATE\n        if (player.HP &gt; 0)\n        {\n            //Player\n            if (Keyboard::isKeyPressed(Keyboard::W))\n                player.shape.move(0.f, -10.f * dt * dtMultiplier);\n            if (Keyboard::isKeyPressed(Keyboard::A))\n                player.shape.move(-10.f * dt * dtMultiplier, 0.f);\n            if (Keyboard::isKeyPressed(Keyboard::S))\n                player.shape.move(0.f, 10.f * dt * dtMultiplier);\n            if (Keyboard::isKeyPressed(Keyboard::D))\n                player.shape.move(10.f * dt * dtMultiplier, 0.f);\n\n            hpText.setPosition(player.shape.getPosition().x, player.shape.getPosition().y - hpText.getGlobalBounds().height);\n            hpText.setString(std::to_string(player.HP) + \"/\" + std::to_string(player.HPMax));\n\n            //Collision with window\n            if (player.shape.getPosition().x &lt;= 0) //Left\n                player.shape.setPosition(0.f, player.shape.getPosition().y);\n            if (player.shape.getPosition().x &gt;= window.getSize().x - player.shape.getGlobalBounds().width) //Right\n                player.shape.setPosition(window.getSize().x - player.shape.getGlobalBounds().width, player.shape.getPosition().y);\n            if (player.shape.getPosition().y &lt;= 0) //Top\n                player.shape.setPosition(player.shape.getPosition().x, 0.f);\n            if (player.shape.getPosition().y &gt;= window.getSize().y - player.shape.getGlobalBounds().height) //Bottom\n                player.shape.setPosition(player.shape.getPosition().x, window.getSize().y - player.shape.getGlobalBounds().height);\n\n            //Update Controls\n            if (shootTimer &lt; 15)\n                shootTimer += 1.f *dt * dtMultiplier;\n\n            if (Mouse::isButtonPressed(Mouse::Left) &amp;&amp; shootTimer &gt;= 15) //Shooting\n            {\n                player.bullets.push_back(Bullet(&amp;bulletTex, player.shape.getPosition()));\n                shootTimer = 0; //reset timer\n            }\n\n            //Bullets\n            for (size_t i = 0; i &lt; player.bullets.size(); i++)\n            {\n                //Move\n                player.bullets[i].shape.move(20.f * dt * dtMultiplier, 0.f);\n\n                //Out of window bounds\n                if (player.bullets[i].shape.getPosition().x &gt; window.getSize().x)\n                {\n                    player.bullets.erase(player.bullets.begin() + i);\n                    break;\n                }\n\n                //Enemy collision\n                for (size_t k = 0; k &lt; enemies.size(); k++)\n                {\n                    if (player.bullets[i].shape.getGlobalBounds().intersects(enemies[k].shape.getGlobalBounds()))\n                    {\n                        if (enemies[k].HP &lt;= 1)\n                        {\n                            score += enemies[k].HPMax;\n                            enemies.erase(enemies.begin() + k);\n                        }\n                        else\n                            enemies[k].HP--; //ENEMY TAKE DAMAGE\n\n                        player.bullets.erase(player.bullets.begin() + i);\n                        break;\n                    }\n                }\n            }\n\n            //Enemy\n            if (enemySpawnTimer &lt; 25)\n                enemySpawnTimer += 1.f * dt * dtMultiplier;\n\n            //enemy spawn\n            if (enemySpawnTimer &gt;= 25)\n            {\n                enemies.push_back(Enemy(&amp;enemyTex, window.getSize()));\n                enemySpawnTimer = 0; //reset timer\n            }\n\n            for (size_t i = 0; i &lt; enemies.size(); i++)\n            {\n                enemies[i].shape.move(-6.f * dt * dtMultiplier, 0.f);\n\n                if (enemies[i].shape.getPosition().x &lt;= 0 - enemies[i].shape.getGlobalBounds().width)\n                {\n                    enemies.erase(enemies.begin() + i);\n                    break;\n                }\n\n                if (enemies[i].shape.getGlobalBounds().intersects(player.shape.getGlobalBounds()))\n                {\n                    enemies.erase(enemies.begin() + i);\n\n                    player.HP--; // PLAYER TAKE DAMAGE\n                    break;\n                }\n            }\n\n            //UI Update\n            scoreText.setString(\"Score: \" + std::to_string(score));\n        }\n\n        //Draw ===================================================================== DRAW\n        window.clear();\n\n        //player\n        window.draw(player.shape);\n\n        //Bullets\n        for (size_t i = 0; i &lt; player.bullets.size(); i++)\n        {\n            window.draw(player.bullets[i].shape);\n        }\n\n        //enemy\n        for (size_t i = 0; i &lt; enemies.size(); i++)\n        {\n            eHpText.setString(std::to_string(enemies[i].HP) + \"/\" + std::to_string(enemies[i].HPMax));\n            eHpText.setPosition(enemies[i].shape.getPosition().x, enemies[i].shape.getPosition().y - eHpText.getGlobalBounds().height);\n            window.draw(eHpText);\n            window.draw(enemies[i].shape);\n        }\n\n        //UI\n        window.draw(scoreText);\n        window.draw(hpText);\n\n        if (player.HP &lt;= 0)\n            window.draw(gameOverText);\n\n        window.display();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"cpp/sfml/sfml_learning/#tutorial-13-rotation-and-origin","title":"Tutorial 13 | Rotation and Origin","text":"<pre><code>#include &lt;SFML/Graphics/CircleShape.hpp&gt;\n#include &lt;SFML/Graphics/RectangleShape.hpp&gt;\n#include &lt;SFML/System/Vector2.hpp&gt;\n#include &lt;SFML/Window/Keyboard.hpp&gt;\n#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdlib&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\nusing namespace sf;\nusing namespace std;\n\nint main()\n{\n    srand(time(NULL));\n    // create the window\n    RenderWindow window(VideoMode(800, 600), \"My window\");\n    window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n\n\n    RectangleShape rect;\n    rect.setFillColor(Color::White);\n    rect.setSize(Vector2f(100.f, 50.f));\n    rect.setOrigin(50.f, 25.f); \n\n    CircleShape circle;\n    circle.setFillColor(Color::Green);\n    circle.setRadius(100.f);\n    circle.setOrigin(100.f, 100.f);//\u5148\u8bbe\u7f6e\u597d\u57fa\u51c6\u70b9\u540e\u624d\u80fdsetPosition \u987a\u5e8f\u53cd\u4e86\u4f1a\u62a5\u9519\n    circle.setPosition(window.getSize().x / 2.f, window.getSize().y / 2.f);\n    // run the program as long as the window is open\n    while (window.isOpen())\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n        }\n//UPDATE\n        if(Keyboard::isKeyPressed(Keyboard::Up))\n        {\n            rect.move(0.f, -5.f);\n        }\n        if(Keyboard::isKeyPressed(Keyboard::Down))\n        {\n            rect.move(0.f, 5.f);\n        }\n        if(Keyboard::isKeyPressed(Keyboard::Left))\n        {\n            rect.move(-5.f, 0.f);\n        }\n        if(Keyboard::isKeyPressed(Keyboard::Right))\n        {\n            rect.move(5.f, 0.f);\n        }\n\n        if(Keyboard::isKeyPressed(Keyboard::R)){\n            rect.rotate(10.f);\n        }\n        if(rect.getGlobalBounds().intersects(circle.getGlobalBounds()))\n        {\n            rect.setFillColor(Color::Red);\n        }\n        else\n        {\n            rect.setFillColor(Color::White);\n        }\n        // clear the window with black color\n        window.clear(Color::Black);\n\n        window.draw(rect);\n        window.draw(circle);\n\n        window.display();\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"cpp/sfml/sfml_learning/#tutorial-14-framerate-independent-gameplay-important","title":"Tutorial 14 | Framerate independent gameplay (IMPORTANT!)","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdlib&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\nusing namespace sf;\nusing namespace std;\n\nint main()\n{\n    // create the window\n    RenderWindow window(VideoMode(800, 600), \"My window\");\n    window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n\n    Clock clock;\n    float dt;\n    float multiplier = 60.f;\n\n    RectangleShape shape(Vector2f(50.f, 50.f));\n    shape.setFillColor(Color::White);\n\n\n    // run the program as long as the window is open\n    while (window.isOpen())\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n        }\n\n        dt = clock.restart().asSeconds(); // get the time elapsed since the last frame\n        if(Keyboard::isKeyPressed(Keyboard::A))\n        {\n            shape.move(-10.f * dt * multiplier, 0.f);\n        }\n\n        if(Keyboard::isKeyPressed(Keyboard::D))\n        {\n            shape.move(10.f * dt * multiplier, 0.f);\n        }\n\n        if(Keyboard::isKeyPressed(Keyboard::W))\n        {\n            shape.move(0.f, -10.f * dt * multiplier);\n        }\n\n        if(Keyboard::isKeyPressed(Keyboard::S))\n        {\n            shape.move(0.f, 10.f * dt * multiplier);\n        }\n\n        // clear the window with black color\n        window.clear(Color::Black);\n\n        window.draw(shape); // draw the rectangle shape\n\n\n        window.display();\n\n        cout &lt;&lt; \"Delta time: \" &lt;&lt; dt &lt;&lt; \" seconds\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre> <p>\u7ef4\u62a4\u79fb\u52a8\u901f\u5ea6\u7b49\u4e0e\u5e27\u7387\u65e0\u5173</p> <p>\u5148\u5728\u4e00\u4e2a\u65e2\u5b9a\u5e27\u7387\u598260FPS\u4e0a\u8c03\u8bd5\u51fa\u5408\u9002\u7684\u901f\u5ea6\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u4e58\u4e00\u4e2a<code>dt = clock.restart().asSeconds();</code>\u786e\u4fdd\u79fb\u52a8\u901f\u5ea6\u4e0e\u5e27\u7387\u65e0\u5173\uff0c\u7136\u540e\u518d\u4e58<code>mulitiplier</code>\u786e\u4fdd\u901f\u5ea6\u653e\u7f29\u56de\u7406\u60f3\u578b\u3002</p>"},{"location":"cpp/sfml/sfml_learning/#_2","title":"\u52a0\u5165\u52a0\u901f\u5ea6&amp;\u963b\u529b\u7684\u5e73\u6ed1\u79fb\u52a8\uff08\u5229\u7528\u5e27\u7387\u72ec\u7acb\uff09","text":"<p><pre><code>#include &lt;SFML/System/Vector2.hpp&gt;\n#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdlib&gt;\n#include &lt;SFML/Window.hpp&gt;\n#include &lt;SFML/System.hpp&gt;\n#include &lt;SFML/Graphics.hpp&gt;\n\nusing namespace sf;\nusing namespace std;\n\nint main()\n{\n    // create the window\n    RenderWindow window(VideoMode(800, 600), \"My window\");\n    //window.setFramerateLimit(60); // limit the frame rate to 60 FPS\n    //dt at 60 FPS is 1/60 = 0.016 seconds\n    Clock clock;\n    float dt;\n    float multiplier = 60.f;\n\n    RectangleShape shape(Vector2f(50.f, 50.f));\n    shape.setFillColor(Color::White);\n\n    Vector2f currentVelocity;\n    Vector2f direction;\n    float maxVelocity = 25.f;\n    float acceleration = 1.f;\n    float drag = 0.5f;\n\n\n\n\n    // run the program as long as the window is open\n    while (window.isOpen())\n    {\n        // check all the window's events that were triggered since the last iteration of the loop\n        Event event;\n        while (window.pollEvent(event))\n        {\n            // \"close requested\" event: we close the window\n            if (event.type == Event::Closed)\n                window.close();\n        }\n\n        dt = clock.restart().asSeconds(); // get the time elapsed since the last frame\n//UPDATE\n//acceleration\n        direction = Vector2f(0.f,0.f); \n\n        if(Keyboard::isKeyPressed(Keyboard::A))\n        {\n            direction.x = -1.f;\n            if(currentVelocity.x &gt; -maxVelocity)\n            {\n                currentVelocity.x += acceleration * direction.x * dt * multiplier;\n            }\n        }\n\n        if(Keyboard::isKeyPressed(Keyboard::D))\n        {\n            direction.x = 1.f;\n            if(currentVelocity.x &lt; maxVelocity)\n            {\n                currentVelocity.x += acceleration * direction.x * dt * multiplier;\n            }\n        }\n\n        if(Keyboard::isKeyPressed(Keyboard::W))\n        {\n            direction.y = -1.f;\n            if(currentVelocity.y &gt; -maxVelocity)\n            {\n                currentVelocity.y += acceleration * direction.y * dt * multiplier;\n            }\n        }\n\n        if(Keyboard::isKeyPressed(Keyboard::S))\n        {\n            direction.y = 1.f;\n            if(currentVelocity.y &lt; maxVelocity)\n            {\n                currentVelocity.y += acceleration * direction.y * dt * multiplier;\n            }\n        }\n//drag\n        if(currentVelocity.x &gt; 0.f)\n        {\n            currentVelocity.x -= drag * dt * multiplier;\n            if(currentVelocity.x &lt; 0.f) currentVelocity.x = 0.f;\n        }\n        else if (currentVelocity.x &lt; 0.f)\n        {\n            currentVelocity.x += drag * dt * multiplier;\n            if(currentVelocity.x &gt; 0.f) currentVelocity.x = 0.f;\n        }\n        if(currentVelocity.y &gt; 0.f)\n        {\n            currentVelocity.y -= drag * dt * multiplier;\n            if(currentVelocity.y &lt; 0.f) currentVelocity.y = 0.f;\n        }\n        else if (currentVelocity.y &lt; 0.f)\n        {\n            currentVelocity.y += drag * dt * multiplier;\n            if(currentVelocity.y &gt; 0.f) currentVelocity.y = 0.f;\n        }\n        shape.move(currentVelocity * dt * multiplier); // move the shape based on current velocity\n        // clear the window with black color\n        window.clear(Color::Black);\n\n        window.draw(shape); // draw the rectangle shape\n\n\n        window.display();\n\n        cout &lt;&lt; \"Delta time: \" &lt;&lt; dt &lt;&lt; \" seconds\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre> \u957f\u6309\u52a0\u901f\u4f53\u9a8c\u611f</p> <p></p>"},{"location":"guitar/guitar/","title":"Guitar","text":""},{"location":"linux/linux/linux/","title":"linux","text":"<p><pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre> -y\u81ea\u52a8\u786e\u8ba4\u5347\u7ea7\uff0c\u4e0d\u7528\u624b\u52a8\u8f93\u5165y</p> <p>\u66f4\u5f7b\u5e95 <pre><code>sudo apt update &amp;&amp; sudo apt full-upgrade -y &amp;&amp; sudo apt autoremove -y &amp;&amp; sudo apt clean\n</code></pre></p>"},{"location":"linux/linux/linux/#wsl","title":"WSL\u64cd\u4f5c","text":"<p>\u6216\u8005\u76f4\u63a5cmd\u4e2d\u8f93\u5165wsl\u542f\u52a8\u9ed8\u8ba4\u53d1\u884c\u7248</p> <p>\u6253\u5f00windows\u8d44\u6e90\u7ba1\u7406\u5668\uff0c\u5730\u5740\u680f\u8f93\u5165\u8f6c\u5230 Arch \u7cfb\u7edf\u7684\u6839\u76ee\u5f55\uff08/\uff09 <pre><code>\\\\wsl$\\Arch\n</code></pre> \u540c\u7406 <pre><code>\\\\wsl$\\Ubuntu\n</code></pre> <pre><code>C:\\Windows\\System32&gt;wsl -l -v\n  NAME      STATE           VERSION\n* Arch      Stopped         2\n  Ubuntu    Stopped         2\n</code></pre> <pre><code>C:\\Windows\\System32&gt;wsl --set-default Ubuntu\n\u64cd\u4f5c\u6210\u529f\u5b8c\u6210\u3002\n</code></pre></p>"},{"location":"linux/linux/linux/#linux_1","title":"linux\u57fa\u64cd","text":"<p>\u83dc\u9e1f\u6559\u7a0b Linux \u547d\u4ee4\u624b\u518c</p>"},{"location":"linux/linux/linux/#rm","title":"rm","text":"<pre><code># \u5f3a\u5236+\u9012\u5f52 \u7684\u5220\u9664  -f\u5f3a\u5236  r\u9012\u5f52\nrm -rf /path/to/folder\n</code></pre>"},{"location":"linux/linux/linux/#cp","title":"cp","text":"<p><code>cp</code>\u590d\u5236\u6587\u4ef6\u6307\u4ee4</p> <p></p>"},{"location":"linux/linux/linux/#tar","title":"tar\u6253\u5305","text":"<p>\u53ea\u6253\u5305\u53ef\u8fd0\u884c\u7248\u672c: <pre><code>mkdir -p release\ncp build/bin/mygame release/\ncp -r assets release/\ncp README.md release/\n</code></pre> <code>-r</code>\u53c2\u6570\u662f\u9012\u5f52\uff0c</p> <p><pre><code>tar -czvf mygame-v1.0.0-linux.tar.gz release/\n</code></pre> - c = create \u521b\u5efa</p> <ul> <li> <p>z = gzip \u538b\u7f29</p> </li> <li> <p>v = verbose \u663e\u793a\u8fc7\u7a0b\uff08\u53ef\u7701\u7565\uff09</p> </li> <li> <p>f mygame-v1.0.0-linux.tar.gz = \u8f93\u51fa\u6587\u4ef6\u540d</p> </li> <li>release \u8981\u6253\u5305\u7684\u76ee\u5f55</li> </ul> <p><code>mygame-v1.0.0-linux.tar.gz</code> \u5c31\u662f\u4e00\u4e2a\u5e72\u51c0\u7684\u53d1\u884c\u7248\u538b\u7f29\u5305\u3002</p> <p>\u89e3\u538b\uff1a <pre><code>tar -xzvf minisql-master.tar.gz\n</code></pre> - x\uff1a\u89e3\u538b - z\uff1a\u89e3\u538b gzip \u683c\u5f0f - v\uff1a\u663e\u793a\u8fc7\u7a0b\uff08\u53ef\u9009\uff09 - f\uff1a\u6307\u5b9a\u6587\u4ef6\u540d</p> <p>\u5982\u9700\u6307\u5b9a\u89e3\u538b\u5230\u67d0\u4e2a\u76ee\u5f55\uff0c\u4f8b\u5982 ~/code/minisql\uff0c\u53ef\u4ee5\u8fd9\u6837 <pre><code>tar -xzvf minisql-master.tar.gz -C ~/code/minisql\n</code></pre></p>"},{"location":"linux/linux/linux/#_1","title":"\u5e38\u8bc6","text":""},{"location":"linux/linux/linux/#_2","title":"<code>~</code>\u76ee\u5f55\u4e0b\u9690\u85cf\u6587\u4ef6","text":"<p><pre><code>ls -a\n</code></pre> \u201c\u9690\u85cf\u6587\u4ef6\u201d\uff08\u4ee5 <code>.</code> \u5f00\u5934\u7684\uff09\u5728 Ubuntu\uff08\u5305\u62ec WSL2 \u73af\u5883\uff09\u4e2d\u7684\u5e38\u89c1\u4f5c\u7528\u3002</p> <p>\ud83d\uddc2\ufe0f \u5e38\u89c1\u7684\u9690\u85cf\u6587\u4ef6/\u6587\u4ef6\u5939\u4f5c\u7528\u8bf4\u660e\uff1a</p> <ol> <li><code>.cache/</code></li> </ol> <ul> <li>\u4f5c\u7528\uff1a\u7528\u4e8e\u5b58\u653e\u5e94\u7528\u7a0b\u5e8f\u751f\u6210\u7684\u7f13\u5b58\u6587\u4ef6\u3002</li> <li> <p>\u4e3e\u4f8b\uff1a</p> </li> <li> <p>\u6d4f\u89c8\u5668\u7f13\u5b58</p> </li> <li><code>pip</code> \u4e0b\u8f7d\u7684 wheel \u6587\u4ef6\u7f13\u5b58</li> <li>GNOME \u6216\u5176\u4ed6\u684c\u9762\u7ec4\u4ef6\u7684\u7f13\u5b58\uff08\u5728\u5b8c\u6574\u684c\u9762 Linux \u4e2d\uff09</li> <li>\u53ef\u4ee5\u5220\u9664\u5417\uff1f\uff1a\u901a\u5e38\u53ef\u4ee5\u5b89\u5168\u5220\u9664\uff0c\u4e0d\u5f71\u54cd\u529f\u80fd\uff0c\u4f46\u53ef\u80fd\u5bfc\u81f4\u8f6f\u4ef6\u91cd\u65b0\u751f\u6210\u7f13\u5b58\uff08\u7a0d\u6162\uff09\u3002</li> </ul> <ol> <li><code>.bashrc</code></li> </ol> <ul> <li>\u4f5c\u7528\uff1a\u662f bash shell \u542f\u52a8\u65f6\u8bfb\u53d6\u7684\u914d\u7f6e\u6587\u4ef6\u4e4b\u4e00\uff0c\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\u3001\u522b\u540d\u3001\u542f\u52a8\u547d\u4ee4\u7b49\u3002</li> <li> <p>\u5e38\u89c1\u7528\u9014\uff1a</p> </li> <li> <p>\u6dfb\u52a0\u522b\u540d\uff1a<code>alias ll='ls -la'</code></p> </li> <li>\u8bbe\u7f6e\u8def\u5f84\uff1a<code>export PATH=$PATH:/my/custom/path</code></li> <li>\u4fee\u6539\u5b83\u53ef\u4ee5\u5b9a\u5236\u7ec8\u7aef\u4f53\u9a8c\u3002</li> </ul> <ol> <li><code>.profile</code> / <code>.bash_profile</code></li> </ol> <ul> <li>\u4f5c\u7528\uff1a\u5b9a\u4e49\u767b\u5f55 shell\uff08\u5982\u767b\u5f55\u7ec8\u7aef\uff09\u52a0\u8f7d\u7684\u73af\u5883\u53d8\u91cf\u6216\u542f\u52a8\u811a\u672c\u3002\u4e00\u822c\u914d\u5408 <code>.bashrc</code> \u4f7f\u7528\u3002</li> <li>\u5728 WSL \u4e2d\u4e5f\u5e38\u89c1 <code>.profile</code>\uff0c\u7528\u4e8e\u8bbe\u7f6e PATH \u6216\u542f\u52a8\u670d\u52a1\u3002</li> </ul> <ol> <li><code>.config/</code></li> </ol> <ul> <li>\u4f5c\u7528\uff1a\u5b58\u50a8\u684c\u9762\u5e94\u7528\u6216 CLI \u5e94\u7528\u7684\u914d\u7f6e\u4fe1\u606f\uff08\u914d\u7f6e\u6587\u4ef6\uff09\u3002</li> <li> <p>\u5185\u5bb9\u793a\u4f8b\uff1a</p> </li> <li> <p><code>.config/git/config</code>\uff1aGit \u7684\u914d\u7f6e</p> </li> <li><code>.config/code/</code>\uff1aVS Code \u7684\u914d\u7f6e\uff08\u5982\u679c\u4f60\u5728 WSL \u4e2d\u4f7f\u7528 VS Code\uff09</li> </ul> <ol> <li><code>.local/</code></li> </ol> <ul> <li>\u4f5c\u7528\uff1a\u7528\u6237\u7ea7\u522b\u7684\u672c\u5730\u5e94\u7528\u548c\u6570\u636e\u76ee\u5f55\u3002</li> <li> <p>\u91cd\u8981\u5b50\u76ee\u5f55\uff1a</p> </li> <li> <p><code>.local/bin/</code>\uff1a\u7528\u6237\u5b89\u88c5\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\uff08\u5982 <code>pip install --user</code> \u5b89\u88c5\u7684\u547d\u4ee4\uff09</p> </li> <li><code>.local/share/</code>\uff1a\u5e94\u7528\u7a0b\u5e8f\u5b58\u50a8\u7684\u6570\u636e\uff0c\u6bd4\u5982\u5b57\u4f53\u3001\u684c\u9762\u5feb\u6377\u65b9\u5f0f</li> </ul> <ol> <li><code>.bash_history</code></li> </ol> <ul> <li>\u4f5c\u7528\uff1a\u8bb0\u5f55\u4f60\u5728 bash \u4e2d\u8f93\u5165\u8fc7\u7684\u547d\u4ee4\u3002</li> <li>\u9000\u51fa\u7ec8\u7aef\u540e\uff0c\u5b83\u4f1a\u5c06\u5386\u53f2\u547d\u4ee4\u4fdd\u5b58\u4e0b\u6765\uff0c\u65b9\u4fbf\u4e0b\u6b21\u4f7f\u7528\u4e0a\u4e0b\u7bad\u5934\u67e5\u627e\u3002</li> </ul> <ol> <li><code>.gitconfig</code></li> </ol> <ul> <li>\u4f5c\u7528\uff1a\u4f60\u7684 Git \u5168\u5c40\u914d\u7f6e\u6587\u4ef6\uff0c\u4f8b\u5982\u8bbe\u7f6e\u7528\u6237\u540d\u3001\u90ae\u7bb1\u3001\u9ed8\u8ba4\u7f16\u8f91\u5668\u7b49\u3002</li> </ul> <pre><code>[user]\n  name = yourname\n  email = your@email.com\n</code></pre> <ol> <li><code>.ssh/</code></li> </ol> <ul> <li>\u4f5c\u7528\uff1aSSH \u76f8\u5173\u914d\u7f6e\u548c\u5bc6\u94a5\u5b58\u50a8\u76ee\u5f55\u3002</li> <li> <p>\u5e38\u89c1\u6587\u4ef6\uff1a</p> </li> <li> <p><code>id_rsa</code>\uff1a\u79c1\u94a5</p> </li> <li><code>id_rsa.pub</code>\uff1a\u516c\u94a5</li> <li><code>known_hosts</code>\uff1a\u8bb0\u5f55\u4f60\u8fde\u63a5\u8fc7\u7684\u4e3b\u673a\u516c\u94a5\u4fe1\u606f</li> </ul> <p>\u2705 \u603b\u7ed3</p> \u6587\u4ef6/\u76ee\u5f55 \u4f5c\u7528\u7b80\u8ff0 \u662f\u5426\u53ef\u4fee\u6539/\u5220\u9664 <code>.cache/</code> \u5e94\u7528\u7f13\u5b58 \u2705 \u901a\u5e38\u53ef\u5220 <code>.bashrc</code> Shell \u914d\u7f6e \u2705 \u53ef\u4fee\u6539 <code>.config/</code> \u5e94\u7528\u914d\u7f6e\u6587\u4ef6 \u26a0\ufe0f \u5c0f\u5fc3\u5220 <code>.local/</code> \u7528\u6237\u7ea7\u7a0b\u5e8f/\u6570\u636e \u2705 \u53ef\u7528\u4f5c\u5b89\u88c5\u8def\u5f84 <code>.bash_history</code> \u547d\u4ee4\u5386\u53f2\u8bb0\u5f55 \u2705 \u53ef\u6e05\u9664 <code>.ssh/</code> SSH \u5bc6\u94a5\u548c\u914d\u7f6e \u274c \u4e0d\u5efa\u8bae\u5220\u9664 <code>.gitconfig</code> Git \u7684\u5168\u5c40\u914d\u7f6e\u6587\u4ef6 \u2705 \u53ef\u4fee\u6539"},{"location":"linux/linux/linux/#arch","title":"\u88ab\u9057\u5f03\u7684arch","text":"<ul> <li>wsl\u6253\u4e0d\u5f00\u89e3\u51b3\u65b9\u6cd5 <pre><code>C:\\Users\\78100&gt;wsl\n\u707e\u96be\u6027\u6545\u969c\n\u9519\u8bef\u4ee3\u7801: Wsl/Service/E_UNEXPECTED\n</code></pre></li> </ul> <p>\u6309 Win + R\uff0c\u8f93\u5165 services.msc \u6253\u5f00\u670d\u52a1\u7ba1\u7406\u5668\u3002</p> <p>\u627e\u5230 \u201cLxssManager\u201d \u670d\u52a1\uff0c\u53f3\u952e\u9009\u62e9 \u201c\u91cd\u65b0\u542f\u52a8\u201d\u3002 <pre><code>wsl --shutdown\nwsl\n</code></pre></p> <ul> <li> <p><code>~/.bashrc</code> \u662f\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8e\u4e3a Bash Shell \u8bbe\u7f6e\u7528\u6237\u7ea7\u522b\u7684\u73af\u5883\u53d8\u91cf\u548c\u542f\u52a8\u914d\u7f6e\u3002\u5b83\u662f\u6bcf\u4e2a\u7528\u6237\u7684\u4e13\u5c5e\u6587\u4ef6\uff0c\u4f4d\u4e8e\u7528\u6237\u7684\u4e3b\u76ee\u5f55\u4e0b\uff08~ \u8868\u793a\u4e3b\u76ee\u5f55\uff09\u3002      </p> <p>source\u547d\u4ee4\u91cd\u65b0\u52a0\u8f7d\u5f53\u524d\u7528\u6237\u7684 bash \u914d\u7f6e\u6587\u4ef6\uff08~/.bashrc\uff09\uff0c\u4f7f\u6587\u4ef6\u4e2d\u7684\u66f4\u6539\u7acb\u5373\u751f\u6548\uff0c\u800c\u65e0\u9700\u5173\u95ed\u5e76\u91cd\u65b0\u6253\u5f00\u7ec8\u7aef\u3002</p> </li> </ul> <p>pacman</p> <p>pacman -S \u7528\u6cd5</p> <pre><code># -S \u8868\u793a \"Sync\" - \u540c\u6b65/\u5b89\u88c5\u8f6f\u4ef6\u5305\nsudo pacman -S package_name\n\n# \u5e38\u7528\u7ec4\u5408\uff1a\nsudo pacman -S sfml          # \u5b89\u88c5 sfml\nsudo pacman -Sy             # \u540c\u6b65\u8f6f\u4ef6\u5305\u6570\u636e\u5e93\nsudo pacman -Su             # \u5347\u7ea7\u6240\u6709\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\nsudo pacman -Syu            # \u540c\u6b65\u6570\u636e\u5e93\u5e76\u5347\u7ea7\u7cfb\u7edf\uff08\u5b8c\u6574\u7cfb\u7edf\u66f4\u65b0\uff09\nsudo pacman -Ss search_term # \u641c\u7d22\u8f6f\u4ef6\u5305\nsudo pacman -Si package     # \u663e\u793a\u8f6f\u4ef6\u5305\u8be6\u7ec6\u4fe1\u606f\n</code></pre> <p>\u4e3b\u8981 pacman \u64cd\u4f5c\uff1a <pre><code>-S (Sync) # \u5b89\u88c5/\u540c\u6b65\u8f6f\u4ef6\u5305\n-R (Remove) # \u5220\u9664\u8f6f\u4ef6\u5305\n-Q (Query) # \u67e5\u8be2\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\n-U (Upgrade) # \u4ece\u672c\u5730\u6587\u4ef6\u5b89\u88c5/\u5347\u7ea7\n</code></pre></p>"},{"location":"linux/windows/windows/","title":"linux","text":""},{"location":"linux/windows/windows/#windows-cmd-operation","title":"Windows cmd operation","text":"<ul> <li>\u65b0\u5efa\u6587\u4ef6\uff1a<code>echo. &gt; \"C:\\Windows\\System32\\cmd.exe\"</code> \u6700\u540e\u7684\u4e00\u4e2a\u201d\u53ef\u6709\u53ef\u65e0\uff0c\u806a\u660e\u7684windows cmd\u77e5\u9053\u4f60\u7684\u610f\u601d</li> <li>cd\u547d\u4ee4\uff1a <pre><code>//\u8fdb\u5165d\u76d8\nD:\n//\u8fdb\u5165F\u76d8\nF:\ncd /?     //\u83b7\u53d6\u4f7f\u7528\u5e2e\u52a9\n\ncd \\       //\u8df3\u8f6c\u5230\u786c\u76d8\u7684\u6839\u76ee\u5f55\n\ncd C:\\WINDOWS  //\u8df3\u8f6c\u5230\u5f53\u524d\u786c\u76d8\u7684\u5176\u4ed6\u6587\u4ef6\n\nd:        //\u8df3\u8f6c\u5230\u5176\u4ed6\u786c\u76d8\n\ncd /d e:\\software    //\u8df3\u8f6c\u5230\u5176\u4ed6\u786c\u76d8\u7684\u5176\u4ed6\u6587\u4ef6\u5939\uff0c\u6ce8\u610f\u6b64\u5904\u5fc5\u987b\u52a0/d\u53c2\u6570\u3002\u5426\u5219\u65e0\u6cd5\u8df3\u8f6c\u3002\n\ncd..      //\u8df3\u8f6c\u5230\u4e0a\u4e00\u5c42\u76ee\u5f55\n</code></pre></li> <li>dir \uff1a \u67e5\u770b\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6</li> <li> </li> <li> <p>Powershell \u5220\u9664\u6587\u4ef6\u5939 <pre><code>Remove-Item -Path \"\u6587\u4ef6\u5939\u8def\u5f84\" -Recurse -Force\n</code></pre></p> </li> </ul>"},{"location":"mkdocss/introduction/","title":"introduction","text":"<p>For full documentation visit mkdocs.org.</p> <ul> <li>my web temporary location: http://127.0.0.1:8000</li> </ul> <p></p> Success <p>for all the detailed information just refer to link: https://jameswillett.dev/getting-started-with-material-for-mkdocs/</p> <p>and the author youtube: https://www.youtube.com/watch?v=xlABhbnNrfI</p> websiteyoutube <p>https://jameswillett.dev/getting-started-with-material-for-mkdocs/</p> <p>https://www.youtube.com/watch?v=xlABhbnNrfI</p>"},{"location":"mkdocss/introduction/#commands","title":"Commands","text":"<p>tip: defalt file path : C:\\Windows\\System32\\dingzhensite </p> <p>\u4f46\u662f\u7531\u4e8e\u539f\u8def\u5f84<code>System32</code> \u4f3c\u4e4e\u64cd\u4f5c\u8d77\u6765\u90fd\u9700\u8981\u4ee5\u7ba1\u7406\u5458\u65b9\u5f0f\u8fd0\u884c\uff0c\u4e71\u6539\u8bbf\u95ee\u6743\u9650\u4ee5\u6211\u73b0\u6709\u7684\u77e5\u8bc6\u6c34\u5e73\u6709\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898\uff0c\u9042\u5728\u65b0\u8def\u5f84\u4e0b\u590d\u523b\u4e86\u539f\u5148\u7684\u64cd\u4f5c C:\\Users\\78100\\fortesting \u8fd9\u6837\u7c98\u8d34\u56fe\u7247\u7b49\u64cd\u4f5c\u5c31\u65b9\u4fbf\u591a\u4e86\u54c8\u54c8\u54c8</p> <p></p> <ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.(only necessary when first operation)</li> <li><code>cd dingzhensite</code> - change to the project directory:  C:\\Windows\\System32\\dingzhensite.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"mkdocss/introduction/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"mkdocss/mkdocs_arrange/","title":"\u6709\u7528\u7684\u6392\u7248","text":"Note <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Abstract <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Info <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Tip <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Success <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Question <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Warning <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Failure <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Danger <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Bug <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Example <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Quote <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"mkdocss/mkdocs_arrange/#code","title":"code","text":"add_numbers.py<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre> example.cpp<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n//others \nint main() {\n    return 0;\n}\n</code></pre>"},{"location":"mkdocss/mkdocs_arrange/#content-tabs","title":"Content Tabs","text":"<p>This is some examples of content tabs.</p>"},{"location":"mkdocss/mkdocs_arrange/#generic-content","title":"Generic Content","text":"Plain textUnordered listOrdered list <p>This is some plain text</p> <ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul> <ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol> <p>Here is an example with different code blocks:</p>"},{"location":"mkdocss/mkdocs_arrange/#code-blocks-in-content-tabs","title":"Code Blocks in Content Tabs","text":"PythonJavaScript <pre><code>def main():\n    print(\"Hello world!\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <pre><code>function main() {\n    console.log(\"Hello world!\");\n}\n\nmain();\n</code></pre> <p>This is an example of an adominition with a title:</p> <p>Title of the callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Collapsible callout:</p> Collapsible callout <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"mkdocss/mkdocs_method/","title":"mkdocs-method","text":""},{"location":"mkdocss/mkdocs_method/#_1","title":"\u8c03\u8bd5","text":"<p>\u5728\u7ec8\u7aef\u6216\u8005cmd\u4e2d\u8df3\u8f6c\u5230<code>cd fortesting</code>\u8def\u5f84\u4e0b\uff0c</p> <p>\u5efa\u8bae\u662fcmd\u5355\u5f00\u4e00\u4e2a\u8f93\u5165\uff0c\u56e0\u4e3aINFO\u5b9e\u65f6\u66f4\u65b0 </p> <p><pre><code>mkdocs serve\n</code></pre> <code>contrl+C</code>\u9000\u51fa</p> <ul> <li><code>git remote -v</code>\u68c0\u67e5\u6240\u8fde\u63a5\u7684\u8fdc\u7a0b\u4ed3\u5e93</li> <li><code>git branch</code>\u67e5\u770b\u5f53\u524d\u5206\u652f</li> </ul> <p>note</p> <p>\u6211\u6240\u91c7\u7528\u7684\u672c\u5730\u4ed3\u5e93\u4e0egit\u4ed3\u5e93\u95f4\u7684\u8fde\u63a5\u65b9\u5f0f\u7531HTTPS\u534f\u8bae\u6539\u4e3a\u4e86SSH\u534f\u8bae,\u5426\u5219\u9ed8\u8ba4\u7684HTTPS\u534f\u8bae\u603b\u662f\u5728\u6267\u884c<code>git push origin main</code>\u547d\u4ee4\u65f6\u5019\u7531\u4e8e\u94fe\u63a5\u8d85\u65f6\u800c\u6302\u6389</p>"},{"location":"mkdocss/mkdocs_method/#_2","title":"\u4fee\u6539\u672c\u5730\u6587\u4ef6\u540e\u540c\u6b65\u5230\u90e8\u7f72\u7ad9\u70b9","text":"<p>\u5728\u7ec8\u7aef<code>PS C:\\Users\\78100\\fortesting&gt;</code>\u8def\u5f84\u4e0b\u64cd\u4f5c\uff08\u547d\u4ee4\u884c\u6216\u8bb8\u4e5f\u662f\u53ef\u4ee5\u7684\uff09</p> <p>\u8981\u5c06\u672c\u5730\u4fee\u6539\u7684 <code>md</code> \u6587\u4ef6\u540c\u6b65\u5230 GitHub \u5e76\u90e8\u7f72\u5230 GitHub Pages\uff0c\u4f60\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a</p>"},{"location":"mkdocss/mkdocs_method/#1","title":"1. \u786e\u4fdd\u4f60\u7684\u672c\u5730\u4ed3\u5e93\u662f\u6700\u65b0\u7684","text":"<p>\u9996\u5148\uff0c\u786e\u8ba4\u4f60\u672c\u5730\u7684 Git \u4ed3\u5e93\u662f\u6700\u65b0\u7684\uff0c\u5e76\u4e14\u8fde\u63a5\u7684\u662f\u6b63\u786e\u7684\u8fdc\u7a0b\u4ed3\u5e93\u3002</p> <ul> <li>\u5728\u672c\u5730\u4ed3\u5e93\u76ee\u5f55\u4e2d\uff0c\u6253\u5f00\u7ec8\u7aef\u6216\u547d\u4ee4\u884c\uff0c\u4f7f\u7528 <code>git status</code> \u67e5\u770b\u5f53\u524d\u72b6\u6001\uff1a   <pre><code>git status\n</code></pre>   \u8fd9\u4f1a\u663e\u793a\u4f60\u672c\u5730\u7684\u4fee\u6539\u72b6\u6001\uff0c\u786e\u4fdd\u4f60\u5df2\u7ecf\u4fdd\u5b58\u4e86\u4fee\u6539\u3002</li> </ul>"},{"location":"mkdocss/mkdocs_method/#2","title":"2. \u6dfb\u52a0\u5e76\u63d0\u4ea4\u4fee\u6539","text":"<p>\u4f60\u5bf9 <code>.md</code> \u6587\u4ef6\u7684\u4fee\u6539\u9700\u8981\u6dfb\u52a0\u5e76\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\uff1a</p> <ul> <li> <p>\u6dfb\u52a0\u4fee\u6539\u7684\u6587\u4ef6\uff1a   <pre><code>git add .\n</code></pre>   \u6216\u8005\uff0c\u4f60\u4e5f\u53ef\u4ee5\u53ea\u6dfb\u52a0\u7279\u5b9a\u7684\u6587\u4ef6\uff1a   <pre><code>git add &lt;filename&gt;.md\n</code></pre></p> </li> <li> <p>\u63d0\u4ea4\u4fee\u6539\uff0c\u5e76\u5199\u4e0a\u7b80\u77ed\u7684\u63d0\u4ea4\u4fe1\u606f\uff1a   <pre><code>git commit -m \"\u66f4\u65b0\u4e86MD\u6587\u4ef6\uff0c\u4fee\u6539\u4e86xxx\u5185\u5bb9\"\n</code></pre></p> </li> </ul>"},{"location":"mkdocss/mkdocs_method/#3-github","title":"3. \u63a8\u9001\u4fee\u6539\u5230 GitHub","text":"<p>\u5c06\u672c\u5730\u63d0\u4ea4\u7684\u4fee\u6539\u63a8\u9001\u5230 GitHub \u4ed3\u5e93\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5c06\u4fee\u6539\u63a8\u9001\u5230 GitHub\uff1a</p> <ul> <li>\u63a8\u9001\u5230 <code>main</code> \u5206\u652f\uff08\u6216\u8005\u4f60\u8bbe\u7f6e\u7684\u5176\u4ed6\u5206\u652f\uff09\uff1a   <pre><code>git push origin main\n</code></pre></li> </ul>"},{"location":"mkdocss/mkdocs_method/#4-github-pages","title":"4. \u7b49\u5f85 GitHub Pages \u66f4\u65b0","text":"<p>GitHub \u4f1a\u81ea\u52a8\u91cd\u65b0\u90e8\u7f72\u4f60\u7684\u7ad9\u70b9\uff0c\u901a\u5e38\u51e0\u5206\u949f\u5185\uff0c\u66f4\u65b0\u5c31\u4f1a\u5728 GitHub Pages \u4e0a\u751f\u6548\u3002\u4f60\u53ef\u4ee5\u8bbf\u95ee\u4f60\u90e8\u7f72\u7ad9\u70b9\u7684 URL\uff08\u5982 <code>https://username.github.io/repository-name/</code>\uff09\u6765\u67e5\u770b\u66f4\u65b0\u662f\u5426\u6210\u529f\u3002</p>"},{"location":"mkdocss/mkdocs_method/#5-mkdocs","title":"5. \u5982\u679c\u4f7f\u7528\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\uff08\u4f8b\u5982 MkDocs\uff09","text":"<p>\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u50cf MkDocs \u8fd9\u6837\u7684\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\uff0c\u53ef\u80fd\u9700\u8981\u5148\u751f\u6210\u7ad9\u70b9\u5185\u5bb9\uff08\u6bd4\u5982\u5c06 <code>.md</code> \u6587\u4ef6\u6e32\u67d3\u6210 HTML\uff09\uff0c\u7136\u540e\u5c06\u751f\u6210\u7684\u6587\u4ef6\u63a8\u9001\u5230 GitHub\u3002</p> <p>\u5047\u8bbe\u4f60\u4f7f\u7528 MkDocs\uff0c\u4f60\u901a\u5e38\u9700\u8981\uff1a</p> <ul> <li> <p>\u6784\u5efa\u7ad9\u70b9\uff1a   <pre><code>mkdocs build\n</code></pre></p> </li> <li> <p>\u5c06\u751f\u6210\u7684 <code>site/</code> \u76ee\u5f55\u5185\u5bb9\u63a8\u9001\u5230 GitHub\uff1a   \u5982\u679c\u4f60\u4f7f\u7528 <code>gh-pages</code> \u5206\u652f\u6765\u90e8\u7f72\u7ad9\u70b9\uff0c\u53ef\u4ee5\u6267\u884c\uff1a   <pre><code>git subtree push --prefix site origin gh-pages\n</code></pre></p> </li> </ul>"},{"location":"others/Clash_Royale/Clash_Royale/","title":"Clash Royale","text":"<p>https://royaleapi.com/decks/popular</p> <p>royale api</p>"},{"location":"others/Clash_Royale/Clash_Royale/#traditional-decks","title":"Traditional Decks","text":""},{"location":"others/Clash_Royale/Clash_Royale/#interesting-decks","title":"Interesting Decks","text":""},{"location":"python/project/","title":"data-marketplace","text":""},{"location":"python/project/#arch-linux","title":"\u914d\u7f6e\u73af\u5883\uff1a\u5728arch linux\u4e2d","text":""},{"location":"python/project/#1-python","title":"1. \u5b89\u88c5\u57fa\u7840 Python \u73af\u5883","text":"<pre><code># \u66f4\u65b0\u7cfb\u7edf\nsudo pacman -Syu\n\n# \u5b89\u88c5 Python\uff08\u901a\u5e38\u5df2\u9884\u88c5\uff09\nsudo pacman -S python python-pip\n\n# \u9a8c\u8bc1\u5b89\u88c5\npython --version\npip --version\n</code></pre>"},{"location":"python/project/#2-miniconda","title":"2. \u5b89\u88c5 Miniconda\uff08\u63a8\u8350\uff09","text":"<p>\u4ec0\u4e48\u662fconda\uff1f</p> <p>Conda \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5305\u7ba1\u7406\u5668\u548c\u73af\u5883\u7ba1\u7406\u7cfb\u7edf\uff0c\u4e13\u4e3a\u6570\u636e\u79d1\u5b66\u548c\u673a\u5668\u5b66\u4e60\u9879\u76ee\u8bbe\u8ba1\u3002</p> <ul> <li>\u5305\u7ba1\u7406\u5668\uff1a\u5b89\u88c5\u3001\u66f4\u65b0\u3001\u5220\u9664\u8f6f\u4ef6\u5305     <pre><code># \u5b89\u88c5\u5305\uff08\u6bd4\u5982\u60a8\u4ee3\u7801\u4e2d\u7528\u7684 numpy\uff09\nconda install numpy\n\n# \u5b89\u88c5\u7279\u5b9a\u7248\u672c\nconda install numpy=1.21.0\n\n# \u641c\u7d22\u5305\nconda search numpy\n\n# \u66f4\u65b0\u5305\nconda update numpy\n</code></pre></li> <li>\u73af\u5883\u7ba1\u7406\u5668\uff1a\u521b\u5efa\u9694\u79bb\u7684 Python \u73af\u5883     <pre><code># \u521b\u5efa\u73af\u5883\uff08\u60a8\u521a\u624d\u7528\u7684\uff09\nconda create -n data-marketplace python=3.13\n\n# \u6fc0\u6d3b\u73af\u5883\nconda activate data-marketplace\n\n# \u67e5\u770b\u6240\u6709\u73af\u5883\nconda env list\n\n# \u5220\u9664\u73af\u5883\nconda env remove -n old-env\n</code></pre></li> </ul> <pre><code># \u4e0b\u8f7d Miniconda\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n\n# \u5b89\u88c5\nbash Miniconda3-latest-Linux-x86_64.sh\n\n# \u91cd\u65b0\u52a0\u8f7d shell \u914d\u7f6e -\u300b \u8f6c\u5230(base)\u6a21\u5f0f\uff1a(base) [dingzhen@77qq ~]$\nsource ~/.bashrc\n\n# \u9a8c\u8bc1\u5b89\u88c5\nconda --version\n</code></pre> <p>(base) \u8868\u793a\u60a8\u5f53\u524d\u6fc0\u6d3b\u7684 conda \u73af\u5883\u540d\u79f0\u3002</p> <p></p> <p>\u73af\u5883\u5207\u6362\u5b9e\u4f8b\uff1a <pre><code># \u5f53\u524d\u5728 base \u73af\u5883\n(base) [dingzhen@77qq ~]$ \n\n# \u521b\u5efa\u9879\u76ee\u4e13\u7528\u73af\u5883\n(base) [dingzhen@77qq ~]$ conda create -n data-marketplace python=3.9\n\n# \u6fc0\u6d3b\u9879\u76ee\u73af\u5883\n(base) [dingzhen@77qq ~]$ conda activate data-marketplace\n\n# \u63d0\u793a\u7b26\u4f1a\u53d8\u6210\uff1a\n(data-marketplace) [dingzhen@77qq ~]$ \n\n# \u9000\u51fa\u73af\u5883\u56de\u5230 base\n(data-marketplace) [dingzhen@77qq ~]$ conda deactivate\n(base) [dingzhen@77qq ~]$ \n</code></pre></p>"},{"location":"python/project/#3","title":"3. \u4e3a\u60a8\u7684\u9879\u76ee\u521b\u5efa\u4e13\u7528\u73af\u5883","text":"<pre><code># \u4f7f\u7528\u60a8\u73b0\u6709\u7684 Python 3.13.5 \u521b\u5efa conda \u73af\u5883\n(base) [dingzhen@77qq ~]$ conda create -n data-marketplace python=3.13\n\n# \u6fc0\u6d3b\u73af\u5883\n(base) [dingzhen@77qq ~]$ conda activate data-marketplace\n\n# \u9a8c\u8bc1\u73af\u5883\u4e2d\u7684 Python \u7248\u672c\n(data-marketplace) [dingzhen@77qq ~]$ python --version\n\n\n# \u6d4b\u8bd5 numpy \u662f\u5426\u6b63\u5e38\u5de5\u4f5c\npython -c \"import numpy as np; print(np.__version__)\"\n\n# \u6d4b\u8bd5\u60a8\u7684 metrics.py \u6587\u4ef6\npython -c \"from utils.metrics import rmse; print('Environment ready!')\"\n</code></pre> <p>Tip</p> <p>\u66ff\u4ee3\u65b9\u6848\uff1a\u4f7f\u7528\u7cfb\u7edf\u5305\u7ba1\u7406\u5668(\u5982\u679c\u60a8\u4e0d\u60f3\u4f7f\u7528 conda\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u7cfb\u7edf\u7684 Python) <pre><code># \u4f7f\u7528 pip \u5b89\u88c5\u9879\u76ee\u6240\u9700\u5305\n[dingzhen@77qq ~]$ pip install numpy pandas scikit-learn matplotlib\n\n# \u6216\u4f7f\u7528 Arch \u5305\u7ba1\u7406\u5668\n[dingzhen@77qq ~]$ sudo pacman -S python-numpy python-pandas python-scikit-learn python-matplotlib\n</code></pre></p> <p>\u63a8\u8350\u7684\u5de5\u4f5c\u6d41\u7a0b: <pre><code># \u6bcf\u6b21\u5f00\u59cb\u5de5\u4f5c\nconda activate data-marketplace\ncd /home/dingzhen/Projects/data-marketplace\n\n# \u8fd0\u884c\u60a8\u7684\u4ee3\u7801\npython -c \"from utils.metrics import gain_function; print('Environment ready!')\"\n</code></pre></p>"},{"location":"python/python_learning/","title":"python learning","text":""},{"location":"python/python_learning/#io","title":"I/O","text":"<ul> <li> <p><code>print(f\"\")</code> \u7528\u6cd5\uff1a\u5c06\u53d8\u91cf\u503c\u5d4c\u5165\u5230\u5b57\u7b26\u4e32\u4e2d\u3002     <pre><code>name = \"\u5f20\u4e09\"\nage = 25\nprint(f\"\u6211\u7684\u540d\u5b57\u662f {name}\uff0c\u4eca\u5e74 {age} \u5c81\")\n# \u8f93\u51fa: \u6211\u7684\u540d\u5b57\u662f \u5f20\u4e09\uff0c\u4eca\u5e74 25 \u5c81\n</code></pre></p> <pre><code>a = 10\nb = 5\nprint(f\"{a} + {b} = {a + b}\")\n# \u8f93\u51fa: 10 + 5 = 15\n</code></pre> </li> </ul>"},{"location":"skill/ai/model/","title":"Model","text":""},{"location":"skill/ai/model/#llama-factory","title":"llama-factory","text":"<p>\u4f7f\u7528uv\u53bb\u7ba1\u7406python\u9879\u76ee\u7684\u4f9d\u8d56 <pre><code># \u514b\u9686 LLaMA-Factory\ngit clone https://github.com/hiyouga/LLaMA-Factory.git\ncd LLaMA-Factory\n# \u4f7f\u7528 uv \u521b\u5efa\u865a\u62df\u73af\u5883\nuv venv\n# \u6fc0\u6d3b\u865a\u62df\u73af\u5883\nsource .venv/bin/activate\n\n# \u786e\u8ba4\u73af\u5883\u5df2\u6fc0\u6d3b\uff08\u547d\u4ee4\u884c\u524d\u9762\u5e94\u8be5\u663e\u793a (.venv)\uff09\nwhich python\n\n(LLaMA-Factory) huanghan@ub-server:/sda/huanghan/llama-factory/LLaMA-Factory$ which python\n/sda/huanghan/llama-factory/LLaMA-Factory/.venv/bin/python\n</code></pre> <pre><code># \u5b89\u88c5 LLaMA-Factory \u4f9d\u8d56\nuv pip install -e .\n\n# \u7b49\u5f85\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u9a8c\u8bc1\u5b89\u88c5\nllamafactory-cli --help\n\n# \u542f\u52a8\nllamafactory-cli webui\n</code></pre></p> <p>\u4e0d\u77e5\u9053\u6709\u4ec0\u4e48\u7528\u7684 <pre><code># \u542f\u7528\u7f51\u9875\u4ea4\u4e92\nllamafactory-cli webchat \\\n--model-path /sda/llm_weights/llama3.2-3B \\\n--context-size 2048 \\\n--device cuda \\\n--gpu-id 0 \\\n--threads 16 \\\n--port 8080\n\n#\u672c\u5730\u6d4f\u89c8\u5668\u8bbf\u95ee\nhttp://localhost:8080\n</code></pre></p> <p></p>"},{"location":"skill/ai/model/#llm_weights","title":"llm_weights","text":"<p>llama3.2-3B </p> <p>/sda/llm_weights/llama3.2-3B</p>"},{"location":"skill/ai/model/#docker-llama-factorydeepseek-r1-distill-qwen-7b","title":"\ud83d\ude80 \u4f7f\u7528Docker + LLaMA Factory\u5fae\u8c03DeepSeek-R1-Distill-Qwen-7B\u6a21\u578b\u5b9e\u73b0\u65b0\u95fb\u6807\u9898\u5206\u7c7b","text":""},{"location":"skill/ai/model/#easy-dataset-llama-factory","title":"Easy Dataset \u00d7 LLaMA Factory: \ud83d\ude80 \u8ba9\u5927\u6a21\u578b\u9ad8\u6548\u5b66\u4e60\u9886\u57df\u77e5\u8bc6","text":"<p>\u4e00\u8fb9\u7528 Easy Dataset \u6574\u7406\u3001\u6807\u6ce8\u3001\u5bfc\u51fa\u6570\u636e\u96c6\uff0c\u4e00\u8fb9\u7528 LLaMA-Factory \u6216 BAGEL \u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\u548c\u63a8\u7406\u3002</p> <p>\u4f7f\u7528\u65b9\u6cd5\u4e8cdocker\u5b89\u88c5easy dataset</p> <p>\u5c06Dockerfile\u4e2d\u6240\u6709\u6362\u6210\u955c\u50cf\u6e90\uff0c\u5e76\u914d\u7f6e\u597d\u4ee3\u7406 <pre><code>huanghan@ub-server:/sda/huanghan/llama-factory/easy-dataset$ vim Dockerfile\n</code></pre> </p> <p>\u6784\u5efaDocker\u955c\u50cf</p> <p>7897 \u662f\u4ee3\u7406\u670d\u52a1\u5668\u76d1\u542c\u7684\u7aef\u53e3 \u4ee5\u4e0b\u547d\u4ee4\u4e2d \u672c\u673aip\u4f1a\u53d8\u5316</p> <p><pre><code>docker build --build-arg http_proxy=http://10.192.19.232:7897 --build-arg https_proxy=http://10.192.19.232:7897 -t easy-dataset .\n</code></pre> \u542f\u52a8 Easy Dataset \u5bb9\u5668\uff08\u5982\u679c\u8fd8\u6ca1\u542f\u52a8\uff09 <pre><code>docker run -d \\\n  -p 1717:1717 \\\n  -v /sda/huanghan/llama-factory/easy-dataset/local-db:/app/local-db \\\n  --name easy-dataset \\\n  easy-dataset\n</code></pre></p> <p>\u8bbf\u95ee <pre><code>http://\u670d\u52a1\u5668IP:1717\n</code></pre> </p> <p>\u5728\u6b64\u4e4b\u524d\u4f60\u7684\u6570\u636e\u96c6 \u4f8b\u5982\u6559\u7a0b\u91cc\u7684\u5feb\u624b\u7684balabala\u514b\u9686\u5230/sda/huanghan/llama-factory/data/FinancialData-SecondQuarter-2024\u540e</p> <p>\u628a\u6570\u636e\u590d\u5236\u5230\u672c\u5730\u6302\u8f7d\u76ee\u5f55,\u5bb9\u5668\u91cc\u7684 /app/local-db/FinancialData-SecondQuarter-2024 \u5c31\u80fd\u770b\u5230\u6570\u636e\u4e86 <pre><code>cp -r /sda/huanghan/llama-factory/data/FinancialData-SecondQuarter-2024 /sda/huanghan/llama-factory/easy-dataset/local-db/\n</code></pre></p>"},{"location":"skill/ai/model/#bagel","title":"BAGEL","text":"<pre><code>cd /sda/huanghan/bagel/BAGEL\n#\u521b\u5efa\u5e76\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff08\u7528 uv\uff09\nuv venv\n\n#\u4ee5\u540e\u6bcf\u6b21\u90fd\u8981\u8fd9\u4e00\u6b65\nsource .venv/bin/activate\n\n# \u5982\u679c\u53ea\u6709 requirements.txt\uff0c\u53ef\u4ee5\u5148\u7528 pip \u5b89\u88c5\u4e00\u6b21\uff0c\u7136\u540e\u7528 uv \u7ba1\u7406\u540e\u7eed\u4f9d\u8d56\uff1a\nuv pip install -r requirements.txt\n# \u68c0\u67e5\u4f9d\u8d56\u5b89\u88c5\u60c5\u51b5\nuv pip list\n</code></pre> <p>\u76f4\u63a5\u6307\u5b9a\u7a7a\u95f2\u7684 GPU 2 \u6216 4 \u6765\u8fd0\u884c BAGEL\uff01\u4ee5\u53ca\u5236\u5b9a\u6743\u91cd\u8def\u5f84 <pre><code>nvidia-smi\n\nCUDA_VISIBLE_DEVICES=2 python3 app.py --model_path /sda/llm_weights/BAGEL-7B-MoT\n</code></pre></p> <p></p> <p></p> <p></p> <pre><code># \u67e5\u627e\u5f53\u524d\u7cfb\u7edf\u4e2d\u6240\u6709\u4e0e python \u76f8\u5173\u7684\u8fdb\u7a0b\nps aux | grep python\n</code></pre> <pre><code>ps aux | grep BAGEL\nps aux | grep app.py\n</code></pre> <p></p>"},{"location":"skill/git/","title":"hi","text":""},{"location":"skill/git/git/","title":"Git","text":"<code>git_auto.py</code>\u811a\u672c <p>\u4e00\u4efd<code>git_auto.py</code>\u811a\u672c\u5b9e\u73b0\u81ea\u52a8\u62c9\u53d6\u5e76\u63d0\u4ea4 <pre><code>import subprocess\nimport sys\n\ndef run_command_interactive(command):\n    \"\"\"\u6267\u884c\u9700\u8981\u4ea4\u4e92\u8f93\u5165\u7684\u547d\u4ee4\"\"\"\n    try:\n        print(f\"\u6267\u884c\u547d\u4ee4: {command}\")\n        result = subprocess.run(command, shell=True, text=True, encoding='utf-8')\n        return result.returncode == 0\n    except Exception as e:\n        print(f\"\u6267\u884c\u547d\u4ee4\u65f6\u51fa\u9519: {e}\")\n        return False\n\ndef run_command(command):\n    \"\"\"\u6267\u884c\u4e0d\u9700\u8981\u4ea4\u4e92\u7684\u547d\u4ee4\"\"\"\n    try:\n        result = subprocess.run(command, shell=True, capture_output=True, text=True, encoding='utf-8')\n        if result.returncode != 0:\n            print(f\"\u9519\u8bef: {result.stderr}\")\n            return False\n        if result.stdout.strip():\n            print(result.stdout)\n        return True\n    except Exception as e:\n        print(f\"\u6267\u884c\u547d\u4ee4\u65f6\u51fa\u9519: {e}\")\n        return False\n\ndef main():\n    print(\"=== Git \u81ea\u52a8\u63d0\u4ea4\u63a8\u9001\u811a\u672c ===\")\n\n    # \u83b7\u53d6\u63d0\u4ea4\u4fe1\u606f\n    commit_msg = input(\"\u8bf7\u8f93\u5165\u63d0\u4ea4\u4fe1\u606f: \")\n    if not commit_msg.strip():\n        print(\"\u9519\u8bef\uff1a\u63d0\u4ea4\u4fe1\u606f\u4e0d\u80fd\u4e3a\u7a7a\uff01\")\n        return\n\n    print(\"\\n\u5f00\u59cb\u6267\u884c Git \u64cd\u4f5c...\")\n    '''\n    # 1. Git pull (\u9700\u8981\u4ea4\u4e92\u8f93\u5165\u5bc6\u7801)\n    print(\"[1/4] \u6b63\u5728\u62c9\u53d6\u8fdc\u7a0b\u66f4\u65b0...\")\n    print(\"\u53ef\u80fd\u9700\u8981\u8f93\u5165 SSH \u5bc6\u94a5\u7684 passphrase...\")\n    if not run_command_interactive(\"git pull\"):\n        print(\"Git pull \u5931\u8d25\uff01\")\n        return\n    '''\n    # 2. Git add .\n    print(\"[2/4] \u6b63\u5728\u6dfb\u52a0\u6240\u6709\u66f4\u6539...\")\n    if not run_command(\"git add .\"):\n        print(\"Git add \u5931\u8d25\uff01\")\n        return\n\n    # 3. Git commit\n    print(\"[3/4] \u6b63\u5728\u63d0\u4ea4\u66f4\u6539...\")\n    if not run_command(f'git commit -m \"{commit_msg}\"'):\n        print(\"Git commit \u5931\u8d25\u6216\u6ca1\u6709\u66f4\u6539\u9700\u8981\u63d0\u4ea4\")\n\n    # 4. Git push (\u53ef\u80fd\u4e5f\u9700\u8981\u4ea4\u4e92\u8f93\u5165\u5bc6\u7801)\n    print(\"[4/4] \u6b63\u5728\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93...\")\n    # print(\"\u53ef\u80fd\u9700\u8981\u8f93\u5165 SSH \u5bc6\u94a5\u7684 passphrase...\")\n    # if not run_command_interactive(\"git push\"):  # \u73b0\u5728\u6211\u5df2\u7ecf\u505a\u4e86ssh\u514d\u5bc6\u914d\u7f6e\u4e86\n    if not run_command(\"git push\"):\n        print(\"Git push \u5931\u8d25\uff01\")\n        return\n\n    print(\"\\n\u2705 \u6240\u6709\u64cd\u4f5c\u5b8c\u6210\uff01\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre></p> <code>git.sh</code>\u811a\u672c <pre><code>#!/bin/bash\n# filepath: /home/man567/code/sfml-template/git_push.sh\n\n# \u63d0\u793a\u7528\u6237\u8f93\u5165\u63d0\u4ea4\u4fe1\u606f\necho \"\u8bf7\u8f93\u5165\u63d0\u4ea4\u4fe1\u606f\uff1a\"\nread commit_message\n\n# \u6267\u884c Git \u547d\u4ee4\ngit add .\ngit commit -m \"$commit_message\"\ngit push origin master\n\n# \u63d0\u793a\u5b8c\u6210\necho \"\u4ee3\u7801\u5df2\u6210\u529f\u63d0\u4ea4\u5e76\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff01\"\n</code></pre>"},{"location":"skill/git/git/#_1","title":"\ud83e\udded \u5efa\u4ed3\u5e93","text":"<pre><code>git clone git@github.com:\u7528\u6237\u540d/\u4ed3\u5e93\u540d.git\n</code></pre> <p>\u800c\u540e\u76f4\u63a5 <pre><code>git add .\ngit commit -m \"1\"\ngit push origin master\n</code></pre></p> <code>git.sh</code>\u811a\u672c <pre><code>#!/bin/bash\n# filepath: /home/man567/code/sfml-template/git_push.sh\n\n# \u63d0\u793a\u7528\u6237\u8f93\u5165\u63d0\u4ea4\u4fe1\u606f\necho \"\u8bf7\u8f93\u5165\u63d0\u4ea4\u4fe1\u606f\uff1a\"\nread commit_message\n\n# \u6267\u884c Git \u547d\u4ee4\ngit add .\ngit commit -m \"$commit_message\"\ngit push origin master\n\n# \u63d0\u793a\u5b8c\u6210\necho \"\u4ee3\u7801\u5df2\u6210\u529f\u63d0\u4ea4\u5e76\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff01\"\n</code></pre>"},{"location":"skill/git/git/#github","title":"\u82e5\u672c\u5730\u4ed3\u5e93\u4e0a\u4f20github","text":"<p>\u5982\u679c\u5df2\u7ecf\u6709\u672c\u5730\u4ed3\u5e93\u5df2\u6709\u5185\u5bb9\uff0c\u60f3\u4e0a\u4f20\u5230github\u4e0a\u67d0\u4e2a\u65b0\u5efa\u4ed3\u5e93\uff1a</p> <pre><code>git init\ngit remote add origin git@github.com:zhuiluozhiji/minisql.git #\u6dfb\u52a0\u8fdc\u7a0b\n\nssh -T git@github.com #\u68c0\u67e5\u94fe\u63a5\n\ngit remote -v # \u68c0\u67e5\n\ngit add .\ngit commit -m \"Initial commit\"\ngit push -u origin master # -u\u662f --set-upstream \u7684\u7b80\u5199\uff0c\u4f5c\u7528\u662f\u5c06\u672c\u5730\u5206\u652f\u4e0e\u8fdc\u7a0b\u5206\u652f\u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb\n\n# \u52a0\u4e86-u \u4ee5\u540e\u53ea\u9700\n# \u4ee5\u540e\u53ea\u9700\ngit push\ngit pull\n</code></pre>"},{"location":"skill/git/git/#_2","title":"\u4e4b\u540e\u7684\u66f4\u6539\u4ec5\u9700\u8981\u7684\u64cd\u4f5c","text":"<p>\u8fdc\u7a0b\u4ed3\u5e93 main \u5206\u652f\u5df2\u7ecf\u6709\u63d0\u4ea4\uff08\u5982\uff1aREADME.md\uff09\uff0c\u800c\u4f60\u672c\u5730\u7684 main \u5206\u652f\u662f\u7a7a\u7684\u6216\u6ca1\u6709\u8fd9\u4e9b\u63d0\u4ea4\uff0c\u6240\u4ee5\u4f60\u76f4\u63a5\u63a8\u9001\u88ab\u62d2\u7edd\u4e86\u3002</p> <p>\u2705 \u89e3\u51b3\u65b9\u6848\uff1a\u5148\u62c9\u53d6\u8fdc\u7a0b\u5185\u5bb9\uff08\u5408\u5e76\u6216\u91cd\u5efa\u5386\u53f2\uff09 \u62c9\u53d6\u8fdc\u7a0b\u5e76\u5408\u5e76\uff08\u63a8\u8350\uff09 \u4fdd\u6301\u8fdc\u7a0b\u5386\u53f2\uff0c\u9002\u5408\u4f60\u5e0c\u671b\u4fdd\u7559\u8fdc\u7a0b\u5df2\u6709\u6587\u4ef6\uff1a <pre><code>git pull --rebase origin main\ngit pull origin main\n</code></pre></p> <p></p>"},{"location":"skill/git/git/#_3","title":"\u5f00\u53d1\u5206\u652f","text":"<p>\u67e5\u770b\u5386\u53f2\u63d0\u4ea4,\u627e\u5230\u4f60\u8981\u6062\u590d\u7684\u7248\u672c <pre><code>git log --oneline\n</code></pre> \u2705 \u60f3\u521b\u5efa\u65b0\u5206\u652f\u4ece\u65e7\u7248\u672c\u5f00\u53d1 \u57fa\u4e8e\u90a3\u4e2a commit \u521b\u5efa\u4e00\u4e2a\u65b0\u5206\u652f <pre><code>git checkout -b fix-from-old 4e5f6g7\n# \u521b\u5efa\u4e00\u4e2a\u65b0\u5206\u652f\u53eb fix-from-old,\u628a\u4f60\u5207\u6362\u5230\u8fd9\u4e2a\u65e7\u7248\u672c\u4e0a\n#  -b \u53c2\u6570\u7684\u4f5c\u7528\u662f\u521b\u5efa\u5e76\u5207\u6362\u5230\u65b0\u5206\u652f\u3002\n</code></pre> \u5f3a\u884c\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c,\u4f1a\u4e22\u5931\u672a\u63d0\u4ea4\u7684\u66f4\u6539 <pre><code>git reset --hard 4e5f6g7\n</code></pre> \u5728\u8fd9\u4e2a\u5206\u652f\u4e0a\u4fee\u6539\u548c\u63d0\u4ea4,\u63a8\u9001\u4f60\u7684\u5206\u652f\u5230 GitHub\u8fdc\u7a0b <pre><code>git push origin fix-from-old\n</code></pre> \u6539\u5b8c\u540e\u5408\u5e76\u56de\u4e3b\u5206\u652f\uff1a <pre><code># \u5207\u6362\u56de\u4e3b\u5206\u652f\ngit checkout main\n\n# \u62c9\u53d6\u6700\u65b0\u4ee3\u7801\uff08\u786e\u4fdd\u5e72\u51c0\uff09\uff1a\ngit pull origin main\n\n# \u5408\u5e76\u4f60\u7684\u65b0\u5206\u652f\uff1a(\u53ef\u80fd\u9700\u8981\u4f60\u624b\u52a8\u64cd\u4f5c\u5408\u5e76\u9009\u9879)\u9009\u84dd\u8272/\u7eff\u8272\u6a21\u5757\ngit merge fix-from-old\n\n# \u63a8\u9001\u5230 GitHub\uff1a\ngit push origin main\n</code></pre></p> <p>Question</p> <p><pre><code>(data-marketplace) [dingzhen@77qq data-marketplace]$ git pull\nEnter passphrase for key : \nThere is no tracking information for the current branch.\nPlease specify which branch you want to merge with.\nSee git-pull(1) for details.\n\n    git pull &lt;remote&gt; &lt;branch&gt;\n\nIf you wish to set tracking information for this branch you can do so with:\n\n    git branch --set-upstream-to=origin/&lt;branch&gt; fix-io-based-on-old\n</code></pre> \u4f60\u7684 Git \u62a5\u9519\u8bf4\u660e\uff1a\u4f60\u5f53\u524d\u6240\u5728\u7684\u5206\u652f <code>fix-io-based-on-old</code> \u6ca1\u6709\u8bbe\u7f6e\u4e0a\u6e38\uff08remote tracking\uff09\u5206\u652f\uff0c\u6240\u4ee5 Git \u4e0d\u77e5\u9053\u8be5\u4ece\u54ea\u4e2a\u8fdc\u7a0b\u5206\u652f\u62c9\u4ee3\u7801\u3002</p> <ul> <li>\ud83d\udca1 \u89e3\u51b3\u65b9\u6cd5\uff1a\u8bbe\u7f6e\u8fdc\u7a0b\u8ddf\u8e2a\u5206\u652f</li> </ul> <p>\u4f60\u53ea\u9700\u8981\u6267\u884c\u4e0b\u9762\u8fd9\u6761\u547d\u4ee4 \u4e00\u6b21\u6027\u7ed1\u5b9a\u8fdc\u7a0b\u5206\u652f\uff0c\u4e0b\u6b21\u5c31\u80fd\u76f4\u63a5 <code>git pull</code> \u4e86\uff1a</p> <pre><code>git branch --set-upstream-to=origin/fix-io-based-on-old\n</code></pre> <p>\u6216\u8005\u66f4\u660e\u786e\u5730\u6307\u5b9a\uff1a</p> <pre><code>git branch --set-upstream-to=origin/fix-io-based-on-old fix-io-based-on-old\n</code></pre> <ul> <li>\ud83d\udee0\ufe0f \u5982\u679c\u4f60\u521a\u521b\u5efa\u5e76\u63a8\u9001\u4e86\u8be5\u5206\u652f\uff08\u63a8\u8350\u7528\u6cd5\uff09</li> </ul> <p>\u4f60\u53ef\u4ee5\u4e5f\u7528\u8fd9\u79cd\u4e00\u6b21\u6027\u547d\u4ee4\u63a8\u9001\u5e76\u5efa\u7acb tracking\uff1a</p> <pre><code>git push -u origin fix-io-based-on-old\n</code></pre> <p>\u89e3\u91ca\uff1a</p> <ul> <li><code>-u</code>\uff08\u6216 <code>--set-upstream</code>\uff09\u8868\u793a\u5efa\u7acb\u8fdc\u7a0b\u8ffd\u8e2a\u5173\u7cfb</li> <li>\u4e4b\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528 <code>git pull</code>\u3001<code>git push</code>\uff0c\u4e0d\u7528\u518d\u6307\u5b9a\u8fdc\u7a0b\u5206\u652f</li> </ul> <p>\u2705 \u4e4b\u540e\u4f60\u5c31\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\uff1a</p> <pre><code>git pull\ngit push\n</code></pre> <p>\u4f60\u4e0d\u786e\u5b9a\u5f53\u524d\u5728\u54ea\u4e2a\u5206\u652f\u3001\u5de5\u4f5c\u533a\u5e72\u4e0d\u5e72\u51c0 <pre><code>git checkout \u5206\u652f\u540d # \u5207\u6362\u5206\u652f\ngit branch #\u67e5\u770b\u6240\u6709\u672c\u5730\u5206\u652f\ngit status\n</code></pre></p> <p></p>"},{"location":"skill/git/git/#tag-release","title":"tag &amp; release","text":"<p>\u672c\u5730\u521b\u5efatag\u518d\u63a8\u9001 <pre><code># 1. \u67e5\u770b\u5f53\u524d commit id\uff08\u53ef\u9009\uff09\ngit log --oneline\n\n# 2. \u5728\u5f53\u524d\u63d0\u4ea4\u4e0a\u6253 tag\ngit tag v1.0.0\n\n# 3. \u63a8\u9001 tag \u5230\u8fdc\u7a0b\ngit push origin v1.0.0\n</code></pre></p>"},{"location":"skill/git/git/#github-actionrelease","title":"\u4f7f\u7528github action\u6765\u81ea\u52a8\u5316release\uff08\u6ca1\u6709\u5c1d\u8bd5\u8fc7\uff09","text":""},{"location":"skill/git/git_config/","title":"config","text":""},{"location":"skill/git/git_config/#git","title":"git\u514d\u5bc6\u64cd\u4f5c","text":"<p>\u4f7f\u7528\u65e0\u5bc6\u7801\u7684 SSH \u5bc6\u94a5 <pre><code># -N \"\" \u8868\u793a\u7a7a\u5bc6\u7801\nssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N \"\"\n</code></pre> \u8986\u76d6\u73b0\u6709\u5bc6\u94a5\uff08\u5982\u679c\u4e0d\u518d\u9700\u8981\u65e7\u5bc6\u94a5\uff09 <pre><code># \uff08-y \u8868\u793a\u5f3a\u5236\u8986\u76d6\uff09\nssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N \"\" -y\n</code></pre> \u5c06\u516c\u94a5\u6dfb\u52a0\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff08GitHub/GitLab\u7b49\uff09 <pre><code>cat ~/.ssh/id_ed25519.pub\n</code></pre></p> <p>Git Bash \u4ecd\u7136\u5c1d\u8bd5\u4f7f\u7528\u65e7\u7684 RSA \u5bc6\u94a5,\u786e\u4fdd SSH \u4f7f\u7528 id_ed25519 \u800c\u4e0d\u662f <code>id_rsa</code> <pre><code>mv ~/.ssh/id_rsa ~/.ssh/id_rsa.backup  # \u5907\u4efd\u65e7\u5bc6\u94a5\uff08\u53ef\u9009\uff09\nmv ~/.ssh/id_rsa.pub ~/.ssh/id_rsa.pub.backup\n</code></pre> \u7136\u540e\u786e\u8ba4\u516c\u94a5\u5185\u5bb9\uff1a <pre><code>cat ~/.ssh/id_ed25519.pub\n</code></pre> \u5c06\u8f93\u51fa\u6dfb\u52a0\u5230github\uff1a\u767b\u5f55 GitHub \u2192 Settings \u2192 SSH and GPG keys \u2192 New SSH key\u3002 \u7c98\u8d34 id_ed25519.pub \u7684\u5185\u5bb9\u3002</p> <p>\u4fee\u590d\u6743\u9650\uff08Windows Git Bash\uff09\uff1a <pre><code>chmod 600 ~/.ssh/id_ed25519\nchmod 644 ~/.ssh/id_ed25519.pub\nchmod 700 ~/.ssh\n</code></pre></p> <p>\u9a8c\u8bc1 <pre><code>ssh -T git@github.com\n</code></pre> \u6210\u529f\u7684\u8fd4\u56de <pre><code>Hi \u4f60\u7684\u7528\u6237\u540d! You've successfully authenticated...\n</code></pre></p> <p>\u73b0\u5728\u5c31\u53ef\u4ee5\u6210\u529f\u4f7f\u7528git pull/push\u7684\u514d\u5bc6\u64cd\u4f5c</p>"},{"location":"skill/git/git_workflow/","title":"workflow","text":""},{"location":"skill/server/server/","title":"Server","text":""},{"location":"skill/server/server/#ip","title":"\u914d\u7f6e\u4ee3\u7406(\u52a8\u6001ip\u9700\u8981\u65e5\u5e38\u66f4\u6539)","text":"<p>\u5931\u8d25 <pre><code>curl -I https://github.com\n</code></pre> windows terminal <pre><code>ipconfig\n</code></pre> \u83b7\u5f97ip\u540e\u76f4\u63a5\u524d\u5f80\u670d\u52a1\u5668\u7684 <pre><code>vim ~/.bashrc\n\nexport http_proxy=\"http://myip:7897\"\nexport https_proxy=\"http://myip:7897\"\n\nsource ~/.bashrc\n</code></pre> 7897 \u662f\u4ee3\u7406\u670d\u52a1\u5668\u76d1\u542c\u7684\u7aef\u53e3</p> <p>\u67e5\u770b\u5f53\u524d\u4ee3\u7406\u670d\u52a1\u5668ip\uff1a <pre><code>huanghan@ub-server:/sda/huanghan/llama-factory/easy-dataset$ echo $http_proxy\nhttp://10.192.19.232:7897\nhuanghan@ub-server:/sda/huanghan/llama-factory/easy-dataset$ echo $https_proxy\nhttp://10.192.19.232:7897\n</code></pre></p>"},{"location":"skill/server/server/#_1","title":"\u8fdb\u7a0b","text":"<p><pre><code>ps aux | grep python \n</code></pre> \u67e5\u627e\u5f53\u524d\u7cfb\u7edf\u4e2d\u6240\u6709\u4e0e python \u76f8\u5173\u7684\u8fdb\u7a0b\uff0c\u5e76\u663e\u793a\u5b83\u4eec\u7684\u8be6\u7ec6\u4fe1\u606f\uff08\u5982\u8fdb\u7a0b\u53f7\u3001\u7528\u6237\u3001CPU/\u5185\u5b58\u5360\u7528\u3001\u542f\u52a8\u547d\u4ee4\u7b49\uff09\u3002 1. ps aux</p> <pre><code>- ps \u662f\u201cprocess status\u201d\u7684\u7f29\u5199\uff0c\u7528\u4e8e\u663e\u793a\u5f53\u524d\u7cfb\u7edf\u4e2d\u7684\u8fdb\u7a0b\u4fe1\u606f\u3002\n- a\uff1a\u663e\u793a\u6240\u6709\u7528\u6237\u7684\u8fdb\u7a0b\uff08\u800c\u4e0d\u4ec5\u4ec5\u662f\u5f53\u524d\u7528\u6237\u7684\uff09\u3002\n- u\uff1a\u4ee5\u7528\u6237\u4e3a\u4e3b\u7684\u683c\u5f0f\u663e\u793a\u8fdb\u7a0b\u4fe1\u606f\uff08\u4f1a\u663e\u793a\u7528\u6237\u540d\u3001CPU \u5360\u7528\u3001\u5185\u5b58\u5360\u7528\u7b49\uff09\u3002\n- x\uff1a\u663e\u793a\u6ca1\u6709\u63a7\u5236\u7ec8\u7aef\u7684\u8fdb\u7a0b\uff08\u6bd4\u5982\u540e\u53f0\u8fdb\u7a0b\uff09\u3002\n</code></pre> <ol> <li>| grep python</li> </ol> <p>|\uff08\u7ba1\u9053\u7b26\uff09\u628a\u524d\u9762 ps aux \u7684\u8f93\u51fa\u7ed3\u679c\u4f20\u9012\u7ed9\u540e\u9762\u7684\u547d\u4ee4\u3002 grep python \u7528\u4e8e\u7b5b\u9009\u5305\u542b\u201cpython\u201d\u5173\u952e\u5b57\u7684\u884c\uff0c\u4e5f\u5c31\u662f\u67e5\u627e\u6240\u6709\u4e0e python \u76f8\u5173\u7684\u8fdb\u7a0b\u3002</p> <p>\uff0c\u65b9\u4fbf\u540e\u7eed\u7ba1\u7406\uff08\u5982\u7ec8\u6b62\u8fdb\u7a0b\uff09\u3002</p>"},{"location":"skill/shell/shell/","title":"\u811a\u672c","text":""},{"location":"skill/shell/shell/#shell","title":"shell","text":"<p>\u6df7\u4e2a\u773c\u719f</p>"},{"location":"skill/shell/shell/#git","title":"git\u81ea\u52a8\u63d0\u4ea4\u63a8\u9001","text":"<pre><code>#!/bin/bash\n# filepath: /home/man567/code/sfml-template/git_push.sh\n\n# \u63d0\u793a\u7528\u6237\u8f93\u5165\u63d0\u4ea4\u4fe1\u606f\necho \"\u8bf7\u8f93\u5165\u63d0\u4ea4\u4fe1\u606f\uff1a\"\nread commit_message\n\n# \u6267\u884c Git \u547d\u4ee4\ngit add .\ngit commit -m \"$commit_message\"\ngit push origin master\n\n# \u63d0\u793a\u5b8c\u6210\necho \"\u4ee3\u7801\u5df2\u6210\u529f\u63d0\u4ea4\u5e76\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff01\"\n</code></pre>"},{"location":"skill/shell/shell/#cmake","title":"cmake\u81ea\u52a8\u7f16\u8bd1\u8fd0\u884c","text":"<pre><code>#!/bin/bash\n# filepath: /home/man567/code/sfml-template/build_and_run.sh\n\n# \u5207\u6362\u5230\u811a\u672c\u6240\u5728\u76ee\u5f55\uff08\u9879\u76ee\u6839\u76ee\u5f55\uff09\ncd \"$(dirname \"$0\")\"\n\n# \u521b\u5efa\u5e76\u8fdb\u5165 build \u76ee\u5f55\nmkdir -p build\ncd build\n\n# \u5982\u679c\u6ca1\u6709\u751f\u6210 Makefile\uff0c\u5219\u8fd0\u884c cmake\nif [ ! -f Makefile ]; then\n    cmake .. || { echo \"CMake \u914d\u7f6e\u5931\u8d25\uff01\"; exit 1; }\nfi\n\n# \u8fd0\u884c make\nmake || { echo \"\u7f16\u8bd1\u5931\u8d25\uff01\"; exit 1; }\n\n# \u63d0\u793a\u7f16\u8bd1\u5b8c\u6210\necho \"\u7f16\u8bd1\u5b8c\u6210\uff01\u53ef\u6267\u884c\u6587\u4ef6\u4f4d\u4e8e build/bin \u76ee\u5f55\u4e2d\u3002\"\n\ncd .. # \u5207\u6362\u5230\u811a\u672c\u6240\u5728\u76ee\u5f55\uff0c\u5373\u9879\u76ee\u6839\u76ee\u5f55,\u907f\u514dload\u56fe\u7247\u8d44\u6e90\u7b49\u76f8\u5bf9\u8def\u5f84\u9519\u8bef\n./build/bin/main\n</code></pre> <pre><code>\n</code></pre>"},{"location":"skill/shell/shell/#windows-gitpy","title":"windows: git\u63d0\u4ea4\u63a8\u9001\u811a\u672c(.py)","text":"<pre><code># git_auto.py\nimport subprocess\nimport sys\n\ndef run_command_interactive(command):\n    \"\"\"\u6267\u884c\u9700\u8981\u4ea4\u4e92\u8f93\u5165\u7684\u547d\u4ee4\"\"\"\n    try:\n        print(f\"\u6267\u884c\u547d\u4ee4: {command}\")\n        result = subprocess.run(command, shell=True, text=True, encoding='utf-8')\n        return result.returncode == 0\n    except Exception as e:\n        print(f\"\u6267\u884c\u547d\u4ee4\u65f6\u51fa\u9519: {e}\")\n        return False\n\ndef run_command(command):\n    \"\"\"\u6267\u884c\u4e0d\u9700\u8981\u4ea4\u4e92\u7684\u547d\u4ee4\"\"\"\n    try:\n        result = subprocess.run(command, shell=True, capture_output=True, text=True, encoding='utf-8')\n        if result.returncode != 0:\n            print(f\"\u9519\u8bef: {result.stderr}\")\n            return False\n        if result.stdout.strip():\n            print(result.stdout)\n        return True\n    except Exception as e:\n        print(f\"\u6267\u884c\u547d\u4ee4\u65f6\u51fa\u9519: {e}\")\n        return False\n\ndef main():\n    print(\"=== Git \u81ea\u52a8\u63d0\u4ea4\u63a8\u9001\u811a\u672c ===\")\n\n    # \u83b7\u53d6\u63d0\u4ea4\u4fe1\u606f\n    commit_msg = input(\"\u8bf7\u8f93\u5165\u63d0\u4ea4\u4fe1\u606f: \")\n    if not commit_msg.strip():\n        print(\"\u9519\u8bef\uff1a\u63d0\u4ea4\u4fe1\u606f\u4e0d\u80fd\u4e3a\u7a7a\uff01\")\n        return\n\n    print(\"\\n\u5f00\u59cb\u6267\u884c Git \u64cd\u4f5c...\")\n\n    # 1. Git pull (\u9700\u8981\u4ea4\u4e92\u8f93\u5165\u5bc6\u7801)\n    print(\"[1/4] \u6b63\u5728\u62c9\u53d6\u8fdc\u7a0b\u66f4\u65b0...\")\n    print(\"\u53ef\u80fd\u9700\u8981\u8f93\u5165 SSH \u5bc6\u94a5\u7684 passphrase...\")\n    if not run_command_interactive(\"git pull\"):\n        print(\"Git pull \u5931\u8d25\uff01\")\n        return\n\n    # 2. Git add .\n    print(\"[2/4] \u6b63\u5728\u6dfb\u52a0\u6240\u6709\u66f4\u6539...\")\n    if not run_command(\"git add .\"):\n        print(\"Git add \u5931\u8d25\uff01\")\n        return\n\n    # 3. Git commit\n    print(\"[3/4] \u6b63\u5728\u63d0\u4ea4\u66f4\u6539...\")\n    if not run_command(f'git commit -m \"{commit_msg}\"'):\n        print(\"Git commit \u5931\u8d25\u6216\u6ca1\u6709\u66f4\u6539\u9700\u8981\u63d0\u4ea4\")\n\n    # 4. Git push (\u53ef\u80fd\u4e5f\u9700\u8981\u4ea4\u4e92\u8f93\u5165\u5bc6\u7801)\n    print(\"[4/4] \u6b63\u5728\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93...\")\n    print(\"\u53ef\u80fd\u9700\u8981\u8f93\u5165 SSH \u5bc6\u94a5\u7684 passphrase...\")\n    if not run_command_interactive(\"git push\"):\n        print(\"Git push \u5931\u8d25\uff01\")\n        return\n\n    print(\"\\n\u2705 \u6240\u6709\u64cd\u4f5c\u5b8c\u6210\uff01\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>subprocess</p> <p>Python \u7684\u6807\u51c6\u5e93\u6a21\u5757\uff0c\u7528\u4e8e\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\u548c\u5b50\u8fdb\u7a0b\u3002</p> <ol> <li>\u5bfc\u5165\u6a21\u5757 <code>import subprocess  # \u5bfc\u5165\u6574\u4e2a\u6a21\u5757</code></li> <li>\u4f7f\u7528\u6a21\u5757\u4e2d\u7684\u51fd\u6570      <pre><code>subprocess.run()     # \u6267\u884c\u547d\u4ee4\nsubprocess.Popen()   # \u521b\u5efa\u5b50\u8fdb\u7a0b\n</code></pre></li> <li>\u7528\u6cd5 <pre><code>import subprocess\n\n# \u57fa\u672c\u7528\u6cd5\nresult = subprocess.run(\"git status\", shell=True)\n\n# \u5b8c\u6574\u7528\u6cd5\nresult = subprocess.run(\n    command=\"git pull\",\n    shell=True, #\u5728 shell \u4e2d\u6267\u884c \u901a\u8fc7\u7cfb\u7edf shell\uff08Windows \u7684 cmd \u6216 PowerShell\uff09\u6267\u884c\u547d\u4ee4\n    text=True, #\u4e00\u822c\u5c31\u662ftrue \u4ee5\u6587\u672c\u5b57\u7b26\u4e32\u5f62\u5f0f\u5904\u7406\u8f93\u5165\u8f93\u51fa\uff0c\u800c\u4e0d\u662f\u5b57\u8282\n    encoding='utf-8', #\u5b57\u7b26\u7f16\u7801 \u786e\u4fdd\u4e2d\u6587\u7b49\u975e ASCII \u5b57\u7b26\u6b63\u786e\u663e\u793a\n    capture_output=True\n)\n</code></pre></li> <li>\u4e3b\u8981\u5c5e\u6027 <pre><code>    result.returncode    # \u9000\u51fa\u72b6\u6001\u7801\uff080=\u6210\u529f\uff0c\u975e0=\u5931\u8d25\uff09\n    result.stdout        # \u6807\u51c6\u8f93\u51fa\u5185\u5bb9\n    result.stderr        # \u9519\u8bef\u8f93\u51fa\u5185\u5bb9\n    result.args          # \u6267\u884c\u7684\u547d\u4ee4\u53c2\u6570\n</code></pre></li> </ol> <p>\u82e5\u9700\u8981\u6355\u83b7\u8f93\u51fa\u6267\u884c\uff1a<code>capture_output=True</code> <pre><code>import subprocess\nresult = subprocess.run(\"git pull\", shell=True, capture_output=True)\nprint(result.stdout)  # \u53ef\u4ee5\u83b7\u53d6\u8f93\u51fa\n</code></pre> </p> <p></p> <ul> <li><code>strip()</code> \u662f Python \u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u79fb\u9664\u5b57\u7b26\u4e32\u4e24\u7aef\u7684\u7a7a\u767d\u5b57\u7b26\u3002     <pre><code># \u5224\u65ad\u8f93\u51fa\u662f\u5426\u6709\u5b9e\u9645\u5185\u5bb9\nif result.stdout.strip():\n    print(result.stdout)\n</code></pre></li> </ul>"}]}